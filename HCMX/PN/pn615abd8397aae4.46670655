<html><h2>Actions in sync</h2>

<div class="Admonition_Note"><span class="autonumber">Note&nbsp;</span>When publishing a design, the user can optionally perform validation upon actions tied to OO flows within the design hierarchy. This validation checks whether the DND configuration is in sync with the current state of the OO flow signature.</div>

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>GET</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>/dnd/api/service/design/&lt;design id&gt;/actionsInSync</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>200 - Success<br>
			<br>
			400 - Invalid inputs<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response</td>
			<td>See example</td>
		</tr>
	</tbody>
</table>
The following is an example of the structure of the response data in JSON format:

<pre>{
  "message": "",
  "actions": {}
}
</pre>

<h3>Error Response with Actions in sync</h3>
Note: The "actions" JSON field in the error response is of the form<br>
<code>&lt;service design component display name&gt; : [<br>
&nbsp;&nbsp;&lt;action display name&gt;<br>
&nbsp;&nbsp;...<br>
]</code><br>
The following is an example of the structure of the response data in JSON format:
<pre>{
  "message": "The following action signatures have changed since they were last edited and need to be manually reviewed and updated.",
  "actions": {
    "Blank Infrastructure Service": [
      "ParamMappingIO"
    ],
    "Blank Server": [
      "ParamMappingIO"
    ]
  }
}
</pre>

<h2>Publish design</h2>

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>POST</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>/dnd/api/service/design/&lt;design id&gt;/publish</td>
		</tr>
		<tr>
			<td>Request body</td>
			<td>No request body</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>200 - Success<br>
			<br>
			400 - Error response<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response body</td>
			<td>See example</td>
		</tr>
	</tbody>
</table>
The following is an example of the structure of the response data in JSON format:

<pre>{
  "isValidationSuccessful": true
}
</pre>
<br>
The following is an example of the structure of the response data in JSON format during an Error:<br>
<code>Status Code: 400</code>

<pre>{
  "exception": {
    "stacktrace": &lt;stacktrace eliminated for brevity&gt;,
    "message": "The design contains validation errors. Use the Designer tab to view and correct them."
  },
  "code": "DesignPublishFailed",
  "csa_args": null
}
</pre>

<h2>List versions of a design</h2>

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>GET</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>/dnd/api/container/&lt;container id&gt;</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>200 - Success<br>
			<br>
			400 - Invalid inputs<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response</td>
			<td>See example</td>
		</tr>
	</tbody>
</table>
The following is an example of the structure of the response data in JSON format:

<pre>{
  "@self" : "/12345/dnd/api/container/sequence/2c908cb97353331f017353344e660003",
  "@type" : "urn:x-hp:2012:software:cloud:data_model:blueprint:collection",
  "@created" : "2020-07-15T16:00:03.686Z",
  "@modified" : "2020-07-16T15:23:00.057Z",
  "global_id" : "2c908cb97353331f017353344e660003",
  "name" : "AAA",
  "description" : "",
  "icon" : "/12345/dnd/api/blobstore/IT_infrastructure.png?tag=library",
  "ext" : {
    "csa_name_key" : "bc7b6bae-548c-44e6-9c33-055a1c7f5add",
    "csa_critical_system_object" : false
  },
  "container_type" : "SEQUENCE_ARTIFACT_CONTAINER",
  "tags" : [ ],
  "members" : [ {
    "@self" : "/12345/dnd/api/service/design/2c908cb97353331f01735334531c0005",
    "@type" : "urn:x-hp:2012:software:cloud:data_model:blueprint",
    "@created" : "2020-07-15T16:00:04.892Z",
    "description" : "",
    "published" : false,
    "version" : "1.0.0",
    "upgrade_available" : false,
    "designId" : "2c908cb97353331f01735334531c0005"
  }, {
    "@self" : "/12345/dnd/api/service/design/2c908cb97353331f01735838bc59011a",
    "@type" : "urn:x-hp:2012:software:cloud:data_model:blueprint",
    "@created" : "2020-07-16T15:23:00.057Z",
    "description" : "AAA July 16, 2020 3:22:59 PM UTC",
    "published" : false,
    "version" : "2.0.0",
    "upgrade_available" : false,
    "designId" : "2c908cb97353331f01735838bc59011a"
  } ],
  "@total_results" : 2,
  "@items_per_page" : 2,
  "@start_index" : 0
}
</pre>

<h2>Removing remote reference</h2>

<p>When an offering is created for the published design, there will be a remote reference of the offering created on the design. Before removing the remote reference, you need to get the RemoteOfferingId (Design name) for the corresponding offering in SMAX.</p>
&nbsp;

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>GET</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>rest/&lt;TENANT&gt;/ems/Offering?layout=Id,RemoteOfferingId,Service,Description,DisplayLabel,ProviderId&amp;filter=(Id='&lt;offering_id&gt;')</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>200 - Success<br>
			<br>
			400 - Error response<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response</td>
			<td>See example</td>
		</tr>
	</tbody>
</table>
The following is an example of the structure of the response data in JSON format:

<pre>{
&nbsp; &nbsp; "entities": [
&nbsp; &nbsp; &nbsp; &nbsp; {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "entity_type": "Offering",
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "properties": {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "ProviderId": "10092",
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "Description": "",
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "LastUpdateTime": 1636395835171,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "RemoteOfferingId": "1a48b991-b23c-4173-8d9a-1430dcb9c600",
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "Service": "10101",
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "Id": "10093",
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "DisplayLabel": "VCenter Compute 18.3.0"
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "related_properties": {}
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; ],
&nbsp; &nbsp; "meta": {
&nbsp; &nbsp; &nbsp; &nbsp; "completion_status": "OK",
&nbsp; &nbsp; &nbsp; &nbsp; "total_count": 0,
&nbsp; &nbsp; &nbsp; &nbsp; "errorDetailsList": [],
&nbsp; &nbsp; &nbsp; &nbsp; "errorDetailsMetaList": [],
&nbsp; &nbsp; &nbsp; &nbsp; "query_time": 1636454148717771
&nbsp; &nbsp; }
}
</pre>
Use the following API to remove the remote reference on the design before unpublishing the design;

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>DELETE</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>/dnd/api/v1/design/&lt;RemoteOfferingId&gt;/remoteReference/&lt;smax-offering-id&gt;</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>204 - Deleted<br>
			<br>
			400 - Error response<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response</td>
			<td>No response body</td>
		</tr>
	</tbody>
</table>

<h2>Unpublish design</h2>

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>POST</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>/dnd/api/service/design/&lt;design id&gt;/unpublish</td>
		</tr>
		<tr>
			<td>Request body</td>
			<td>No request body</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>204 - Success<br>
			<br>
			400 - Error response<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response body</td>
			<td>No response body</td>
		</tr>
	</tbody>
</table>

<h2>Delete a version of a design</h2>

<div class="Admonition_Note"><span class="autonumber">Note&nbsp;</span>You cannot delete the design when its in published, its is not recommended to do so. If you still want to cleanup, then you need to remove the remote reference created to the SMAX offering and then delete the design</div>

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>DELETE</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>/dnd/api/service/design/&lt;design id&gt;</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>204 - Deleted<br>
			<br>
			400 - Error response<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response</td>
			<td>No response body</td>
		</tr>
	</tbody>
</table>

<h2>Delete the design container</h2>

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>HTTP method</td>
			<td>DELETE</td>
		</tr>
		<tr>
			<td>REST API</td>
			<td>/dnd/api/container/&lt;container id&gt;</td>
		</tr>
		<tr>
			<td>Returns</td>
			<td>204 - Deleted<br>
			<br>
			400 - Error response<br>
			403 - Unauthorized or invalid user</td>
		</tr>
		<tr>
			<td>Response</td>
			<td>No response body</td>
		</tr>
	</tbody>
</table>
</html>