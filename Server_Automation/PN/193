<html><p>This service provides the ability audits more important it allows you to schedule an audit to execute against a server.</p>

<p></p>

<h2>Start an Audit job</h2>

<p>To start an Audit immediately we run the following. The setup of the TS has been omitted for brevity.</p>

<p></p>

<pre>AuditTaskService = ts.compliance.sco.AuditTaskService
auditRef = ts.search.SearchService.findObjRefs(
    'AuditTaskVO.name = "RedHat 5 audit"','audit_task')[0]
userTag = "My Audit"
jobRef = AuditTaskService.startAudit(auditRef, userTag, None, None)
print "Submitted job: %s" % jobRef
</pre>

<p>You will note that a list of servers to run against was not provided as the Audit Task is defined with this information.</p>

<p><img src="./mediawiki/images/PN/AuditTasks-location.png"><img src="./mediawiki/images/PN/AuditTasks.png"></p>

<p></p>

<p>Execution:</p>

<p></p>

<pre>[root@dc1 AuditTaskService]# ./startAudit.py
Submitted job: Audit Servers with audit task "RedHat 5 audit" (JobRef:114310001)</pre>

<p></p>

<p><img src="./mediawiki/images/PN/AuditTasks-job.png"></p>

<p></p>

<p></p>

<p></p>

<h2>Script to Audit</h2>

<p>Create a simple audit from a shell script using the scripts exit code for success/failure of the custom check. It may be helpful to use this relationship diagram to understand how the classes related to each other when reading the code. The relationship diagram uses Crow's foot notation (also Martin notation).</p>

<p></p>

<p><img src="./mediawiki/images/PN/graphviz1397582284742532212.png"></p>

<p></p>

<p>You may notice in the diagram that a task can have many policies however the assignment would indicate this is a 1:1 relationship.</p>

<p></p>

<pre>at_vo.policy = ap</pre>

<p>This form is used as the AuditPolicyVO has not been created and there is no Ref available. The API designer realized this problem and to avoid having to save half the object before saving the rest a&nbsp;<tt>setPolicy()</tt>&nbsp;method was introduced. Indeed there is a 1:M method call but the AuditPolicy instance has no Ref(erence) until it's saved.</p>

<pre>at_vo.policyRefs = [ap.ref]</pre>

<p>This example will explore several classes and their relationships to an Audit.</p>

<pre>#!/opt/opsware/bin/python
# create a simple audit from a shell script
import sys
from pytwist import twistserver
from pytwist.com.opsware.server import ServerRef
from pytwist.com.opsware.compliance.sco import AuditTaskVO, AuditPolicy
from pytwist.com.opsware.compliance.sco.policy import *

if len(sys.argv) &lt; 3:
    print 'usage: %s &lt;policy name&gt; &lt;server id&gt; &lt;script name&gt;' % sys.argv[0]
    sys.exit(1)

name = sys.argv[1]
server_id = sys.argv[2]
script = open(sys.argv[3]).read()

ts = twistserver.TwistServer()

at_vo = AuditTaskVO()
ap    = AuditPolicy()
sop   = ScriptOutputPolicy()
sor   = ScriptOutputRule()
pcd   = PolicyComparisonDefinition()
rsv   = RuleSourceValue()

rsv.resolvedValue = None
rsv.source = 0 ## LITERAL_SOURCE
rsv.value = '0' ## exit code 0

pcd.caseIgnore = 0
pcd.notModifier = 0
pcd.argsType = 'EXITCODE' ## EXIT_CODE_ARGS_TYPE
pcd.operator = 'EQ'       ## equal to
pcd.values = [ rsv ]

sor.argumentsForCmd = None
sor.disabled = 0
sor.displayName = name
sor.ignoreNonZeroExitCode = 0
sor.policyComparisonDefinition = pcd
sor.policyType = 'POLICY'
sor.script = script
sor.scriptType = 'SH'
sor.remediateArgs = None
sor.remediateScript = None
sor.remediateScriptType = None

sop.rules = [ sor ]

ap.SCOPolicy = [ sop ]
ap.policyPlatformType = 'UNIX'
at_vo.policy = ap
at_vo.name = name
at_vo.targets = [ ServerRef(server_id) ]

v = ts.compliance.sco.AuditTaskService.create(at_vo)
print 'created new audit, ID = %s' % v.ref.id
</pre>

<p>The script audit check</p>

<pre>[root@dc1 AuditTaskService]# cat hasTmpHello.sh
#!/bin/sh
test -f /tmp/hello.txt</pre>

<p>Execution</p>

<pre>[root@dc1 AuditTaskService]# ./script2audit.py hasTmpHello 91190001 hasTmpHello.sh
created new audit, ID = 1220001</pre>

<p></p>

<p><img src="./mediawiki/images/PN/hasTmpHelloAudit.png"></p>

<p></p>

<p><img src="./mediawiki/images/PN/hasTmpHelloAudit-target.png"></p>

<p></p>
</html>