<p class="line874" style="font-family: sans-serif; font-size: 16px; letter-spacing: normal;">pytwist is a Python access layer to the Unified API (UAPI). Its called a unified API because the same API is accessible with Java, inside the OGFS as a virtual filesystem, as SOAP calls via the OCC, and exposed to the Python programming language via pytwist which is our focus.<span class="anchor" id="line-77"></span><span class="anchor" id="line-78"></span></p><p class="line874" style="font-family: sans-serif; font-size: 16px; letter-spacing: normal;">The GUI Desktop Client calls the UAPI using Java. Anything you can do in the User Interface you can do with pytwist. This allows Server Automation to be used as an Automation Engine being driven from scripts and 3rd party integrations.<span class="anchor" id="line-79"></span><span class="anchor" id="line-80"></span></p><p class="line862" style="font-family: sans-serif; font-size: 16px; letter-spacing: normal;">The Twist component is responsible for providing the UAPI and the Twist is written in Java. Subsequently the documentation for the UAPI is provided in its JavaDoc form.<span class="anchor" id="line-81"></span><span class="anchor" id="line-82"></span></p><p class="line874" style="font-family: sans-serif; font-size: 16px; letter-spacing: normal;">This poses a problem if you are writing in Python using the pytwist interface. You need to translate from Java documentation to Python documentation on the fly as there is no python variant of the UAPI documentation. The translation is not difficult. Once you understand the few simple rules you'll realize that separate python API documentation isn't required.<span class="anchor" id="line-83"></span><span class="anchor" id="line-84"></span></p><p class="line874" style="font-family: sans-serif; font-size: 16px; letter-spacing: normal;">A demonstration is the best way to introduce pytwist. Lets start with Server Automation's equivalent of a Hello World program.</p>