<p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Device groups are containers for device references. Device groups enable end users to categorize devices, to perform the same operation on multiple devices, and to control device access with security permissions.<span class="anchor" id="line-812"></span><span class="anchor" id="line-813"></span></p><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Device groups are hierarchical: A device group can contain other device groups. Also, a device can belong to more than one device group. Device groups are either public or private. Public device groups are arranged hierarchically, starting at the top with the public device group root. Likewise, private device groups are under the private device group root.<span class="anchor" id="line-814"></span><span class="anchor" id="line-815"></span></p><p class="line862" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Device groups are static or dynamic. To change the membership of a static device group, you indicate specific devices with the&nbsp;<tt class="backtick"></tt><tt class="backtick">addDevice</tt><tt class="backtick"></tt>&nbsp;or&nbsp;<tt class="backtick"></tt><tt class="backtick">removeDevice</tt><tt class="backtick"></tt>&nbsp;methods. The membership of a dynamic device group depends on its rule, which is similar to a search expression. You specify a rule with the&nbsp;<tt class="backtick"></tt><tt class="backtick">setDynamicRule</tt><tt class="backtick"></tt>&nbsp;method.<span class="anchor" id="line-816"></span><span class="anchor" id="line-817"></span></p><p class="line867" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;"></p><h2 id="Exploring_a_device_group_structure" style="color: rgb(0, 0, 0); letter-spacing: normal; text-transform: none; font-family: sans-serif;">Exploring a device group structure</h2><div><p class="line862" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Diving right in to investigate several DeviceGroupService methods;&nbsp;<tt class="backtick"></tt><tt class="backtick">getChildren,&nbsp;getDeviceGroupVO,&nbsp;getDeviceGroupByPath</tt><tt class="backtick"></tt>&nbsp;by way of an example that prints an ASCII tree from a supplied device group root path.<span class="anchor" id="line-820"></span><span class="anchor" id="line-821"></span><span class="anchor" id="line-822"></span><span class="anchor" id="line-823"></span><span class="anchor" id="line-824"></span><span class="anchor" id="line-825"></span><span class="anchor" id="line-826"></span><span class="anchor" id="line-827"></span><span class="anchor" id="line-828"></span><span class="anchor" id="line-829"></span><span class="anchor" id="line-830"></span><span class="anchor" id="line-831"></span><span class="anchor" id="line-832"></span><span class="anchor" id="line-833"></span><span class="anchor" id="line-834"></span><span class="anchor" id="line-835"></span><span class="anchor" id="line-836"></span><span class="anchor" id="line-837"></span><span class="anchor" id="line-838"></span><span class="anchor" id="line-839"></span><span class="anchor" id="line-840"></span><span class="anchor" id="line-841"></span><span class="anchor" id="line-842"></span><span class="anchor" id="line-843"></span><span class="anchor" id="line-844"></span><span class="anchor" id="line-845"></span><span class="anchor" id="line-846"></span><span class="anchor" id="line-847"></span><span class="anchor" id="line-848"></span><span class="anchor" id="line-849"></span><span class="anchor" id="line-850"></span><span class="anchor" id="line-851"></span><span class="anchor" id="line-852"></span><span class="anchor" id="line-853"></span><span class="anchor" id="line-854"></span><span class="anchor" id="line-1-85"></span></p><div class="highlight python" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="Comment" style="color: rgb(0, 128, 0);">#!/opt/opsware/bin/python</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_2"></span><span class="anchor" id="line-2-33"></span><span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_3"></span><span class="anchor" id="line-3-30"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">twistserver</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_4"></span><span class="anchor" id="line-4-21"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.common</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">NotFoundException</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_5"></span><span class="anchor" id="line-5-20"></span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_6"></span><span class="anchor" id="line-6-18"></span><span class="ID">ts</span> = <span class="ID">twistserver</span>.<span class="ID">TwistServer</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_7"></span><span class="anchor" id="line-7-13"></span><span class="ID">DGS</span> = <span class="ID">ts</span>.<span class="ID">device</span>.<span class="ID">DeviceGroupService</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_8"></span><span class="anchor" id="line-8-13"></span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_9"></span><span class="anchor" id="line-9-11"></span><span class="ResWord" style="color: rgb(160, 0, 0);">def</span> <span class="ID">render</span>(<span class="ID">ref</span>):</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_10"></span><span class="anchor" id="line-10-10"></span>    <span class="ID">lines</span> = []</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_11"></span><span class="anchor" id="line-11-7"></span>    <span class="ID">vo</span> = <span class="ID">DGS</span>.<span class="ID">getDeviceGroupVO</span>(<span class="ID">ref</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_12"></span><span class="anchor" id="line-12-6"></span>    <span class="ID">lines</span>.<span class="ID">append</span>(<span class="ID">vo</span>.<span class="ID">shortName</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_13"></span><span class="anchor" id="line-13-6"></span>    <span class="ID">children</span> = <span class="ID">DGS</span>.<span class="ID">getChildren</span>(<span class="ID">ref</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_14"></span><span class="anchor" id="line-14-6"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">for</span> <span class="ID">n</span>, <span class="ID">child</span> <span class="ResWord" style="color: rgb(160, 0, 0);">in</span> <span class="ResWord" style="color: rgb(160, 0, 0);">enumerate</span>(<span class="ID">children</span>):</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_15"></span><span class="anchor" id="line-15-6"></span>        <span class="ID">child_tree</span> = <span class="ID">render</span>(<span class="ID">child</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_16"></span><span class="anchor" id="line-16-6"></span>        <span class="ID">lines</span>.<span class="ID">append</span>(<span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);"> +- </span><span class="String" style="color: rgb(0, 64, 128);">"</span> + <span class="ID">child_tree</span>.<span class="ID">pop</span>(<span class="Number" style="color: rgb(0, 128, 192);">0</span>))</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_17"></span><span class="anchor" id="line-17-6"></span>        <span class="ResWord" style="color: rgb(160, 0, 0);">if</span> <span class="ID">n</span> == <span class="ResWord" style="color: rgb(160, 0, 0);">len</span>(<span class="ID">children</span>) - <span class="Number" style="color: rgb(0, 128, 192);">1</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_18"></span><span class="anchor" id="line-18-6"></span>            <span class="ID">lines</span>.<span class="ID">extend</span>(<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">    </span><span class="String" style="color: rgb(0, 64, 128);">'</span> + <span class="ID">line</span> <span class="ResWord" style="color: rgb(160, 0, 0);">for</span> <span class="ID">line</span> <span class="ResWord" style="color: rgb(160, 0, 0);">in</span> <span class="ID">child_tree</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_19"></span><span class="anchor" id="line-19-4"></span>        <span class="ResWord" style="color: rgb(160, 0, 0);">else</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_20"></span><span class="anchor" id="line-20-4"></span>            <span class="ID">lines</span>.<span class="ID">extend</span>(<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);"> |  </span><span class="String" style="color: rgb(0, 64, 128);">'</span> + <span class="ID">line</span> <span class="ResWord" style="color: rgb(160, 0, 0);">for</span> <span class="ID">line</span> <span class="ResWord" style="color: rgb(160, 0, 0);">in</span> <span class="ID">child_tree</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_21"></span><span class="anchor" id="line-21-4"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">return</span> <span class="ID">lines</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_22"></span><span class="anchor" id="line-22-3"></span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_23"></span><span class="anchor" id="line-23-3"></span><span class="ResWord" style="color: rgb(160, 0, 0);">if</span> <span class="ResWord" style="color: rgb(160, 0, 0);">len</span>(<span class="ID">sys</span>.<span class="ID">argv</span>) == <span class="Number" style="color: rgb(0, 128, 192);">1</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_24"></span><span class="anchor" id="line-24-3"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);">Usage: dgTree &lt;root&gt;</span><span class="String" style="color: rgb(0, 64, 128);">"</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_25"></span><span class="anchor" id="line-25-3"></span>    <span class="ID">sys</span>.<span class="ID">exit</span>(<span class="Number" style="color: rgb(0, 128, 192);">0</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_26"></span><span class="anchor" id="line-26-1"></span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_27"></span><span class="anchor" id="line-27-1"></span><span class="ID">root</span> = <span class="ID">sys</span>.<span class="ID">argv</span>[<span class="Number" style="color: rgb(0, 128, 192);">1</span>]</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_28"></span><span class="anchor" id="line-28-1"></span><span class="ResWord" style="color: rgb(160, 0, 0);">try</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_29"></span><span class="anchor" id="line-29-1"></span>    <span class="ID">ref</span> = <span class="ID">DGS</span>.<span class="ID">getDeviceGroupByPath</span>(<span class="ID">root</span>.<span class="ID">split</span>(<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">/</span><span class="String" style="color: rgb(0, 64, 128);">'</span>))</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_30"></span><span class="anchor" id="line-30-1"></span><span class="ResWord" style="color: rgb(160, 0, 0);">except</span> <span class="ID">NotFoundException</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_31"></span><span class="anchor" id="line-31-1"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">Path </span><span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);">%s</span><span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);"> not found</span><span class="String" style="color: rgb(0, 64, 128);">'</span> % <span class="ID">root</span></span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_32"></span><span class="anchor" id="line-32-1"></span>    <span class="ID">sys</span>.<span class="ID">exit</span>(<span class="Number" style="color: rgb(0, 128, 192);">1</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-88c5fee793608949f8d38de9fab7c8e0c50f2067_33"></span><span class="anchor" id="line-33-1"></span><span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="SPChar" style="color: rgb(0, 0, 192);">\n</span><span class="String" style="color: rgb(0, 64, 128);">'</span>.<span class="ID">join</span>(<span class="ID">render</span>(<span class="ID">ref</span>))</span>
</pre></div></div><span class="anchor" id="line-855" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Print a tree of this Device Group node.<span class="anchor" id="line-856"></span><span class="anchor" id="line-857"></span><span class="anchor" id="line-858"></span><span class="anchor" id="line-859"></span><span class="anchor" id="line-860"></span><span class="anchor" id="line-861"></span><span class="anchor" id="line-862"></span><span class="anchor" id="line-863"></span><span class="anchor" id="line-864"></span><span class="anchor" id="line-865"></span><span class="anchor" id="line-866"></span><span class="anchor" id="line-867"></span><span class="anchor" id="line-868"></span><span class="anchor" id="line-869"></span><span class="anchor" id="line-870"></span></p><pre style="color: rgb(0, 0, 0); border-width: 1pt; border-style: solid; border-color: rgb(174, 189, 204); background-color: rgb(243, 245, 247); padding: 5pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="anchor" id="line-1-15"></span>[root@dc1 demo]# ./dgTree.py "Public/Environments"
<span class="anchor" id="line-2-13"></span>Environments
<span class="anchor" id="line-3-8"></span> +- Development
<span class="anchor" id="line-4-6"></span> +- QA
<span class="anchor" id="line-5-4"></span> |   +- QA / Sample Target Group
<span class="anchor" id="line-6-4"></span> |       +- QA / Sample Target
<span class="anchor" id="line-7-4"></span> |           +- QA / Sample Target / Tomcat 6.0.20
<span class="anchor" id="line-8-4"></span> |           +- QA / Sample Target / Oracle 11.2.0.1
<span class="anchor" id="line-9-2"></span> +- Performance
<span class="anchor" id="line-10-1"></span> +- UAT
<span class="anchor" id="line-11-1"></span> +- PreProduction
<span class="anchor" id="line-12-1"></span> +- Production</pre><span class="anchor" id="line-871" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-872" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line867" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;"></p><h2 id="List_full_device_group_paths_a_server_is_a_member_of" style="color: rgb(0, 0, 0); letter-spacing: normal; text-transform: none; font-family: sans-serif;">List full device group paths a server is a member of</h2><span class="anchor" id="line-873" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-874" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">The previous tree example showed walking down to the children of a device group. This example show walking up the parents.&nbsp;<span class="anchor" id="line-875"></span>This script will walk up a nested device group hierarchy for a server and print out the full device group paths its a member of.<span class="anchor" id="line-876"></span><span class="anchor" id="line-877"></span><span class="anchor" id="line-878"></span><span class="anchor" id="line-879"></span><span class="anchor" id="line-880"></span><span class="anchor" id="line-881"></span><span class="anchor" id="line-882"></span><span class="anchor" id="line-883"></span><span class="anchor" id="line-884"></span><span class="anchor" id="line-885"></span><span class="anchor" id="line-886"></span><span class="anchor" id="line-887"></span><span class="anchor" id="line-888"></span><span class="anchor" id="line-889"></span><span class="anchor" id="line-890"></span><span class="anchor" id="line-891"></span><span class="anchor" id="line-1-87"></span></p><div class="highlight python" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">twistserver</span></span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_2"></span><span class="anchor" id="line-2-34"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.server</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">ServerRef</span></span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_3"></span><span class="anchor" id="line-3-31"></span><span class="ID">ts</span> = <span class="ID">twistserver</span>.<span class="ID">TwistServer</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_4"></span><span class="anchor" id="line-4-22"></span><span class="ID">ts</span>.<span class="ID">authenticate</span>(<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">user</span><span class="String" style="color: rgb(0, 64, 128);">'</span>, <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">password</span><span class="String" style="color: rgb(0, 64, 128);">'</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_5"></span><span class="anchor" id="line-5-21"></span><span class="ID">hostref</span> = <span class="ID">ServerRef</span>(<span class="Number" style="color: rgb(0, 128, 192);">91190001</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_6"></span><span class="anchor" id="line-6-19"></span><span class="ResWord" style="color: rgb(160, 0, 0);">for</span> <span class="ID">devgrp</span> <span class="ResWord" style="color: rgb(160, 0, 0);">in</span> <span class="ID">ts</span>.<span class="ID">server</span>.<span class="ID">ServerService</span>.<span class="ID">getDeviceGroups</span>(<span class="ID">hostref</span>):</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_7"></span><span class="anchor" id="line-7-14"></span>    <span class="ID">devgrpvo</span> = <span class="ID">ts</span>.<span class="ID">device</span>.<span class="ID">DeviceGroupService</span>.<span class="ID">getDeviceGroupVO</span>(<span class="ID">devgrp</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_8"></span><span class="anchor" id="line-8-14"></span>    <span class="ID">devgrptree</span> = []</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_9"></span><span class="anchor" id="line-9-12"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">while</span> <span class="Number" style="color: rgb(0, 128, 192);">1</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_10"></span><span class="anchor" id="line-10-11"></span>        <span class="ID">devgrptree</span>.<span class="ID">append</span>(<span class="ID">devgrpvo</span>.<span class="ID">shortName</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_11"></span><span class="anchor" id="line-11-8"></span>        <span class="ResWord" style="color: rgb(160, 0, 0);">if</span> <span class="ResWord" style="color: rgb(160, 0, 0);">not</span> <span class="ID">devgrpvo</span>.<span class="ID">parent</span>: <span class="ResWord" style="color: rgb(160, 0, 0);">break</span></span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_12"></span><span class="anchor" id="line-12-7"></span>        <span class="ID">devgrpvo</span> = <span class="ID">ts</span>.<span class="ID">device</span>.<span class="ID">DeviceGroupService</span>.<span class="ID">getDeviceGroupVO</span>(<span class="ID">devgrpvo</span>.<span class="ID">parent</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_13"></span><span class="anchor" id="line-13-7"></span>    <span class="ID">devgrptree</span>.<span class="ID">reverse</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-0a0d46d8a95a196da9887f7bcaf99b6f1789465e_14"></span><span class="anchor" id="line-14-7"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">/</span><span class="String" style="color: rgb(0, 64, 128);">'</span>.<span class="ID">join</span>(<span class="ID">devgrptree</span>)</span>
</pre></div></div><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;"><span class="anchor" id="line-892"></span>Sample execution<span class="anchor" id="line-893"></span><span class="anchor" id="line-894"></span><span class="anchor" id="line-895"></span><span class="anchor" id="line-896"></span><span class="anchor" id="line-897"></span></p><pre style="color: rgb(0, 0, 0); border-width: 1pt; border-style: solid; border-color: rgb(174, 189, 204); background-color: rgb(243, 245, 247); padding: 5pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="anchor" id="line-1-16"></span>[root@dc1 demo]# ./dgForAServer.py
<span class="anchor" id="line-2-14"></span>Device Groups/Public/Opsware/Operating Systems/All Linux/All Linux CentOS/CentOS 6 X86_64
<span class="anchor" id="line-3-9"></span>Device Groups/Public/10.x.x.x</pre><span class="anchor" id="line-898" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-899" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line867" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;"></p><h2 id="Creating_and_populating_a_static_device_group" style="color: rgb(0, 0, 0); letter-spacing: normal; text-transform: none; font-family: sans-serif;">Creating and populating a static device group</h2><span class="anchor" id="line-900" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-901" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Creating a static device group and populating it with servers is a two step process.<span class="anchor" id="line-902"></span></p><ul style="color: rgb(0, 0, 0); font-family: sans-serif;"><li><p class="line862" style="margin: 0.25em 0px;">First create the device group and get a DeviceGroupRef handle<span class="anchor" id="line-903"></span></p></li><li>Call a service method to add servers to the new device group<span class="anchor" id="line-904"></span></li></ul><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">The parent and shortName are mandatory attributes that must be present.<span class="anchor" id="line-905"></span><span class="anchor" id="line-906"></span><span class="anchor" id="line-907"></span><span class="anchor" id="line-908"></span><span class="anchor" id="line-909"></span><span class="anchor" id="line-910"></span><span class="anchor" id="line-911"></span><span class="anchor" id="line-912"></span><span class="anchor" id="line-913"></span><span class="anchor" id="line-914"></span><span class="anchor" id="line-915"></span><span class="anchor" id="line-916"></span><span class="anchor" id="line-917"></span><span class="anchor" id="line-918"></span><span class="anchor" id="line-919"></span><span class="anchor" id="line-920"></span><span class="anchor" id="line-921"></span><span class="anchor" id="line-922"></span><span class="anchor" id="line-1-89"></span></p><div class="highlight python" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="Comment" style="color: rgb(0, 128, 0);">#!/opt/opsware/bin/python</span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_2"></span><span class="anchor" id="line-2-35"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">twistserver</span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_3"></span><span class="anchor" id="line-3-32"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.device</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">DeviceGroupVO</span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_4"></span><span class="anchor" id="line-4-23"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.server</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">ServerRef</span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_5"></span><span class="anchor" id="line-5-22"></span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_6"></span><span class="anchor" id="line-6-20"></span><span class="ID">ts</span> = <span class="ID">twistserver</span>.<span class="ID">TwistServer</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_7"></span><span class="anchor" id="line-7-15"></span><span class="ID">ts</span>.<span class="ID">authenticate</span>(<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">user</span><span class="String" style="color: rgb(0, 64, 128);">'</span>,<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">password</span><span class="String" style="color: rgb(0, 64, 128);">'</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_8"></span><span class="anchor" id="line-8-15"></span><span class="ID">DGS</span> = <span class="ID">ts</span>.<span class="ID">device</span>.<span class="ID">DeviceGroupService</span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_9"></span><span class="anchor" id="line-9-13"></span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_10"></span><span class="anchor" id="line-10-12"></span><span class="ID">vo</span> = <span class="ID">DeviceGroupVO</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_11"></span><span class="anchor" id="line-11-9"></span><span class="ID">vo</span>.<span class="ID">parent</span> = <span class="ID">DGS</span>.<span class="ID">getPublicRoot</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_12"></span><span class="anchor" id="line-12-8"></span><span class="ID">vo</span>.<span class="ID">shortName</span> = <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">Programmatic DG</span><span class="String" style="color: rgb(0, 64, 128);">'</span></span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_13"></span><span class="anchor" id="line-13-8"></span><span class="ID">newVO</span> = <span class="ID">DGS</span>.<span class="ID">create</span>(<span class="ID">vo</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_14"></span><span class="anchor" id="line-14-8"></span><span class="ID">DGS</span>.<span class="ID">addDevices</span>(<span class="ID">newVO</span>.<span class="ID">ref</span>, [<span class="ID">ServerRef</span>(<span class="Number" style="color: rgb(0, 128, 192);">1192001</span>),</span>
<span class="line"><span class="LineAnchor" id="CA-eba40ddca9833a87caa9afab10b3206bea25e870_15"></span><span class="anchor" id="line-15-7"></span>                           <span class="ID">ServerRef</span>(<span class="Number" style="color: rgb(0, 128, 192);">11930001</span>)])</span>
</pre></div></div><span class="anchor" id="line-923" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line862" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">To root the new device group inside another device group we could supply a parent using&nbsp;<tt class="backtick"></tt><tt class="backtick">DGS.getDeviceGroupByPath</tt><tt class="backtick"></tt>&nbsp;that we saw earlier.<span class="anchor" id="line-924"></span><span class="anchor" id="line-925"></span></p><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">We could have also used this method to setup the device group<span class="anchor" id="line-926"></span><span class="anchor" id="line-927"></span><span class="anchor" id="line-928"></span><span class="anchor" id="line-1-91"></span></p><div class="highlight java" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-6d7762bd1da9ec6e7bc54ff8bff700bddee309bc" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="ID">setDevices</span>(<span class="ID">DeviceGroupRef</span> <span class="ID">self</span>, <span class="ID">DeviceReference</span>[] <span class="ID">devices</span>)</span>
</pre></div></div><span class="anchor" id="line-929" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line862" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Where as&nbsp;<tt class="backtick"></tt><tt class="backtick">addDevices</tt><tt class="backtick"></tt>&nbsp;will augment the devices with additional servers the&nbsp;<tt class="backtick"></tt><tt class="backtick">setDevices</tt><tt class="backtick"></tt>&nbsp;call replaces the current servers with a new set. This is a convenience method that saves us from having from doing&nbsp;<tt class="backtick"></tt><tt class="backtick">getDevices</tt><tt class="backtick"></tt>&nbsp;and then call&nbsp;<tt class="backtick"></tt><tt class="backtick">removeDevices</tt><tt class="backtick"></tt>&nbsp;on that list before finally calling&nbsp;<tt class="backtick"></tt><tt class="backtick">addDevices</tt><tt class="backtick"></tt>.<span class="anchor" id="line-930"></span><span class="anchor" id="line-931"></span></p><p class="line862" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">In the ServerService there is an orthogonal call that allows you to attach a single server to multiple device groups<span class="anchor" id="line-932"></span><span class="anchor" id="line-933"></span><span class="anchor" id="line-934"></span><span class="anchor" id="line-1-93"></span></p><div class="highlight java" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-a8d40f1fcf2b814defb116017a8baf8f44ceb5aa" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="ResWord" style="color: rgb(160, 0, 0);">abstract</span>  <span class="ResWord" style="color: rgb(160, 0, 0);">void</span>  <span class="ID">addDeviceGroups</span>(<span class="ID">ServerRef</span> <span class="ID">self</span>, <span class="ID">DeviceGroupRef</span>[] <span class="ID">groups</span>)</span>
</pre></div></div><span class="anchor" id="line-935" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Equally we could have coded this to attach servers to a device group<span class="anchor" id="line-936"></span><span class="anchor" id="line-937"></span><span class="anchor" id="line-938"></span><span class="anchor" id="line-939"></span><span class="anchor" id="line-1-95"></span></p><div class="highlight python" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-8eac25daa728662a230b193f9781d8f0edf27043" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="ResWord" style="color: rgb(160, 0, 0);">for</span> <span class="ID">serverRef</span> <span class="ResWord" style="color: rgb(160, 0, 0);">in</span> [<span class="ID">ServerRef</span>(<span class="Number" style="color: rgb(0, 128, 192);">1192001</span>), <span class="ID">ServerRef</span>(<span class="Number" style="color: rgb(0, 128, 192);">11930001</span>)]:</span>
<span class="line"><span class="LineAnchor" id="CA-8eac25daa728662a230b193f9781d8f0edf27043_2"></span><span class="anchor" id="line-2-36"></span>   <span class="ID">ts</span>.<span class="ID">server</span>.<span class="ID">addDeviceGroups</span>(<span class="ID">serverRef</span>, [<span class="ID">newVO</span>.<span class="ID">ref</span>])</span>
</pre></div></div><span class="anchor" id="line-940" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">However as it performs more round trips to the Twist it's less efficient when adding multiple servers to the same device group. This is an important point. There often are complimentary calls in other services that may be more/less efficient at performing the same task. Always try to perform the work in the minimum number of calls.<span class="anchor" id="line-941"></span><span class="anchor" id="line-942"></span></p><p class="line867" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;"></p><h2 id="Creating_a_dynamic_device_group_for_unreachable_servers" style="color: rgb(0, 0, 0); letter-spacing: normal; text-transform: none; font-family: sans-serif;">Creating a dynamic device group for unreachable servers</h2><span class="anchor" id="line-943" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-944" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line862" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">The filter may look more complicated than expected and there is a good reasons for this. When integrating with a vCenter server records are created in SA with a lifecycle of MANAGED/UNREACHABLE. Searching by&nbsp;<tt class="backtick"></tt><tt class="backtick">ServerVO.state</tt><tt class="backtick"></tt>&nbsp;alone is not sufficient. These agentless records will be excluded by only including those with a recorded Agent version. iLo integration with SA creates similar entries.<span class="anchor" id="line-945"></span><span class="anchor" id="line-946"></span><span class="anchor" id="line-947"></span><span class="anchor" id="line-948"></span><span class="anchor" id="line-949"></span><span class="anchor" id="line-950"></span><span class="anchor" id="line-951"></span><span class="anchor" id="line-952"></span><span class="anchor" id="line-953"></span><span class="anchor" id="line-954"></span><span class="anchor" id="line-955"></span><span class="anchor" id="line-956"></span><span class="anchor" id="line-957"></span><span class="anchor" id="line-958"></span><span class="anchor" id="line-959"></span><span class="anchor" id="line-960"></span><span class="anchor" id="line-961"></span><span class="anchor" id="line-962"></span><span class="anchor" id="line-963"></span><span class="anchor" id="line-964"></span><span class="anchor" id="line-965"></span><span class="anchor" id="line-966"></span><span class="anchor" id="line-967"></span><span class="anchor" id="line-968"></span><span class="anchor" id="line-969"></span><span class="anchor" id="line-1-97"></span></p><div class="highlight python" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="Comment" style="color: rgb(0, 128, 0);">#!/opt/opsware/bin/python</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_2"></span><span class="anchor" id="line-2-37"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">twistserver</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_3"></span><span class="anchor" id="line-3-33"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.device</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">DeviceGroupVO</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_4"></span><span class="anchor" id="line-4-24"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.search</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">Filter</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_5"></span><span class="anchor" id="line-5-23"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.common</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">UniqueNameException</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_6"></span><span class="anchor" id="line-6-21"></span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_7"></span><span class="anchor" id="line-7-16"></span><span class="ID">ts</span> = <span class="ID">twistserver</span>.<span class="ID">TwistServer</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_8"></span><span class="anchor" id="line-8-16"></span><span class="ID">ts</span>.<span class="ID">authenticate</span>(<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">user</span><span class="String" style="color: rgb(0, 64, 128);">'</span>,<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">password</span><span class="String" style="color: rgb(0, 64, 128);">'</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_9"></span><span class="anchor" id="line-9-14"></span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_10"></span><span class="anchor" id="line-10-13"></span><span class="ID">ruleFilter</span> = <span class="ID">Filter</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_11"></span><span class="anchor" id="line-11-10"></span><span class="ID">ruleFilter</span>.<span class="ID">expression</span> = <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">(ServerVO.state = UNREACHABLE) &amp; </span><span class="String" style="color: rgb(0, 64, 128);">'</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_12"></span><span class="anchor" id="line-12-9"></span>                        <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">(ServerVO.opswLifecycle = MANAGED) &amp; </span><span class="String" style="color: rgb(0, 64, 128);">'</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_13"></span><span class="anchor" id="line-13-9"></span>                        <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">(ServerVO.agentVersion IS_NOT_NULL 0)</span><span class="String" style="color: rgb(0, 64, 128);">'</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_14"></span><span class="anchor" id="line-14-9"></span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_15"></span><span class="anchor" id="line-15-8"></span><span class="ID">vo</span> = <span class="ID">DeviceGroupVO</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_16"></span><span class="anchor" id="line-16-7"></span><span class="ID">vo</span>.<span class="ID">parent</span> = <span class="ID">ts</span>.<span class="ID">device</span>.<span class="ID">DeviceGroupService</span>.<span class="ID">getPublicRoot</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_17"></span><span class="anchor" id="line-17-7"></span><span class="ID">vo</span>.<span class="ID">dynamic</span> = <span class="ResWord" style="color: rgb(160, 0, 0);">True</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_18"></span><span class="anchor" id="line-18-7"></span><span class="ID">vo</span>.<span class="ID">dynamicRule</span> = <span class="ID">ruleFilter</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_19"></span><span class="anchor" id="line-19-5"></span><span class="ID">vo</span>.<span class="ID">shortName</span> = <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">Unreachable Servers</span><span class="String" style="color: rgb(0, 64, 128);">'</span></span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_20"></span><span class="anchor" id="line-20-5"></span><span class="ResWord" style="color: rgb(160, 0, 0);">try</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_21"></span><span class="anchor" id="line-21-5"></span>    <span class="ID">ts</span>.<span class="ID">device</span>.<span class="ID">DeviceGroupService</span>.<span class="ID">create</span>(<span class="ID">vo</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_22"></span><span class="anchor" id="line-22-4"></span><span class="ResWord" style="color: rgb(160, 0, 0);">except</span> <span class="ID">UniqueNameException</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-5d08ad58f04d66ca3bd401ef66edb0689b05829f_23"></span><span class="anchor" id="line-23-4"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);">Device group </span><span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">%s</span><span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);"> already exists</span><span class="String" style="color: rgb(0, 64, 128);">"</span> % <span class="ID">vo</span>.<span class="ID">shortName</span></span>
</pre></div></div><span class="anchor" id="line-970" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-971" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line867" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;"></p><h2 id="Next_dynamic_device_group_recalculation_event_time" style="color: rgb(0, 0, 0); letter-spacing: normal; text-transform: none; font-family: sans-serif;">Next dynamic device group recalculation event time</h2><span class="anchor" id="line-972" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-973" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line862" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">Although this does not use the DeviceGroupService the information is relevant to dynamic device groups. The next recalculation event time is held as a custom attribute against the Core facility. Attributes prefixed with&nbsp;<tt class="backtick"></tt><tt class="backtick">__OPSW</tt><tt class="backtick"></tt>&nbsp;are prevented from being displayed in the GUI interface, they are internal and hidden.<span class="anchor" id="line-974"></span><span class="anchor" id="line-975"></span><span class="anchor" id="line-976"></span><span class="anchor" id="line-977"></span><span class="anchor" id="line-978"></span><span class="anchor" id="line-979"></span><span class="anchor" id="line-980"></span><span class="anchor" id="line-981"></span><span class="anchor" id="line-982"></span><span class="anchor" id="line-983"></span><span class="anchor" id="line-1-99"></span></p><div class="highlight python" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="Comment" style="color: rgb(0, 128, 0);">#!/opt/opsware/bin/python</span></span>
<span class="line"><span class="LineAnchor" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c_2"></span><span class="anchor" id="line-2-38"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">twistserver</span></span>
<span class="line"><span class="LineAnchor" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c_3"></span><span class="anchor" id="line-3-34"></span><span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">time</span></span>
<span class="line"><span class="LineAnchor" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c_4"></span><span class="anchor" id="line-4-25"></span><span class="ID">ts</span> = <span class="ID">twistserver</span>.<span class="ID">TwistServer</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c_5"></span><span class="anchor" id="line-5-24"></span><span class="ID">FS</span> = <span class="ID">ts</span>.<span class="ID">locality</span>.<span class="ID">FacilityService</span></span>
<span class="line"><span class="LineAnchor" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c_6"></span><span class="anchor" id="line-6-22"></span><span class="ID">coreRef</span> = <span class="ID">FS</span>.<span class="ID">getCoreFacility</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c_7"></span><span class="anchor" id="line-7-17"></span><span class="ID">t</span> = <span class="ID">FS</span>.<span class="ID">getCustAttr</span>(<span class="ID">coreRef</span>,<span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">__OPSW_next_device_group_recalc_time</span><span class="String" style="color: rgb(0, 64, 128);">'</span>,<span class="ResWord" style="color: rgb(160, 0, 0);">False</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-638d096c0f02a8e0468d9cf975c6c3d6b4eb5e5c_8"></span><span class="anchor" id="line-8-17"></span><span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);">Next recalc event: </span><span class="String" style="color: rgb(0, 64, 128);">%s</span><span class="String" style="color: rgb(0, 64, 128);"> </span><span class="String" style="color: rgb(0, 64, 128);">"</span> % <span class="ID">time</span>.<span class="ID">ctime</span>(<span class="ResWord" style="color: rgb(160, 0, 0);">float</span>(<span class="ID">t</span>))</span>
</pre></div></div><span class="anchor" id="line-984" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-985" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line867" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;"></p><h2 id="Refreshing_dynamic_device_groups" style="color: rgb(0, 0, 0); letter-spacing: normal; text-transform: none; font-family: sans-serif;">Refreshing dynamic device groups</h2><span class="anchor" id="line-986" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><span class="anchor" id="line-987" style="color: rgb(0, 0, 0); font-family: sans-serif;"></span><p class="line874" style="color: rgb(0, 0, 0); letter-spacing: normal; font-family: sans-serif; font-size: 16px;">The following program accepts a single parameter, that being a device group id, it will then request the system to refresh the devices from its rules. Without any argument all dynamic device groups will be refreshed. Note this does not reset the system wide hourly refresh event however individual device group refresh times will be updated.<span class="anchor" id="line-988"></span><span class="anchor" id="line-989"></span><span class="anchor" id="line-990"></span><span class="anchor" id="line-991"></span><span class="anchor" id="line-992"></span><span class="anchor" id="line-993"></span><span class="anchor" id="line-994"></span><span class="anchor" id="line-995"></span><span class="anchor" id="line-996"></span><span class="anchor" id="line-997"></span><span class="anchor" id="line-998"></span><span class="anchor" id="line-999"></span><span class="anchor" id="line-1000"></span><span class="anchor" id="line-1001"></span><span class="anchor" id="line-1002"></span><span class="anchor" id="line-1003"></span><span class="anchor" id="line-1004"></span><span class="anchor" id="line-1005"></span><span class="anchor" id="line-1006"></span><span class="anchor" id="line-1007"></span><span class="anchor" id="line-1008"></span><span class="anchor" id="line-1009"></span><span class="anchor" id="line-1010"></span><span class="anchor" id="line-1-101"></span></p><div class="highlight python" style="color: rgb(0, 0, 0); font-family: sans-serif;"><div class="codearea" dir="ltr" lang="en" style="margin: 0.5em 0px; padding: 0px; border: 1pt solid rgb(174, 189, 204); background-color: rgb(243, 245, 247);"><pre dir="ltr" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864" lang="en" style="border-width: initial; border-style: none; background-color: rgb(243, 245, 247); padding: 10pt; font-family: courier, monospace; white-space: pre-wrap; overflow-wrap: break-word;"><span class="line"><span class="Comment" style="color: rgb(0, 128, 0);">#!/opt/opsware/bin/python</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_2"></span><span class="anchor" id="line-2-39"></span><span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">sys</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_3"></span><span class="anchor" id="line-3-35"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">twistserver</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_4"></span><span class="anchor" id="line-4-26"></span><span class="ResWord" style="color: rgb(160, 0, 0);">from</span> <span class="ID">pytwist.com.opsware.search</span> <span class="ResWord" style="color: rgb(160, 0, 0);">import</span> <span class="ID">Filter</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_5"></span><span class="anchor" id="line-5-25"></span><span class="ID">ts</span> = <span class="ID">twistserver</span>.<span class="ID">TwistServer</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_6"></span><span class="anchor" id="line-6-23"></span><span class="ID">DGS</span> = <span class="ID">ts</span>.<span class="ID">device</span>.<span class="ID">DeviceGroupService</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_7"></span><span class="anchor" id="line-7-18"></span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_8"></span><span class="anchor" id="line-8-18"></span><span class="ResWord" style="color: rgb(160, 0, 0);">try</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_9"></span><span class="anchor" id="line-9-15"></span>    <span class="ID">flt</span> = <span class="ID">Filter</span>()</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_10"></span><span class="anchor" id="line-10-14"></span>    <span class="ID">flt</span>.<span class="ID">expression</span> = <span class="String" style="color: rgb(0, 64, 128);">'</span><span class="String" style="color: rgb(0, 64, 128);">device_group_rc_id = </span><span class="String" style="color: rgb(0, 64, 128);">%s</span><span class="String" style="color: rgb(0, 64, 128);">'</span> % (<span class="ID">sys</span>.<span class="ID">argv</span>[<span class="Number" style="color: rgb(0, 128, 192);">1</span>])</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_11"></span><span class="anchor" id="line-11-11"></span><span class="ResWord" style="color: rgb(160, 0, 0);">except</span> <span class="ID">IndexError</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_12"></span><span class="anchor" id="line-12-10"></span>    <span class="ID">flt</span> = <span class="ResWord" style="color: rgb(160, 0, 0);">None</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_13"></span><span class="anchor" id="line-13-10"></span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_14"></span><span class="anchor" id="line-14-10"></span><span class="ID">dgRefs</span> = <span class="ID">DGS</span>.<span class="ID">findDeviceGroupRefs</span>(<span class="ID">flt</span>)</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_15"></span><span class="anchor" id="line-15-9"></span><span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);">Refreshing Group Memberships...</span><span class="String" style="color: rgb(0, 64, 128);">"</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_16"></span><span class="anchor" id="line-16-8"></span><span class="ResWord" style="color: rgb(160, 0, 0);">if</span> <span class="ID">dgRefs</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_17"></span><span class="anchor" id="line-17-8"></span>    <span class="ResWord" style="color: rgb(160, 0, 0);">for</span> <span class="ID">ref</span> <span class="ResWord" style="color: rgb(160, 0, 0);">in</span> <span class="ID">dgRefs</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_18"></span><span class="anchor" id="line-18-8"></span>        <span class="ID">vo</span> = <span class="ID">DGS</span>.<span class="ID">getDeviceGroupVO</span>(<span class="ID">ref</span>);</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_19"></span><span class="anchor" id="line-19-6"></span>        <span class="ResWord" style="color: rgb(160, 0, 0);">if</span> <span class="ID">vo</span>.<span class="ID">dynamic</span> == <span class="ResWord" style="color: rgb(160, 0, 0);">True</span> <span class="ResWord" style="color: rgb(160, 0, 0);">and</span> <span class="ID">vo</span>.<span class="ID">deviceAttachmentAllowed</span> == <span class="ResWord" style="color: rgb(160, 0, 0);">True</span>:</span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_20"></span><span class="anchor" id="line-20-6"></span>            <span class="ResWord" style="color: rgb(160, 0, 0);">print</span> <span class="String" style="color: rgb(0, 64, 128);">"</span><span class="String" style="color: rgb(0, 64, 128);">Group: </span><span class="String" style="color: rgb(0, 64, 128);">%s</span><span class="String" style="color: rgb(0, 64, 128);">"</span> % <span class="ID">vo</span>.<span class="ID">fullName</span></span>
<span class="line"><span class="LineAnchor" id="CA-7bfdc8f8d99082a815a8cf835ff81f7a92cc0864_21"></span><span class="anchor" id="line-21-6"></span>            <span class="ID">DGS</span>.<span class="ID">refreshMembership</span>(<span class="ID">ref</span>,<span class="ResWord" style="color: rgb(160, 0, 0);">True</span>)</span></pre></div></div></div>