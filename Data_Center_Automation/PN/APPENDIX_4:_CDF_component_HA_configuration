<div class="f14 metric" style="color:#656668;display:flex;"><img src="/assets/images/calendar.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="updateDate">&nbsp; Updated on 05/03/2019</span> &nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp; <img src="/assets/images/updated.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="readTime">&nbsp; 3 minutes to read</span>&nbsp;&nbsp;&nbsp;&nbsp;</div><br><div class="mw-parser-output"><p><br>
The following table lists all of the foundational services (including Kubernetes itself) and the type of HA supported. This may depend on the installed configuration and will be noted as such.
</p>
<div class="Admonition_Note">
<p><span class="autonumber">Note</span><br>
</p>
<ul><li>ETCD and Flannel are included in this list as Container Deployment Foundation foundational services.</li>
<li>N/A = not applicable because one or more of the following
<ul><li>Not run in Kubernetes</li>
<li>Not connected to a database (or is a database)</li></ul></li>
<li>Multiple instances: Micro Focus considers liveness probe and fast restart sufficient to declare HA for selected CDF components. For other components, running multiple instances is supported and will be automatically enabled if the deployed configuration can support it.</li>
<li>The CDF can be installed in 4 different configurations, resulting in different levels of HA for these foundational services:
<ul><li>Single combined master + worker node (SCMW)</li>
<li>Two nodes: single master, single worker (SMSW)</li>
<li>Multiple workers: single master, multiple workers (SMMW)</li>
<li>Multi-master: multiple master nodes, multiple worker nodes (MMMW)</li></ul></li></ul>
</div>
<a class="buttonfullscr" onclick="javascript:loadingTableButton(this);"><button class="flscrbtn"><i class="material-icons flscricn">open_in_new</i><div style="margin: auto 5px;">View Fullscreen</div></button></a><table>
<tbody><tr>
<th><b>Service / component</b>
</th>
<th><b>Docker run-time</b>
</th>
<th><b>Docker container restart-Policy</b>
</th>
<th><b>Kubernetes own HA</b>
</th>
<th><b>Kubernetes restartPolicy</b>
</th>
<th><b>Kubernetes liveness probe</b>
</th>
<th><b>Multiple instances running</b>
</th>
<th><b>Support external data-base</b>
</th>
<th><b>Kubernetes readiness probe</b>
</th></tr>
<tr>
<td>Bootstrap: CoreOS ETCD
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>N/A
</td>
<td>N/A
</td>
<td>N/A
</td>
<td>Y when MMMW
</td>
<td>Always local on master nodes. Replicated when MMMW.
</td>
<td>N/A
</td></tr>
<tr>
<td>Bootstrap: Hashicorp Vault
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>N/A
</td>
<td>N/A
</td>
<td>N/A
</td>
<td>Y when MMMW
</td>
<td>N/A
</td>
<td>N/A
</td></tr>
<tr>
<td>Bootstrap: CoreOS Flannel
</td>
<td>Y always run on every node
</td>
<td>Y
</td>
<td>N/A
</td>
<td>N/A
</td>
<td>N/A
</td>
<td>N, one instance per node
</td>
<td>N/A
</td>
<td>N/A
</td></tr>
<tr>
<td>Micro Focus Autopass license manager server
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>N
</td>
<td>N
</td>
<td>N
</td>
<td>Y
</td></tr>
<tr>
<td>Micro Focus Autopass Postgres database instance
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Micro Focus Identity Manager (IDM)
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td></tr>
<tr>
<td>Default Postgres database
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y if HA
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Boostport kubernetes-vault
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Management portal
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>CDF API Server
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>Always embedded database
</td>
<td>Y
</td></tr>
<tr>
<td>Suite installer frontend
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>Always embedded database
</td>
<td>Y
</td></tr>
<tr>
<td>Suite installer Postgres database
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Local Docker registry
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Kubernetes Proxy
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Kubernetes API Server
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Kubernetes Controller Manager
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Kubernetes Scheduler
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Kubernetes DNS
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Ingress controller
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>DB backup/restore service
</td>
<td>N
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>N
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Fluentd log collection/forward
</td>
<td>Y always run on every node
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>N/A
</td>
<td>Y
</td></tr>
<tr>
<td>Log rotation
</td>
<td>Y always run on every node
</td>
<td>Y
</td>
<td>Y when MMMW
</td>
<td>Y
</td>
<td>Y
</td>
<td>Y
</td>
<td>N/A
</td>
<td>Y
</td></tr></tbody></table>

<!-- 
NewPP limit report
Cached time: 20190524073359
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.016 seconds
Real time usage: 0.026 seconds
Preprocessor visited node count: 6/1000000
Preprocessor generated node count: 28/1000000
Post‐expand include size: 3433/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key docops_wiki:pcache:idhash:724013-0!canonical and timestamp 20190524073359 and revision id 1225152
 -->
</div>