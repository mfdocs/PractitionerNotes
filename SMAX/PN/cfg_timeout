<html><div class="mw-parser-output">
<p></p>

<p>When a user successfully logs into SMA user interfaces (such as the Suite Administration Portal, Service Portal, or Agent interface) the backend services produce two tokens stored in the client browser's cookies. Any requests from the SMA user interfaces to backend services need to carry the two tokens.</p>

<p>These two tokens are the LWSSO token and the SMAX_AUTH_TOKEN token.</p>

<p>Please be aware that SMAX will use the LWSSO token once you integrate with other Micro Focus products based on lightweight SSO or you are using SMA mixed mode.&nbsp; If only SMAX in the scope, this LWSSO token will be useless.</p>

<p>If the LWSSO token becomes invalid after a certain amount of time, the integration part will not work well. For example, the 3rd party data or page will not be retrieved or displayed successfully. In SMA mixed mode, the data will not be retrieved successfully from SM if the LWSSO token expired.</p>

<p>If the SMAX_AUTH_TOKEN becomes invalid, users must log in to SMA user interfaces again for new tokens to continue operating on the system.</p>

<p>The amount of time the two tokens are valid before they expire is controlled by specific timeout parameters. You can change the value of those parameters to extend or shorten the period that a session lives.</p>

<p>This document contains information about the tokens, related parameters, and how to configure them. We always suggest you configure the value through the GUI. Change the value from the configmap only if something wrong, and you cannot save the value from the GUI.</p>

<p>Below are two tokens required by SMA user sessions and the timeout parameters affect them.</p>

<h2 class="mw-headline" id="LWSSO_token">LWSSO token</h2>

<ul>
	<li>Cookie name: LWSSO_COOKIE_KEY</li>
	<li>Timeout parameters: lwssoConfig.expirationPeriod</li>
</ul>

<h2 class="mw-headline" id="IDM_X-AUTH_token">SMAX AUTH TOKEN</h2>

<ul>
	<li>Cookie name: SMAX_AUTH_TOKEN</li>
	<li>Timeout parameters: idm.token.lifetime.minutes</li>
</ul>

<p></p>

<p>In the SMA system, there are a number of timeout settings for various services. The parameters described below have impact on session timeout for suite users.</p>

<h2>lwssoConfig.expirationPeriod(in minutes)</h2>

<h3>Usage</h3>

<p>This parameter controls the idle timeout for the LWSSO token on SMA mixed-mode or SMAX has integration with other MicroFocus products based on lightweight SSO. If the token expired, the integration will not work well, for example, not retrieving the data from the 3rd product.</p>

<h3>How to change it in UI</h3>

<p>You can change the value of this parameter in&nbsp;Suite Administration(BO) &gt; CONFIGURATIONS &gt; Security &gt; Lightweight SSO configuration &gt; Token expiration period (minutes). After saving the change, the system will automatically restart the related backend services to make the new value take effect.&nbsp; <img id="Picture_x0020_2" src="/mediawiki/images/pn_images/pn_image_6053c24462ec86.83538126.png"></p>

<h3>Data in ConfigMap</h3>

<p>The value of the parameter is stored in the&nbsp;lwsso_expirationperiod&nbsp;key (the time unit is minute) of the ConfigMap 'lwsso-configmap'. If you want to change the value through ConfigMap, you need to restart the suite IDM pod and bo-login pod to let the changes take effect.</p>

<h2></h2>

<h2>idm.token.lifetime.minutes (in minutes)</h2>

<h3>Usage</h3>

<p>For end-users, if they have not operated for the period specified by this parameter, their session is timed out, and they have to re-login before they can continue operating on the system.</p>

<h3>How to change it in UI</h3>

<p>You can change the value of this parameter in&nbsp;Suite Administration(BO) &gt; CONFIGURATIONS &gt; Security &gt; Access Token configuration &gt; Token expiration period (minutes). After saving the change, the system will automatically restart the related backend to make the new value take effect.&nbsp;<br>
<img id="Picture_x0020_3" src="/mediawiki/images/pn_images/pn_image_6053c244b51861.06606791.png"></p>

<h3>Data in ConfigMap</h3>

<p>The value of the parameter is stored in the&nbsp;TokenExpirationPeriod&nbsp;key (the time unit is second) of the ConfigMap 'idm-config'. Similarly, you need to restart IDM pod if you change the value in ConfigMap.</p>

<p></p>

<h3>Recommended Configuration</h3>

<p>It is recommended to set the&nbsp;lwssoConfig.expirationPeriod and&nbsp;idm.token.lifetime.minutes&nbsp;parameters to the same value to avoid confusion.</p>

<h3>Example</h3>

<p>In this example, we will walk through the steps to extend the session timeout to 4 hours.</p>

<ul>
	<li>Go to&nbsp;SMAX Suite &gt; Administration portal &gt; CONFIGURATIONS &gt; Security &gt; Lightweight SSO configuration. Change the value of&nbsp;Token expiration period (minutes)&nbsp;to 240.</li>
	<li>Go to&nbsp;SMAX Suite &gt; Administration portal &gt; CONFIGURATIONS &gt; Security &gt; Access Token configuration. Change the value of&nbsp;Token expiration period (minutes)&nbsp;to 240.</li>
	<li>Click the save button. After related pods are up and running, the new settings take effect.</li>
</ul>

<h2></h2>

<h2>Tips and Tricks</h2>

<p>The SMAX_AUTH_TOKEN &nbsp;token is renewed when 35% defined by idm.token.lifetime.minutes has passed. Due to the less frequent renew mechanism, the actual session timeout is shorter than what is expected. In extreme cases, users may experience session timeout right after half of the desired time. For example, assume the parameter is set to 1 hour. User A logs in to SMAX at 2:00. She operates on the UI till 2:20 and goes away. When she comes back to the system at 3:01, she will find the session times out. To her, it seems the system kicks out the session which is only idle for 40 minutes instead of 1 hour. Let's walk through the story again to see what happens. When the user A logs in to the system, an SMAX_AUTH_TOKEN &nbsp;token is produced. In each request to backend services, it checks how long the token is to expire. Since the token will not expire in 21 minutes, it is not renewed. From 2:21 to 3:00, since there is no requests from the client, no chance to renew the token. At 3:01, when a request comes from the client, the token exceeds its expiration period (i.e. 1 hour) so that the session is timed out.</p>

<p>So in case you want to make sure it always more than one hour in the situation mentioned above, you can set the SMAX_AUTH_TOKEN &nbsp;to 92(60/0.65). And the side effect will the session will be expired after 92 minutes in some cases.</p>
<!-- 
NewPP limit report
Cached time: 20200217094548
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.020 seconds
Real time usage: 0.070 seconds
Preprocessor visited node count: 27/1000000
Preprocessor generated node count: 64/1000000
Post‐expand include size: 7654/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
--><!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
--><!-- Saved in parser cache with key docops_wiki:pcache:idhash:875826-0!canonical and timestamp 20200217094548 and revision id 1577598
 --></div>
</html>