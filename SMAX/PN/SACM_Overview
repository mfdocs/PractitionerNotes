<div class="PNbanner"><div style="margin: auto 1% auto 0;"><i style="color:#0073e7;cursor:pointer;padding: 5%;" class="material-icons tooltip">info <span class="tooltiptext">The content has not been reviewed or tested by Micro Focus.</span></i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>This page was added by an ITOM practitioner. Join the practitioner group, contribute, and build a stronger knowledge network.</div></div><h1 style="margin-bottom:0px;">SACM Overview</h1><div class="f14 metric" style="color:#656668;display:flex;"><img src="/assets/images/calendar.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="updateDate">&nbsp; Updated on Nov 8, 2019</span> &nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp; <img src="/assets/images/updated.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="readTime">&nbsp; 10 minutes to read</span>&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp;<div>Rated 5&nbsp;<img src="/assets/images/star.png" style="height:12px;margin-top:auto;margin-bottom:auto;"></div> </div><br><div class="mw-parser-output"><div class="mw-collapsible-content"><div class="Admonition_Tip"><span class="autonumber">Getting Started with the Service Portfolio and SACM</span><div class="mw-collapsible">
<div class="mw-collapsible-content">
<p><br>
In this section, Glenn will define the services that his IT department provides as part of the service portfolio, and the high level components that make up those services in the Service Asset and Configuration Management (SACM) module. SACM maintains information about the configuration items (and their relationships) required to deliver an IT service. Providing the service definitions he will support is also the first step in defining the service portfolio within Service Management Automation X.
</p><p>These definitions will continue to fill in the overall Service Management Automation X data model.
</p><p><br>
</p>
<div style="text-align: center;"><a onclick="javascript:loadingImage(this);" class="image"><img alt="SACM.gif" src="/mediawiki/images/0/0d/SACM.gif" width="124" height="441" data-file-width="124" data-file-height="441"></a></div>
<p>By the end of this section Glenn will:
</p>
<ul><li>Work with IT to create a list of all business services provided to the consumers/clients</li>
<li>Create the service definitions within the service portfolio</li>
<li>Define each instance as an actual service in Service Asset and Configuration Management (SACM) module</li>
<li>Define the service components and system elements for the actual services in SACM</li></ul>
</div>
</div>
</div>
<p><br>
</p>
<h2 class="mw-headline" id="Providing_Services">Providing Services</h2>
<p>One of the first differences I noticed about Service Management Automation X compared to other options out there was that Micro Focus designed it around services. Our IT department provides and maintains these services for the end users, so it makes sense for us to focus the solution on them.
</p><p>So one of the first things I need to do is to define the services our IT department provides to our customers.<span class="Apple-converted-space">&nbsp; </span>Why start here? Well, without specifically calling out the services we need support we could see a ton of problems. We might get calls or emails about things we have no control over. Or we might get requests relating to our products, but for things we simply can't do. Defining our services limits our responsibilities to the consumers and it refines the focus of our team as providers. By clearly specifying what we provide, we can accurately and succinctly define our processes around these services. This will result in a much higher (and faster) return on the investment we are putting into our new service desk applications.
</p><p>The bottom line here is that regardless of what processes you are thinking of implementing at the start of your project, define your services first. Everything else revolves around these definitions.
</p><p>Service Management Automation X is service driven. Therefore these definitions will have a big impact on how our end users and agents will interact. Micro Focus designed the service catalog around services (as the name would suggest). You can think about this as the menu where end users come to “consume” our services. For our agents, everything from assigning the right team for a task to knowing who to notify in emergencies resolves around services. So if the users are ordering from a menu, the agents will be in the kitchen working to provide these services to the end users. We’ll also be able to report by service, so we can see which services generate the most load on the service desk in terms of the number of questions asked, requests, and issues.
</p><p>And remember, as our portfolio changes and we take on more responsibilities we can add to our service definitions. We want to be agile, so we need to expect and even embrace change.
</p><p>Ok, let's get started then. The ITIL process documentation defines an IT Service as "a service provided to one or more customers by an IT service provider". Okay… Well, that makes us the IT service provider, and in this case, our customers are the employees of the company.
</p><p>Based on that we have many services we need to define in the system. Let’s start with one of the most used services we provide, Email. The service we are providing to the consumer is the ability to send and receive an email with their company address. So I'll add a service definition for that in the service portfolio. Once I do, I need to move the service into the “operate" step of the workflow since it's an existing service.
</p><p>Now that I've defined the high-level service definition, I want to get started on defining what makes up each implementation of the Email service. Service Management Automation X allows me to define this in different stages:
</p>
<ul><li>Actual service – The instance of a service in our environment. You might only have one instance of a service in the environment, or there might be multiple implementations. For our Email service, we have two separate systems we use to support multiple locations.</li>
<li>Service component – One or more components required to support an actual service</li>
<li>System element – One or more elements required to support a service component</li></ul>
<p><br>
</p>
<div class="center"><div class="floatnone"><a onclick="javascript:loadingImage(this);" class="image"><img alt="3.1-ServiceDefinition.png" src="/mediawiki/images/6/6a/3.1-ServiceDefinition.png" width="975" height="262" data-file-width="975" data-file-height="262"></a></div></div>
<p><br>
I know enough to put together the high-level components and elements by myself. There is an additional level of definition below the system element which comprises the actual devices that make up the components and elements. It will be important to go back and define those devices, but I can get started with what I know right now. In fact, I could just define my actual services to get started, but I'll put in everything I know about the system right now.
</p><p>We have two Email services in operation right now; one in North America and another that covers our EMEA region. Each of these is a unique instance of the Email service (making each of them an “actual service”), so I'll define each one separately.
</p><p>The components of each are identical, but we named them in a way that specifies which actual service they belong to. When I am entering these into Service Management Automation X, I'll relate each piece to the correct actual service. In other words, I'll first create the “North America Email“ actual service under the “Email Service” service definition. Then I'll create each of its service components from that actual service as related CIs (configuration items).
</p><p>Finally, I'll create the system elements for each service component, again as related CIs. In this way, I'll create two separate actual services, each with their own hierarchy of supporting components and elements underneath. This will give our IT department a clear definition of what makes up the service we are supporting. We can think of this as the internal representation of our service.
</p><p>Here's a quick sketch of what makes up our two services:
</p><p><br>
<b>North America Email Service</b>
</p>
<div class="center"><div class="floatnone"><a onclick="javascript:loadingImage(this);" class="image"><img alt="3.2-ActualService NA.png" src="/mediawiki/images/e/e5/3.2-ActualService_NA.png" width="975" height="262" data-file-width="975" data-file-height="262"></a></div></div>
<p><br>
<b>EMEA Email Service</b>
</p>
<div class="center"><div class="floatnone"><a onclick="javascript:loadingImage(this);" class="image"><img alt="3.3-ActualService EMEA.png" src="/mediawiki/images/2/24/3.3-ActualService_EMEA.png" width="975" height="291" data-file-width="975" data-file-height="291"></a></div></div>
<p>As you can see, the structures of the services are identical. The difference in the two services is that each component is now a unique item or collection of items. While the service definition is an abstraction, the actual services contain specific components and elements.
</p><p>In reality, each of the components and elements is composed of multiple virtual machines running on multiple physical machines. In the future, we want every bit of this level of granularity to be part of our SACM database, but this will be enough to get us started.
</p><p>Hey, that's not bad for a start, is it? I've defined the internal services that my team will provide for our customers. And created a high-level configuration of each of the actual services we currently have in production. That seems like enough work to deserve a coffee break. I'll be back in a short while to talk about the service catalog.
</p><p>While you are waiting, you can always check out the online help for more information about the <a href="./itom/SMAX:2019.05/ServicePortfolioMgmt" title="SMAX:2019.05/ServicePortfolioMgmt">Service Portfolio</a> or <a href="./itom/SMAX:2019.05/SACM" title="SMAX:2019.05/SACM">SACM</a>.
</p><p><br> 
</p>
</div>

<!-- 
NewPP limit report
Cached time: 20200216124518
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.024 seconds
Real time usage: 0.118 seconds
Preprocessor visited node count: 12/1000000
Preprocessor generated node count: 34/1000000
Post‐expand include size: 7857/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key docops_wiki:pcache:idhash:875787-0!canonical and timestamp 20200216124517 and revision id 1577547
 -->
</div>