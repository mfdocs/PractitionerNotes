<html><p>This document contains all the APIs which you can use for Cloud Management, they are mostly the Design and Deploy (DND) APIs.</p>

<h2>Terminology</h2>

<p>The following definitions are used in the document</p>

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>Design Container</td>
			<td>A design container holds one or more design versions and must be created before a design.</td>
		</tr>
		<tr>
			<td>Design</td>
			<td>A design (or design version) is a specific version of a design within a design container. &nbsp;A design includes a graph of components and relationships and an option model. &nbsp;Designs can be cloned to other designs with a different version.</td>
		</tr>
		<tr>
			<td>Design Hierarchy</td>
			<td>The graph of components and their relationships within a design</td>
		</tr>
		<tr>
			<td>Component Palette</td>
			<td>Component palettes are the grouping structure for component types which are used when creating service components within a service design.</td>
		</tr>
		<tr>
			<td>Component Types</td>
			<td>A component type is a hierarchical classification of items within a palette that is used when creating service components within a service design. A component type contains rules that constrain how service designs can be constructed, helping a user to properly construct a service design. Component type constraints limit the types of service components that can be connected to components of this type within a service design.</td>
		</tr>
		<tr>
			<td>Component Template</td>
			<td>A component template is a specialized version of a component type and is used to simplify service design creation. Component templates include customized settings for the properties, lifecycle actions, and resource bindings that provide initial settings for the service design.</td>
		</tr>
		<tr>
			<td>Resource Offering</td>
			<td>A resource offering links the capabilities of providers to the provisioning requirements of a service design. For example, you can create a resource offering that corresponds to a specific VMware vCenter VM template that can be cloned by HP CSA to create a VM. A resource offering includes a user-specified set of lifecycle actions that are executed during the provisioning of the resource offering. A resource offering can also include actions that will be exposed to a subscriber as public actions. Resource offerings are associated with service designs through resource bindings.<br>
			Resource category constraints limit the categories of resource offerings that can be bound to service components of this type.</td>
		</tr>
	</tbody>
</table>

<h2>Security and Authentication</h2>
All of the APIs can be invoked using a basic authentication header. &nbsp;Since APIs require different roles for authentication, the easiest user to use is one with the DND Administration role. &nbsp;This user will be able to invoke all APIs.

<h2>Common API Headers</h2>
The following headers are used across the APIs for HTTP requests

<table border="1" cellpadding="1" cellspacing="1" style="width: 500px;">
	<tbody>
		<tr>
			<td>Accept</td>
			<td>application/json</td>
		</tr>
		<tr>
			<td>Content-Type</td>
			<td>application/json</td>
		</tr>
	</tbody>
</table>

<h2>Example Used in the Document</h2>
In this document, the use case is being developed using the APIs

<ol>
	<li>A component with a set of 4 properties is being created on the fly</li>
	<li>Resource offerings that the design will use are already available in the system</li>
	<li>The design will include two components, one of which is the component created on the fly</li>
	<li>The design will reference one resource offering</li>
	<li>A simple option model is created for the design to represent the offering in SMAX</li>
	<li>The design is published for SMAX to use</li>
	<li>Later on, the design is removed from the system</li>
</ol>

<h2>API Descriptions</h2>
Each API documented below contains the following information:

<ul>
	<li>The required method (GET, POST, PUT, DELETE, PATCH)</li>
	<li>The required headers</li>
	<li>The relative URL (relative to the DND base URL)<br>
	All relative URLs listed below are assumed to start with:<br>
	https://&lt;dnd-host&gt;/&lt;tenant account id&gt;/</li>
	<li>Any input body</li>
	<li>Any input query parameters</li>
	<li>Expected response codes for a success</li>
	<li>A sample structure of the response body</li>
</ul>
After the formal usage, specific usage of the API in the context of the running example in this document is shown.&nbsp;

<h2>Related Topics</h2>

<ul>
	<li>Creating Components and Component Templates</li>
	<li>Create a new Design Container and Design</li>
	<li>Creating the&nbsp;Graphical Representation of the Design</li>
	<li>Using Resource Offerings in the Design</li>
	<li>Creating and Updating the Option Model for the Design</li>
	<li>Publishing and Cleaning up the Design</li>
</ul>
</html>