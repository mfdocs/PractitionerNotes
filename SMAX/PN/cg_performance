<html><div class="mw-parser-output">
<p>The architecture of the Service Management Automation X application and supporting hardware has been designed with performance as one of the primary considerations. However, as the browser is heavily relied upon when performing many operations, performance issues may occur that are caused by the client system rather than the backend application.</p>

<p>When experiencing possible performance issues there are several areas to investigate, including:</p>

<ul>
	<li>Browser type</li>
	<li>Number of open browser tabs</li>
	<li>Available system resources</li>
	<li>Power settings</li>
	<li>Live Chat settings</li>
	<li>Network latency</li>
</ul>

<p></p>

<h2 class="mw-headline" id="Browser_type">Browser type</h2>

<p>Service Management Automation X works with a number of modern browsers, including all of the major ones (Chrome, Firefox, and Internet Explorer). Consult the support matrix to see a full listing of the supported browser and versions. The Chrome and Firefox browsers both support a number of tools and plugins that may assist in any needed issue determination, and in many cases these browsers perform better than Internet Explorer when working with Service Management Automation X. If performance issues are occurring, try performing the same actions using different browsers to see if there is any impact on performance.</p>

<p></p>

<h2 class="mw-headline" id="Number_of_open_browser_tabs">Number of open browser tabs</h2>

<p>Processes and connections are running constantly when users are connected to Service Management Automation X. Each additional tab in the browser is consuming additional system resources. The more open tabs, the more resources being consumed. If possible try to avoid having more than four or five tabs open within the browser. If performance issues occur, close any unused tabs and retry the same action.</p>

<p></p>

<h2 class="mw-headline" id="Available_system_resources">Available system resources</h2>

<p>While running Service Management Automation X the browser will consume system resources on the computer. As more tabs are opened and more operations are performed, system memory and CPU usage will increase. On machines with limited memory (less than 4GB) or that are running 32 bit operation systems, this may result in reduced performance depending on the amount of free memory available for the browser to consume.</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="Perf Image1.png" data-file-height="319" data-file-width="581" height="319" src="/mediawiki/images/b/b6/Perf_Image1.png" width="581"></a></p>

<p>￼</p>

<p>On systems where system resources are heavily used even before Service Management Automation X is started it is possible that slow performance may occur. To see if this may be an issue, open the Task manager to see the amount of available memory and CPU. The higher the “available” memory, the less likely this scenario is occurring. If possible try closing other applications to increase free memory, which may result in improved performance.</p>

<h2 class="mw-headline" id="Power_settings">Power settings</h2>

<p>When running the Windows operating system there are a number of options available that will limit power consumption. If the Power Saver option is enabled it will increase the energy efficiency of the CPU so that it uses less power. However, this operates the CPU at slower speeds which is known to cause performance issues when using Service Management Automation X. Using the power saver mode is not recommended. Using the balanced option should not cause any performance issues with Service Management Automation X.</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="Performance Image1.png" data-file-height="232" data-file-width="598" height="232" src="/mediawiki/images/f/fc/Performance_Image1.png" width="598"></a></p>

<h2 class="mw-headline" id="Network_latency">Network latency</h2>

<p>The network connection speed to the Service Management Automation X server plays a pivotal role in the performance of the product. There are a few ways to determine if performance is being impacted because of a local issue or network performance.</p>

<p>One way to test the quality of the network connection is to use the Chrome browser network traffic tools to see how long queries are taking to run. Launch the Chrome browser and then press F12 to open the development tools. Click on the network tab and then perform the operation that is taking a long time to complete.</p>

<p>￼ When the operation is occurring, observe the time required for the information to be returned from Service Management Automation X. If these times are consistently high then the performance issue may be bandwidth related. However, there could be multiple causes for the performance degradation, including backend performance or browser issues.<a class="image" onclick="javascript:loadingImage(this);"><img alt="Performance Image3.png" data-file-height="521" data-file-width="1286" height="521" src="/mediawiki/images/4/46/Performance_Image3.png" width="1286"></a></p>

<h2 class="mw-headline" id="Creating_a_ticket">Creating a ticket</h2>

<p>If issues continue after checking all of the previous areas of performance, open a ticket with Micro Focus Support and include the following information:</p>

<ul>
	<li>Browser information including the version and build number.</li>
	<li>Screen capture of the Performance tab of the task manager showing the memory and CPU usage.</li>
	<li>HAR Files from the Chrome browser when the performance issue is occurring and a description of what you are doing. Try to only include the data from at or around the time you are repeating the action that is having performance issues.</li>
</ul>

<p>Steps to capture the .har files can be seen here:</p>

<p><a class="external free" href="https://www.youtube.com/watch?v=RSV0VTNz7d8" rel="nofollow" target="1">https://www.youtube.com/watch?v=RSV0VTNz7d8</a></p>
<!-- 
NewPP limit report
Cached time: 20200217095304
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.020 seconds
Real time usage: 0.105 seconds
Preprocessor visited node count: 10/1000000
Preprocessor generated node count: 30/1000000
Post‐expand include size: 4942/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
--><!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
--><!-- Saved in parser cache with key docops_wiki:pcache:idhash:875811-0!canonical and timestamp 20200217095304 and revision id 1577577
 --></div>
</html>