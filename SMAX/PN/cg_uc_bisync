<html><div class="mw-parser-output">
<p></p>

<h2 class="mw-headline" id="Introduction">Introduction</h2>

<p>The Business Intelligence (BI Sync) Integration module enables you to define the fields and relationships that are synced for a record type when integrating with an external business intelligence system. This can help you export your data to a third party system with different reporting tools. BI Sync exports additional information not currently available in the SMA-X reporting framework.&nbsp;</p>

<p><b>IMPORTANT NOTE:</b> <i>Business Intelligence Synchronization is a resource-intensive feature. This document describes the specific use case of exporting people and groups to excel using BI Sync so they can be grouped and reported on. BI Sync does not have the ability to have two sets of configuration. While it might be acceptable to run an initial sync more than once with low volume entities like people/groups, it would not be a good idea with large volume entities like request/incident. There is also a monthly quota per tenant that will get used rapidly if a large number of entities are exported consistently.</i></p>

<p></p>

<h2 class="mw-headline" id="Use_Case">Use Case</h2>

<p>A company named ABC Reporting wants a report that lists all the users and all of the groups they belong to using Microsoft Excel. Data required selecting in BI Sync to report on groups and group membership:</p>

<ul>
	<li>Person-&gt; Id, Name, Group members.</li>
	<li>Group-&gt;Id, Name.</li>
</ul>

<h3 class="mw-headline" id="Configuration_Steps_-_Summary">Configuration Steps - Summary</h3>

<ol>
	<li>Add the record types and fields required to generate the desired reports</li>
	<li>Execute the REST call in order to generate and download the data</li>
	<li>Load the data into Microsoft Excel</li>
</ol>

<p></p>

<h3 class="mw-headline" id="Configuration_Steps_-_Detail">Configuration Steps - Detail</h3>

<h4 class="mw-headline" id="1._Add_the_record_types_and_fields_required_to_generate_the_desired_reports">1. Add the record types and fields required to generate the desired reports</h4>

<p>BI Sync allows users to export all transactional data available in Service Management Automation X. Select an entity type from the record type list. Select all the fields that are required, note when the fields are dependent on other entity types an indicator is next to the field name. All of these entity types will also need selecting. If related records are required these also need to be included.</p>

<p><b>Fields required for Groups entity:</b></p>

<p>￼<a class="image" onclick="javascript:loadingImage(this);"><img alt="BISync-1.png" data-file-height="547" data-file-width="1149" height="547" src="/mediawiki/images/c/c7/BISync-1.png" width="1149"></a></p>

<p><b>Fields required for Person entity:</b> ￼</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="BISync-2.png" data-file-height="687" data-file-width="1154" height="687" src="/mediawiki/images/c/c2/BISync-2.png" width="1154"></a>Click save.</p>

<p></p>

<h4 class="mw-headline" id="2._Execute_the_REST_call_in_order_to_generate_and_download_the_data">2. Execute the REST call in order to generate and download the data</h4>

<p>While logged into SMA-X, open a new tab in the browser and launch the Postman Chrome extension. Execute the REST call to run the BI sync job:</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="BI sync 1.png" data-file-height="745" data-file-width="1008" height="745" src="/mediawiki/images/6/69/BI_sync_1.png" width="1008"></a></p>

<p>Using the SyncId from the above call, execute the REST call to get the status and the file names created by BI Sync:</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="BI sync 2.png" data-file-height="824" data-file-width="990" height="824" src="/mediawiki/images/2/27/BI_sync_2.png" width="990"></a></p>

<p>There will be a number of files, record the names of all of the files, open another tab in the browser and enter the URL: <a class="external free" href="https://msast002pngx.domain.com/rest/" rel="nofollow" target="1">https://msast002pngx.domain.com/rest/</a>&lt;TenantID&gt;/frs/file-list/&lt;FILEID&gt;<a class="image" onclick="javascript:loadingImage(this);"><img alt="BI Sync 3b.png" data-file-height="42" data-file-width="1136" height="42" src="/mediawiki/images/2/28/BI_Sync_3b.png" width="1136"></a></p>

<p>A file download will start and a file in the format &lt;Entity_type&gt;.zip, repeat for each of the FileID values obtained in the status REST call.</p>

<h4 class="mw-headline" id="3._Load_the_data_into_Microsoft_Excel">3. Load the data into Microsoft Excel</h4>

<p>There should be at least 3 files in total after downloading all the files: ￼</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="Bi sync 4.png" data-file-height="310" data-file-width="641" height="310" src="/mediawiki/images/3/3e/Bi_sync_4.png" width="641"></a></p>

<p>Open each of the files and save them as Excel files. Open the file that stores the relationships between the people and groups, the file is named ‘PersonToGroup’. Add two new columns Group Name and Person Name after the SecondEntity_PersonGroup column. In the Group Name field paste the formula <b>=VLOOKUP(D2,PersonGroup_0!C$2:D$800,2,FALSE)</b> when you save the formula a file selector will open. Select the Person_group_0.xlsx file created above.</p>

<p>In the Person Name field paste the formula <b>=VLOOKUP(C2, Person_0!C$2:D$800,2,FALSE)</b> into the field and select the Person_0.xlsx file when the file selector window opens.</p>

<p>Note that the “800” in the above formulas can be replaced with the total number of rows in the referenced spreadsheet. In excel it should look like the following: ￼</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="Bi sync 5.png" data-file-height="316" data-file-width="991" height="316" src="/mediawiki/images/7/77/Bi_sync_5.png" width="991"></a></p>

<p>Copy the formula for the columns E and F for all entries and add a filter to the top row. It is now possible to filter on group or person and see all of the associated values. ￼</p>

<p><a class="image" onclick="javascript:loadingImage(this);"><img alt="Bi sync 6.png" data-file-height="365" data-file-width="667" height="365" src="/mediawiki/images/c/ca/Bi_sync_6.png" width="667"></a></p>
<!-- 
NewPP limit report
Cached time: 20200217094818
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.028 seconds
Real time usage: 0.163 seconds
Preprocessor visited node count: 11/1000000
Preprocessor generated node count: 32/1000000
Post‐expand include size: 4311/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
--><!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
--><!-- Saved in parser cache with key docops_wiki:pcache:idhash:875818-0!canonical and timestamp 20200217094818 and revision id 1577589
 --></div>
</html>