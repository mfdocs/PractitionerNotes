<div class="f14 metric" style="color:#656668;display:flex;"><img src="/assets/images/calendar.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="updateDate">&nbsp; Updated on 13/03/2019</span> &nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp; <img src="/assets/images/updated.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="readTime">&nbsp; 17 minutes to read</span>&nbsp;&nbsp;&nbsp;&nbsp;</div><br><div class="mw-parser-output"><div class="mw-collapsible-content"><div class="Admonition_Tip"><span class="autonumber">Incident Flows</span><div class="mw-collapsible">
<div class="mw-collapsible-content"><br>
<p>Now that we have set up a good portion of what we need for incident management, we can look at the incident workflow. Along the way, we will investigate the similarities and differences between incident and request management and how they work together.
</p>
<br><div class="center"><div class="floatnone"><a onclick="javascript:loadingImage(this);" class="image"><img alt="IncidentDataModel.gif" src="/mediawiki/images/2/27/IncidentDataModel.gif" width="763" height="999" data-file-width="763" data-file-height="999"></a></div></div><br>
</div>
</div>
</div>
</div>
<p><br>
</p>
<div id="toc" class="toc"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none"><div class="toctitle" lang="en" dir="ltr"><h2>Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Request_and_Incident.E2.80.A6_Better_Together"><span class="tocnumber">1</span> <span class="toctext">Request and Incident… Better Together</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Incident_Workflow"><span class="tocnumber">2</span> <span class="toctext">Incident Workflow</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Classification"><span class="tocnumber">3</span> <span class="toctext">Classification</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Resolution"><span class="tocnumber">4</span> <span class="toctext">Resolution</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Validation"><span class="tocnumber">5</span> <span class="toctext">Validation</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Incident_Task_Plans"><span class="tocnumber">6</span> <span class="toctext">Incident Task Plans</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Service_Level_Targets"><span class="tocnumber">7</span> <span class="toctext">Service Level Targets</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows#Request.2FIncident_Workflow"><span class="tocnumber">8</span> <span class="toctext">Request/Incident Workflow</span></a></li>
</ul>
</div>

<h3><span id="Request_and_Incident…_Better_Together"></span><span class="mw-headline" id="Request_and_Incident.E2.80.A6_Better_Together">Request and Incident… Better Together</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=1" class="mw-editsection-visualeditor" title="Edit section: Request and Incident… Better Together">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=1" title="Edit section: Request and Incident… Better Together">edit source</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>You’ve probably noticed that there is quite a bit of similarity between the Request and Incident processes. The real difference between the two is that Request handles requests and issues coming from the consumers of our IT Services while Incident handles issues on the provider side. I’ve come up with two tenants for our Service Desk to help define what each of these processes is used for:
</p>
<ul><li>Service Request management encompasses the consumer-facing processes that make up the expected, day to day activities involved in providing a service to an individual or group.</li>
<li>Incident Management encompasses the processes used by the service provider to track and resolve any issue that impacts the ability of a user to consume the service.</li></ul>
<p>It may have crossed your mind that there will be some situations where we actually need both of these processes. Let’s take a look at an example of this in detail.
</p><p>For our example, let’s say one of our End Users has called in because they can’t access the company’s HR web page. When they call in, one of our Agents creates a support request. The goal of that request is to allow the End User to access the web page – or to allow the End User to consume the Service.
</p><p>After the Agent works with the End User for a bit over the phone, they determine that there is some type of failure in one of the DNS servers that is causing the issue. Now there is a known issue that is impacting our ability to provide a Service, so they need to also create an Incident. In some cases the Request and Incident might be assigned to the same Agent, but in others there might be one Agent working with the End User (in the Request) and another more technical one working on the server in question (in the Incident).
</p><p>Luckily, Service Management Automation X makes it easy to link the original Request to the Incident, allowing information to be passed back and forth between the two records. In fact, the Agent working on the Request simply needs to check a box that states that the Service is impacted in some way and Service Management Automation X will automatically create a new Incident and link it with the Request. Additionally, new Requests may be related to the same Incident when they come in. When creating the new Request, the Incident will show up in the Agent’s interface as a possibly related Incident in order to make the relation easier to find – and then the Agent can relate the two together with a single click.
</p><p>When an Incident is resolved (we’ll look more at the actual workflow in just a minute), the pertinent information is copied to all related Requests. The Requests will automatically move to the Accept phase, which if you remember will send the End User an email to let them know the issue has been resolved. In this way, a single person resolving the Incident can also resolve multiple Requests at the same time – without having to do anything additional!
</p><p>For those time when the same Agent is responsible for both the consumer and provider side of the issue, Service Management Automation X also allows them to do all of the work on the Request if they desire. If the Request is closed successfully, the Incident will automatically be resolved as well. This works great for our Service Desk Agents that are more technical and work on the actual issues as well as helping the End Users.
</p><p>If you are still a little confused by the difference between the two processes, go ahead and check out this blog post which explains it in a bit more detail.
</p><p>If you are still a little confused by the difference between the two processes, check out this <a target="1" rel="nofollow" class="external text" href="https://community.softwaregrp.com/t5/Archived-IT-Service-Management/Confused-by-request-management-vs-incident-management-Don-t-be/ba-p/246171">blog post</a> which explains it in more detail.
</p><p><br>
</p>
<h3><span class="mw-headline" id="Incident_Workflow">Incident Workflow</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=2" class="mw-editsection-visualeditor" title="Edit section: Incident Workflow">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=2" title="Edit section: Incident Workflow">edit source</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Overall, the Incident workflow is very similar to the request workflow. However, the end goals of the two processes are different. While request deals with ensuring that the end user’s issue has been resolved, the incident aims to eliminate any disruption or degradation in the service that the IT department is providing.
</p><p><a onclick="javascript:loadingImage(this);" class="image"><img alt="8.1-IncidentWorkflow.png" src="/mediawiki/images/9/9c/8.1-IncidentWorkflow.png" width="1084" height="298" data-file-width="1084" data-file-height="298"></a>
</p>
<h2><span class="mw-headline" id="Classification">Classification</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=3" class="mw-editsection-visualeditor" title="Edit section: Classification">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=3" title="Edit section: Classification">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Unlike request, there are two phases of the ‘Classification’ step rather than one. The first is the ‘Log’ phase, where the initial information such as the title and description of the issue and what service is being affected. After this information is saved the Incident moves to the ‘Classify’ phase.
</p><p>The only additional information required in the ‘Classify’ phase is a category (remember those?). Once the agent enters the category, the Incident will move on to the ‘Resolution’ step. It is important to have the categorization information as the combination of category and service will most likely give us an idea of how this incident should be assigned.
</p><p>Once we’ve entered the category (along with all the required fields) the incident moves on to the ‘Resolution’ step.
</p>
<h2><span class="mw-headline" id="Resolution">Resolution</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=4" class="mw-editsection-visualeditor" title="Edit section: Resolution">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=4" title="Edit section: Resolution">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The ‘Resolution’ step consists of two phases, the ‘Initial Support’ phase and the ‘Escalate’ phase. During the resolution step, the service desk agents work to resolve any disruption that the Incident has caused. They may pass the incident along to one or more expert groups if necessary. These groups are not part of the day to day operations of the service desk but are Subject Matter Experts (SMEs) that may be necessary to help with specific systems or applications that support our services.
</p><p>If it becomes necessary to raise the visibility of the Incident within the organization, the agent can move it into the ‘Escalate’ phase. The primary goal is still to resolve any disruption, but the ‘Escalate’ phase marks the incident as needing more visibility and sends notifications to more personnel.
</p><p>Once the source of the service disruption is found and removed the agent can fill in a resolution for the incident, which moves it into the ‘Validation’ step. Remember that to resolve the incident we don’t necessarily have to fix the root cause of the problem, we only need to make sure that service has been restored to the consumers. This may involve providing a workaround to the issue rather than a complete solution.
</p>
<h2><span class="mw-headline" id="Validation">Validation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=5" class="mw-editsection-visualeditor" title="Edit section: Validation">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=5" title="Edit section: Validation">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The ‘Validation’ step includes a single phase, ‘Review’. This phase allows the service desk agent (or other designated person) to review the solution used to resolve the incident. If the solution is not correct (if further testing showed the issue was ongoing for example), the agent may return the Incident to the Initial support phase for further troubleshooting.
</p><p>If the solution is correct, the agent needs to add a completion code to the incident before closing it and completing the process. The completion code states how the issue was resolved. It might have been resolved successfully with a fix, or perhaps a workaround was given to the end users. The completion code is very important for many post-incident reports and processes such as problem management, and our agents need to make sure they take the time to fill it in correctly.
</p><p>Feel free to take a minute and look at the <a href="./itom/SMAX:2019.02/imWflw" title="SMAX:2019.02/imWflw">incident workflow</a> in the online help if you would like.
</p><p><br>
</p>
<h2><span class="mw-headline" id="Incident_Task_Plans">Incident Task Plans</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=6" class="mw-editsection-visualeditor" title="Edit section: Incident Task Plans">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=6" title="Edit section: Incident Task Plans">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>I mentioned before when talking about incident models we can assign tasks as part of the incident process. An agent can create tasks for any of the active phases (except for the 'Log' phase). All the tasks created for a specific phase must be completed before the incident can leave that phase. The collection of tasks within an incident (or any type of record) is called a Task Plan.
</p><p>These tasks become useful when we use them to assign work related to resolving the incident, such as assigning someone to do some detailed review of the logs during the 'Validation' step.
</p><p>You can find more information on <a href="./itom/SMAX:2019.02/Taskplans" title="SMAX:2019.02/Taskplans">incident task plans</a> (and task plans in general) in the online help.
</p><p><br>
</p>
<h2><span class="mw-headline" id="Service_Level_Targets">Service Level Targets</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=7" class="mw-editsection-visualeditor" title="Edit section: Service Level Targets">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=7" title="Edit section: Service Level Targets">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Just like requests (again), incidents may have service level targets defined. While we will get into the whole service level management process in detail later, I did just want to mention one thing. While these targets measure the same things in request and incident, the actual targets can be different between the two processes.
</p><p><br>
</p>
<h2><span id="Request/Incident_Workflow"></span><span class="mw-headline" id="Request.2FIncident_Workflow">Request/Incident Workflow</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;veaction=edit&amp;section=8" class="mw-editsection-visualeditor" title="Edit section: Request/Incident Workflow">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=SMAX:2019.02/PractitionersNotes/GettingStarted/IncidentFlows&amp;action=edit&amp;section=8" title="Edit section: Request/Incident Workflow">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>You’ve probably realized that there are going to be times where the same issue is going to result in both the Request and Incident processes being used. For example, if there is a hardware failure that results in the company Email being unreachable we will have:
</p>
<ul><li>One Incident against the Email service that is related to the hardware that is having the failure</li>
<li>Possibly multiple Requests against the Email service from any End User that is unable to get to their Email</li></ul>
<p>Luckily, Service Management Automation X has built-in interaction between Request and Incident that will reduce the work that our Agents need to do in order to properly execute both processes.
</p><p>If for some reason our monitoring software did not capture the Incident automatically and we first received a call from an End User about the issue, of course the Agent who received that call will open a Request to restore the Service for the caller. Once they have determined that the actual Service is not operational and they do not see any active Incidents against the Service, they know they need to create an Incident as well. Using Service Management Automation X, all they will need to do is check the “Service Impacted” flag on the Request and Service Management Automation X will automatically create the related Incident (and create the link between the Request and the Incident).
</p><p>Again in this example, we would probably end up with quite a few Requests that are linked to the Incident, as more and more people end up missing their email. Once our technicians fix the actual issue (or come up with a workaround… again, the point is to restore the ability to provide the Service) the Incident can be resolved. At this point Service Management Automation X will automatically resolve all of the related Requests, copying over the resolution. This gives the End Users the ability to accept the resolution and close their Request – with no need for our Service Desk Agents to get involved!
</p><p>If for some reason the resolution of the Incident did not restore the Service for any of the callers, then their Request will become active again (and the Service Desk Agent responsible for that Request will be notified). See how the Request and Incident process are still separate, even though they are linked? The Incident is responsible for restoring the ability to provide the Service, and the Request is responsible for ensuring that the customer can again consume the Service.
</p><p>Oh, and I know that some of our Service Desk Agents pull double duty as technicians as well, helping to fix various software or hardware problems that occur – thus working on the Incident process as well. To make their job easier, if the Request was originally marked with a “Service Impact” flag the Agent can actually close the Incident from the Request process. If the linked Request is resolved and accepted with one of the following Completion codes:
</p>
<ul><li>Resolved with workaround</li>
<li>Unable to reproduce</li>
<li>Abandoned by user</li>
<li>Incident resolved</li></ul>
<p>The linked Incident will be updated with the Solution and corresponding Completion code, resolving the Incident. Since the Incident can also turn around and resolve any additional (still active) Requests when it is resolved, our one Service Desk Agent can resolve all of the linked Requests as well as the Incident directly from their own Request!
</p><p>Ok, I hope that gave you a good overview of the Incident process, as well as how it interacts with our other main support process – Request. Unfortunately, there seems to be a pretty serious Incident going on right now… I can see my boss kicking one of our database servers. I’ll give you a chance to review what we’ve documented so far while I go and take care of whatever he broke this time. I’ll be back in a bit to talk about some supporting process for both Request and Incident Management.
</p>
<!-- 
NewPP limit report
Cached time: 20190524102655
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.020 seconds
Real time usage: 0.041 seconds
Preprocessor visited node count: 40/1000000
Preprocessor generated node count: 56/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key docops_wiki:pcache:idhash:746433-0!canonical and timestamp 20190524102655 and revision id 1308881
 -->
</div>