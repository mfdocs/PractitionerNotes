<div>
<div>
<div class="Admonition_Tip"><span class="autonumber">Change Management</span>
<div>
<div>
<p><br>
Changes to IT infrastructure may be necessary to respond to problems or externally imposed requirements and to improve efficiency and effectiveness of existing services. The change management process ensures that standardized methods, processes, and procedures are used for all changes to facilitate efficient and safe handling of all changes to the infrastructure, and is used to determine that the need for change outweighs the potential detrimental impact of changes.</p>

<p>ITIL defines the Change Management process with the following:</p>

<p>“The goal of the change management process is to ensure that standardized methods and procedures are used for efficient and prompt handling of all changes, in order to minimize the impact of change-related incidents upon service quality, and consequently improve the day-to-day operations of the organization.”</p>

<p>In a well-run environment, any change to an IT service (whether a business or infrastructure service) that affects one of the following should be controlled by change management:</p>

<ul>
	<li>Hardware</li>
	<li>Communications equipment and software</li>
	<li>System software</li>
	<li>All documentation and procedures associated with the running, support and maintenance of live systems</li>
</ul>

<p>The change management process includes recording change requests, impact assessment, cost/benefit and risk analysis of proposed changes, business justification and approval of the change, managing and coordinating change implementation, monitoring implementation tasks, reviewing change results, and closing the completed change.</p>

<div>
<div><img alt="Change Data Model.gif" src="/mediawiki/images/2/21/Change_Data_Model.gif" style="height:704px; width:988px"></div>
</div>
</div>
</div>
</div>
</div>

<p>&nbsp;</p>

<div>
<div>&nbsp;</div>
</div>

<h2>Using Change Management</h2>

<p>Now that we have our services defined and have performed the hard work of mapping out all of their components and relationships, let’s just change everything, right? Unfortunately, that is how it feels sometimes. As the needs of our consumers change and grow, and new requirements bring the need for new systems and services, our IT infrastructure changes. What we need is a way to keep up with and control these changes.</p>

<p>In order to control our IT environment, we shouldn’t allow any change to our existing infrastructure without some kind of documentation and approval process. Otherwise, we could negatively (and perhaps drastically) affect the services we are providing to our end users and customers.</p>

<p>Luckily, we have change management and the change process. This process allows changes to the IT infrastructure to keep up with demand in a controlled way. Using it, we can evaluate the need for a specific change and weigh the possible benefits against the risk of unforeseen issues it might create. Additionally, we can define an approval process that won't let any change happen without the right stakeholders giving it the go-ahead.</p>

<p>It also allows us to create a more standardized method of making these changes, and when we get good enough at a certain type of change, we can bypass the upfront evaluation and approval process. Even better, we can automate some or all of a specific type of change to make it as efficient as possible.</p>

<p>&nbsp;</p>

<h2>Setting up Change Management</h2>

<p>Setting up change management is nearly identical to setting up the other modules we have addressed so far. Change uses the same record categories we have seen before, so we need to review those and create any that we need specifically for changes. We can also review the existing views and reports and add any we might find necessary.</p>

<p>There are a few things, however, that are specific to change management we need to address to ensure the best experience for our agents. This includes setting up a few change models for common types of changes and defining the blackout and maintenance windows for the change calendar.</p>

<p>&nbsp;</p>

<h2>Creating Change Models</h2>

<p>There are many pieces of information that go into creating a change request. Along with the actual SACM components that are being changed, the requester needs to provide various pieces of data that include:</p>

<ul>
	<li>A description of the change, including the reason for the change and the justification for it</li>
	<li>Change classification information, including the categorization, risk, urgency, and projected impact of the change</li>
	<li>When the change will be made and how long it will take</li>
	<li>Who needs to review the change and approve it</li>
	<li>An implementation plan (and a remediation plan in case of failure, including specific tasks necessary to complete the change</li>
</ul>

<p>So you can see that creating a change is not a simple procedure. However, over time we will most likely perform the same type of change multiple times.</p>

<p>To make this process more efficient, Service Management Automation X provides the ability to create change models. Change models are much like service offerings as they define all the information needed to request a specific type of change.</p>

<p><img alt="ChangeModel.png" src="/mediawiki/images/1/18/ChangeModel.png" style="height:687px; width:1631px"></p>

<p>Not only does this make it easier to create changes, but Service Management Automation X also tracks the success rate and the risk criteria for all changes created with a specific change model. This will allow us to identify specific types of changes prone to failure or that have high risk. We can then work with our experts to modify the processes they use to make the change, with the goal of raising the success percentage and lowering the risk.</p>

<p>The success analysis and risk statistics I mentioned are also visible on each change record as well as a list of the last few similar changes. These are visible on the right-hand side of each change in a separate section titled 'Additional information'. If you can’t see the graphs, you’ll need to expand it by clicking on the arrow at the top of the section.</p>

<p>You can find more information about change models in the <a href="./itom/SMAX:2020.02/ChangeModels">online help</a>.</p>

<p>&nbsp;</p>

<h2>Setting up Time Periods</h2>

<p>One of the important aspects of a change is scheduling when it will occur. Because they may affect the services we are providing to our end users, it is important to minimize any impact the change may have on their operation. One way we try to minimize this impact is to schedule times for when changes may take place (maintenance windows) and times where they are not (blackout periods).</p>

<p>We create the maintenance windows and blackout periods in Service Management Automation X using time periods. With time periods, it is easy to define recurring events using a simple and easy to understand scheduling mechanism.</p>

<p><img alt="TimePeriod.png" src="/mediawiki/images/4/4d/TimePeriod.png" style="height:958px; width:1628px"></p>

<p>We can define the maintenance and blackout time periods to correspond to every service we have or only a specific service.</p>

<p>When creating or reviewing a change, the requester will see the blackout and maintenance windows, which will assist them in the scheduling process. In fact, Service Management Automation X can even suggest a start time based on the duration of the change and the maintenance windows defined.</p>

<p><img alt="ChangeScheduling.png" src="/mediawiki/images/a/a7/ChangeScheduling.png" style="height:943px; width:1629px"></p>

<p>Additional information about time periods may be found <a href="./itom/SMAX:2020.02/TimePeriods">here</a>.</p>
<!-- 
NewPP limit report
Cached time: 20200217094233
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.020 seconds
Real time usage: 0.108 seconds
Preprocessor visited node count: 14/1000000
Preprocessor generated node count: 38/1000000
Post‐expand include size: 7254/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
--><!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
--><!-- Saved in parser cache with key docops_wiki:pcache:idhash:875772-0!canonical and timestamp 20200217094233 and revision id 1577532
 --></div>
