<div class="f14 metric" style="color:#656668;display:flex;"><img src="/assets/images/calendar.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="updateDate">&nbsp; Updated on 07/03/2019</span> &nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp; <img src="/assets/images/updated.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="readTime">&nbsp; 4 minutes to read</span>&nbsp;&nbsp;&nbsp;&nbsp;</div><br><div class="mw-parser-output"><p><br>
Both the CDF and a deployed Suite use databases to store their data.
</p><p>The CDF components support external databases.
</p><p>Suite deployments support embedded and external databases.
</p><p>The following table lists the CDF databases:
</p>
<a class="buttonfullscr" onclick="javascript:loadingTableButton(this);"><button class="flscrbtn"><i class="material-icons flscricn">open_in_new</i><div style="margin: auto 5px;">View Fullscreen</div></button></a><table>
<tbody><tr>
<th><b>Use</b>
</th>
<th><b>Embedded Database</b>
</th>
<th><b>External database supported?</b>
</th></tr>
<tr>
<td>Micro Focus Identity Management (IDM)
</td>
<td>PostgreSQL, optional HA
</td>
<td>Yes
</td></tr>
<tr>
<td>Micro Focus Autopass License Manager
</td>
<td>PostgreSQL, optional HA
</td>
<td>Yes
</td></tr>
<tr>
<td>Micro Focus CDF Suite Installer
</td>
<td>PostgreSQL, optional HA
</td>
<td>No
</td></tr>
<tr>
<td>Kubernetes data store
</td>
<td>ETCD, distributed and replicated in multi-master CDF configurations
</td>
<td>N/A always Etcd
</td></tr>
<tr>
<td>Flannel configuration
</td>
<td>ETCD, distributed and replicated in multi-master CDF configurations
</td>
<td>N/A always Etcd
</td></tr>
<tr>
<td>Vault data backend
</td>
<td>ETCD, distributed and replicated in multi-master CDF configurations
</td>
<td>N/A always Etcd
</td></tr></tbody></table>
<div id="toc" class="toc"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none"><div class="toctitle" lang="en" dir="ltr"><h2>Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/Databases#Embedded_databases"><span class="tocnumber">1</span> <span class="toctext">Embedded databases</span></a>
<ul>
<li class="toclevel-2"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/Databases#Overview"><span class="tocnumber">1.1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-2"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/Databases#High_availability_for_embedded_Postgres"><span class="tocnumber">1.2</span> <span class="toctext">High availability for embedded Postgres</span></a></li>
<li class="toclevel-2"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/Databases#Backup_.2F_restore_for_embedded_Postgres"><span class="tocnumber">1.3</span> <span class="toctext">Backup / restore for embedded Postgres</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="https://staging.docs.microfocus.com/itom/SMAX:2019.02/Databases#External_databases"><span class="tocnumber">2</span> <span class="toctext">External databases</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Embedded_databases">Embedded databases</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;veaction=edit&amp;section=T-1" class="mw-editsection-visualeditor" title="Edit section: ">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;action=edit&amp;section=T-1" title="Edit section: ">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Overview">Overview</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;veaction=edit&amp;section=T-2" class="mw-editsection-visualeditor" title="Edit section: ">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;action=edit&amp;section=T-2" title="Edit section: ">edit source</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The CDF uses two embedded databases:
</p>
<ul><li>ETCD 3.2.17 (2)</li>
<li>PostgreSQL 9.5.11 with PGPool 3.7.2</li></ul>
<div class="Admonition_Note">
<p><span class="autonumber">Note</span><br>
</p>
CDF also carries 9.4.12 for suite backward compatibility.</div>
<p>(2) Actual versions may change with updates to the 2018.11 and subsequent releases.
</p><p>CDF carries the following JDBC drivers: postgresql-9.3-1101-jdbc41.jar, postgresql-42.2.1.jar, ojdbc7.jar
</p><p>Embedded database are always containerized database engine instances with external storage attached to the container to store the database files. HA is supported but optional.
</p><p>The container images for the CDF database instances are located in either the local Docker registry or in &lt;CDF root&gt;/images:
</p>
<ul><li>itom-platform-postgresql: 9.5.11-007 and itom-postgresql-pool: 3.7.2-003</li>
<li>itom-platform-postgresql:9.4.12-00301</li>
<li>etcd-amd64-3.2.17.tgz</li></ul>
<p>The external storage is NFS-based and is attached to the database container using the volume as persistent volume claim linked to persistent volume pattern. Example: suite-pg.yaml file under &lt;CDF root&gt;/objectdefs/yaml_template/output.
</p>
<pre class="syntaxhighlighter-pre">…
volumeMounts:
- name: db-store
mountPath: /var/pgdata
subPath: baseinfra-1.0/postgresql95CDF
…
volumes:
- name: db-store
persistentVolumeClaim:
claimName: itom-vol-claim
…
</pre>
<p>The PostgreSQL database directory is mounted into the container under /var/pgdata. Its NFS volume is the one backed by the itom-vol-claim persistent volume claim and the database files are in a subfolder called baseinfra-1.0/idm-db.
</p><p>For ETCD, as this runs directly on Docker, the mounting mechanism is Docker-specific using the -v flag but the pattern is the same: the data is stored outside of the running container. To check the database volume mount for ETCD (see &gt;&gt;&gt; prefixed lines):
</p>
<pre class="syntaxhighlighter-pre"># docker -H unix:///var/run/docker-bootstrap.sock ps | grep etcd
b46ba8a5d202 gcr.io/google_containers/etcd-amd64:2.2.1 "/usr/local/bin/etcd " 2 weeks ago Up 2 weeks etcd_container

# docker -H unix:///var/run/docker-bootstrap.sock inspect b46ba8a5d202
…
"Mounts": [
{
"Source": "&lt;CDF root&gt;/ssl",
"Destination": "/etc/etcd/ssl",
"Mode": "",
"RW": true,
"Propagation": "rprivate"
},
&gt;&gt;&gt;{
&gt;&gt;&gt;"Source": "&lt;CDF root&gt;/data/etcd",
&gt;&gt;&gt;"Destination": "/var/etcd",
&gt;&gt;&gt;"Mode": "",
&gt;&gt;&gt;"RW": true,
&gt;&gt;&gt;"Propagation": "rprivate"
&gt;&gt;&gt;},
{
"Source": "&lt;CDF root&gt;/log/etcd",
"Destination": "/var/log",
"Mode": "",
"RW": true,
"Propagation": "rprivate"
}
]
…
</pre>
<h3><span class="mw-headline" id="High_availability_for_embedded_Postgres">High availability for embedded Postgres</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;veaction=edit&amp;section=T-3" class="mw-editsection-visualeditor" title="Edit section: ">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;action=edit&amp;section=T-3" title="Edit section: ">edit source</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The following figure shows the configuration for HA for the embedded PostgreSQL default database – if the optional HA configuration is selected.
</p><p><a onclick="javascript:loadingImage(this);" class="image"><img alt="cdferwp201801 fig27.png" src="/mediawiki/images/thumb/0/06/cdferwp201801_fig27.png/800px-cdferwp201801_fig27.png" width="800" height="612" srcset="/mediawiki/images/0/06/cdferwp201801_fig27.png 1.5x" data-file-width="1054" data-file-height="806"></a>
</p><p>Figure - PostgreSQL HA configuration
</p>
<h3><span id="Backup_/_restore_for_embedded_Postgres"></span><span class="mw-headline" id="Backup_.2F_restore_for_embedded_Postgres">Backup / restore for embedded Postgres</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;veaction=edit&amp;section=T-4" class="mw-editsection-visualeditor" title="Edit section: ">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;action=edit&amp;section=T-4" title="Edit section: ">edit source</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>CDF 2018.11 deploys a backup/restore service for the embedded Postgres databases.
</p><p>The database are registered to this service and can be backed up and restored using a command line tool or by calling the backup/restore service REST API.
</p><p>The following diagram shows the architecture and the activity flow for backup of the databases.
</p><p><a onclick="javascript:loadingImage(this);" class="image"><img alt="backrest1.png" src="/mediawiki/images/e/e1/backrest1.png" width="1252" height="539" data-file-width="1252" data-file-height="539"></a>
</p>
<h2><span class="mw-headline" id="External_databases">External databases</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;veaction=edit&amp;section=T-5" class="mw-editsection-visualeditor" title="Edit section: ">edit</a><span class="mw-editsection-divider"> | </span><a href="/mediawiki/index.php?title=ITOM_Container_Deployment_Foundation:2019.02/WhitepaperDatabases&amp;action=edit&amp;section=T-5" title="Edit section: ">edit source</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The CDF and Suite support using external databases. See the Installation guide for configuration details.
</p><p>For Suite production use, Micro Focus recommends external databases for the Suite deployments.
</p>
<div class="Admonition_Note">
<p><span class="autonumber">Note</span>
</p>
Setup, configuration, (high) availability of external databases are a customer responsibility.</div>

<!-- 
NewPP limit report
Cached time: 20190524103657
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.020 seconds
Real time usage: 0.053 seconds
Preprocessor visited node count: 19/1000000
Preprocessor generated node count: 62/1000000
Post‐expand include size: 3775/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 1277/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key docops_wiki:pcache:idhash:430362-0!canonical and timestamp 20190524103657 and revision id 1260282
 -->
</div>