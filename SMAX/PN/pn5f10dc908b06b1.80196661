<html><h2 id="Introduction">Introduction</h2>

<p>Service Management Automation X provides an Operations Orchestration integration that allows you to automate tasks or integrate with other products. The integration uses the On-Premise Bridge to connect SMAX to a Micro Focus Operations Orchestration installation. This document describes how to configure the OO integration with Service Management Automation X and provides an example of how to use SMAX with OO.</p>

<p>This chapter will include:</p>

<ul>
	<li>Create OPB Integration User</li>
	<li>Install OPB Agent</li>
	<li>Configure SSL for OPB</li>
	<li>Create Endpoint</li>
	<li>Configure OO Endpoint</li>
	<li>Example of using SMAX with OO</li>
	<li>Troubleshooting </li>
</ul>

<h2 id="Create_OPB_Integration_User">Create OPB Integration User</h2>

<p>A suite admin user needs to create an Integration User within the Suite Administration before it can be used within the Tenant. To do this, access the Suite Administration URL. The URL resembles the following example:</p>

<p><a href="https://smademovm07.swinfra.net/BO" rel="nofollow" target="1">https://smademovm07.swinfra.net/BO</a> <img alt="Create OPB User 1.png" data-file-height="362" data-file-width="972" height="362" src="/mediawiki/images/6/63/Create_OPB_User_1.png" width="972"></p>

<p>Once logged in go to the <b>Users</b> section.</p>

<p>Click <b>New</b> to add an Integration user.</p>

<p>Enter all relevant user details, paying key attention to the <b>Role</b> value, where the account must be set to <i>Integration user</i> and not <i>Account user</i>. <img alt="cg integration oo 2.png" data-file-height="737" data-file-width="625" height="737" src="/mediawiki/images/1/12/cg_integration_oo_2.png" width="625"></p>

<p>Once all details are entered click on <b>Save.</b></p>

<p>Once the Integration user has been created, the next step is to activate the account. Click on the created account in order to access the details.</p>

<p><img alt="cg integration oo 3.png" data-file-height="181" data-file-width="972" height="181" src="/mediawiki/images/f/f3/cg_integration_oo_3.png" width="972"></p>

<p>Click <b>Activate</b> and then <b>Save</b>.</p>

<p>The system will send an activation email to the email address provided in the details of the account. The link in this activation email will allow you to set the password for this Integration account. This password will be required later when entering the details into the OPB.</p>

<p>Next, assign the user to a Tenant. Click on the <b>Tenant</b> tab on the top of the screen.</p>

<p>Choose the relevant tenant that the Integration user will access.</p>

<p><img alt="cg integration oo 4.png" data-file-height="458" data-file-width="974" height="458" src="/mediawiki/images/8/87/cg_integration_oo_4.png" width="974"></p>

<p>From here, click on <b>Users</b> so the integration user can be linked to this tenant.</p>

<p><img alt="cg integration oo 5.png" data-file-height="164" data-file-width="981" height="164" src="/mediawiki/images/b/b2/cg_integration_oo_5.png" width="981"></p>

<p>Click on <b>Attach</b> and then choose your Integration user</p>

<p><img alt="cg integration oo 6.png" data-file-height="424" data-file-width="602" height="424" src="/mediawiki/images/a/a3/cg_integration_oo_6.png" width="602"></p>

<p>Click <b>Attach</b> and then <b>Save</b>.</p>

<p>Now within the Tenant this user will need to be sync’d. In order to do this, login with a Tenant Admin user. From the Main Menu click on <i>Administration</i> and then <i>People</i>.</p>

<p><img alt="cg integration oo 7.png" data-file-height="147" data-file-width="485" height="147" src="/mediawiki/images/5/57/cg_integration_oo_7.png" width="485"></p>

<p>Click on <b>Sync</b> if the new Integration User is not listed.</p>

<p>Once the Integration user appears within the tenant, assign the appropriate rights.</p>

<p>Open up the Integration user and scroll down to the section <i>System use definitions</i>. At present only the Self-Service Portal User will exist. Type 'OPB ' and you should see the role <b>OPB Remote Agent</b>. Click on this to add it the role. Do the same for <b>Tenant Admin Role</b> if required. In the following example either Tenant Admin or IT User can be used. If you want to limit the permissions that the Integration user can use, do not assign the Tenant Admin role.</p>

<p><img alt="cg integration oo 8.png" data-file-height="97" data-file-width="874" height="97" src="/mediawiki/images/0/01/cg_integration_oo_8.png" width="874"></p>

<p>Once all permissions have been added click <b>Save</b>.</p>

<p>The Integration user is now setup.</p>

<h2 id="Install_OPB_Agent">Install OPB Agent</h2>

<p>Login to the Service Management Automation X tenant with a Tenant Admin User. <img alt="cg integration oo 9.png" data-file-height="631" data-file-width="972" height="631" src="/mediawiki/images/6/6a/cg_integration_oo_9.png" width="972"></p>

<p>Go to Agent Interface.</p>

<p>From the main menu, navigate to the Integration area under Administration and Utilities</p>

<p><img alt="cg integration oo 10.png" data-file-height="420" data-file-width="972" height="420" src="/mediawiki/images/e/e3/cg_integration_oo_10.png" width="972"></p>

<p>From the Agent screen, click on <b>Download</b> <b>agent</b> to download a copy of the Agent install file locally on your computer.</p>

<p><img alt="cg integration oo 11.png" data-file-height="112" data-file-width="972" height="112" src="/mediawiki/images/f/fa/cg_integration_oo_11.png" width="972"></p>

<p>Copy the Agent install file across to the server which will run the On-Premise Bridge Software.</p>

<p>Go through the install process which is described in this link (specifically the section on Installing the OPB):</p>

<p><a href="https://docs.microfocus.com/itom/Service_Management_Automation_-_X:2018.08/PractitionersNotes/SMAX_Config/cg_gmail" rel="nofollow" target="1">https://docs.microfocus.com/itom/Service_Management_Automation_-_X:2018.08/PractitionersNotes/SMAX_Config/cg_gmail</a></p>

<p>Go to the following location:</p>

<p>C:\ProgramData\MicroFocus\On-Premise Bridge Agent\product\util\opb</p>

<p>Double click on credential_mng_ui</p>

<p><img alt="cg integration oo 12.png" data-file-height="587" data-file-width="974" height="587" src="/mediawiki/images/5/52/cg_integration_oo_12.png" width="974"></p>

<p>This will open up the Credentials Manager in order to create Endpoint credentials within Service Management Automation X.</p>

<p>Once it opens, click <b>New</b></p>

<p><img alt="cg integration oo 13.png" data-file-height="195" data-file-width="372" height="195" src="/mediawiki/images/e/e8/cg_integration_oo_13.png" width="372"></p>

<p>Select the type of Endpoint being created (in this case 'Operations Orchestration Domain'). Click <b>OK.</b></p>

<p><img alt="cg integration oo 14.png" data-file-height="418" data-file-width="739" height="418" src="/mediawiki/images/c/c5/cg_integration_oo_14.png" width="739"></p>

<p>Enter a name for the Credentials being created. Provide the username used by Service Management Automation X to connect to OO (which will connect to HCM) along with the password. Once all details are completed, click <b>Save</b>.</p>

<p><img alt="cg integration oo 15.png" data-file-height="593" data-file-width="974" height="593" src="/mediawiki/images/a/a7/cg_integration_oo_15.png" width="974"></p>

<h2 id="Configure_SSL_for_OPB">Configure SSL for OPB</h2>

<p>Before the OPB and OO can communicate, SSL certificates need to be added to the Java keystores. Without this, errors will be reported when trying to test the connection between the Service Management Automation X Endpoint and OO.</p>

<h3 id="Export_OO_Server_Certificate">Export OO Server Certificate</h3>

<p>On the OO Server, go to the OO installation location. If you installed OO into the default folder paths it should be something similar to below:</p>

<p>C:\Program Files\Micro Focus\Operations Orchestration or C:\Program Files\Hewlett-Packard\HP Operations Orchestration</p>

<p>In &lt;OO-Installation-Folder&gt;\central\var\security there are two certificate stores, the key one is:</p>

<p>key.store</p>

<p>From the &lt;OO-Installation-Folder&gt;, go to &lt;OO installation dir&gt;\java\bin</p>

<p>Run the following command to see what alias exists in the key.store:</p>

<p>keytool -list -keystore “C:\Program Files\Micro Focus\Operations Orchestration\central\var\security\key.store”</p>

<p>To export the certificate run the following command:</p>

<p>keytool -export -alias tomcat -keystore "c:\Program Files\Micro Focus\Operations Orchestration\central\var\security\key.store" -file " c:\Program Files\Micro Focus\Operations Orchestration\central\var\security \OOserver.cert"</p>

<p>Copy the OOserver.cert file from the C:\ Program Files\Micro Focus\Operations Orchestration\ central\var\security folder to relevant folder on the OPB server.</p>

<p>For OPB, place in the following location:</p>

<p>C:\ProgramData\MicroFocus\On-Premise Bridge Agent\product\util\3rd-party\jre\lib\security</p>

<h3 id="Import_SSL_Certificates_into_OPB">Import SSL Certificates into OPB</h3>

<p>This certificate file must be loaded into the OPB server in order for it to talk to the OO Server by SSL over port 8443. This is done by running the following command:</p>

<p>keytool.exe -import -keystore "C:\ProgramData\MicroFocus\On-Premise Bridge Agent\product\util\3rd-party\jre\lib\security\cacerts" -alias OOServer -file "C:\ProgramData\MicroFocus\On-Premise Bridge Agent\product\util\3rd-party\jre\lib\security\OOserver.cert"</p>

<p>When prompted for the password enter 'changeit'</p>

<p>Once the SSL certificates have been uploaded to the OPB, restart the On-Premise Bridge Agent Service. </p>

<h2 id="Create_Endpoint">Create Endpoint</h2>

<p>Log into the Service Portal with an Admin User</p>

<p>From the Main menu click on Agent Interface</p>

<p>Once the Dashboard has opened up, go to the Large Menu and Select Administration -&gt; Utilities -&gt; Integration</p>

<p><img alt="cg integration oo 16.png" data-file-height="283" data-file-width="974" height="283" src="/mediawiki/images/2/28/cg_integration_oo_16.png" width="974"></p>

<p><b>Note:</b> This assumes all previous steps to install OPB Agent have already been completed on an appropriate server.</p>

<p>Click on Endpoints</p>

<p>Within the Endpoints screen click on <b>Add</b>. Here a new Windows will appear asking for Endpoint Type, Endpoint name and Running on agent. Fill in the details like so and click <b>Add</b>.</p>

<p><img alt="cg integration oo 17.png" data-file-height="308" data-file-width="504" height="308" src="/mediawiki/images/9/91/cg_integration_oo_17.png" width="504"></p>

<p>This has now created an Endpoint for OO on the OPB.</p>

<h2 id="Configure_OO_Endpoint">Configure OO Endpoint</h2>

<p>Once the OPB is configured and the OO certificate uploaded into the Java Keystores, one final configuration is required. The Endpoint that was created earlier needs to be configured. Go to the Endpoint and click on <b>Configure</b>. Enter the OO URL details as shown below:</p>

<p><img alt="cg integration oo 18.png" data-file-height="391" data-file-width="972" height="391" src="/mediawiki/images/1/1b/cg_integration_oo_18.png" width="972"></p>

<p>Click on <b>Test Connection</b>. If everything is configured correctly then you should see the below response:</p>

<p><img alt="cg integration oo 19.png" data-file-height="391" data-file-width="972" height="391" src="/mediawiki/images/e/eb/cg_integration_oo_19.png" width="972"></p>

<p>Click <b>Save</b> to keep the configuration settings. The OPB will then connect to OO and run a Sync Task. This will allow SMAX to see all the OO flows that are configured within OO. When creating an Automated Task within SMAX it will be able to search OO for the correct flow which will be required.</p>

<p></p>

<h2 id="Example_of_using_SMAX_with_OO">Example of using SMAX with OO</h2>

<p>In this example we’ll setup a simple OO flow and then create an Offering in SMAX to allow a user to request a Password Reset. This will then trigger the OO flow that has been created and show the time that can be saved using automation within a number of the ITOM tools. The scenario will also capture if the request is unsuccessful and generate an incident within SMAX.</p>

<p>In order to create this scenario it is assumed you have access to the Postgres Database server that is used for SMAX. If not then it might be worth creating a PostgreSQL DB in order to follow this example through.</p>

<h3 id="Create_OO_Flow">Create OO Flow</h3>

<p>Within OO Studio make sure the following Content Packs have been installed:</p>

<p>OO Service Management Automation – X Content 3.2.0 in order to deploy this you also need the below CPs</p>

<p>CSA integrations content pack 4.70 or higher</p>

<p>OO 10-base-cp-1.16.0</p>

<p>Both of these can be downloaded from the Micro Focus MarketPlace website:</p>

<p><a href="https://marketplace.microfocus.com/itom/category/operations-orchestration" rel="nofollow" target="1">https://marketplace.microfocus.com/itom/category/operations-orchestration</a></p>

<p>For this example the flow will only use 3 steps and have an error and success options. The flow will look like this:</p>

<p><img alt="cg integration oo 20.png" data-file-height="424" data-file-width="693" height="424" src="/mediawiki/images/0/0d/cg_integration_oo_20.png" width="693"></p>

<p>In order to create this flow create a new project and give it name for example DB Flow. Right Click on Library and create a new folder called postGres. Right Click on the postGres folder and then click New Flow. Give the flow a name: PG Password Reset.</p>

<p>A blank workspace will appear.</p>

<p>The first object that needs adding to the flow is SQL Command as this will be the starting point for the flow. In the Dependencies pane in the bottom left of Studio, expand out the Base 1.16.0 Content pack like shown below.</p>

<p><img alt="cg integration oo 21.png" data-file-height="375" data-file-width="550" height="375" src="/mediawiki/images/b/b1/cg_integration_oo_21.png" width="550"></p>

<p><br>
Then drag the SQL Command on to the canvas.</p>

<p>Next is to find the SMAX Create incident and Get Token objects.</p>

<p><img alt="cg integration oo 22.png" data-file-height="389" data-file-width="447" height="389" src="/mediawiki/images/5/5b/cg_integration_oo_22.png" width="447"></p>

<p><br>
Now drag Get SSO Token and Create Incident objects on to the canvas.</p>

<p>So far the canvas should look a bit like this:</p>

<p><img alt="cg integration oo 23.png" data-file-height="300" data-file-width="406" height="300" src="/mediawiki/images/d/de/cg_integration_oo_23.png" width="406"></p>

<p><br>
Now we need to join the objects together in order to create the flow. To do this two more objects need adding to the flow. From the top bar of the Canvas area click on the following icon</p>

<p>Drag both the green tick and the red cross onto the canvas.</p>

<p>The screen should now look like this:</p>

<p><img alt="cg integration oo 24.png" data-file-height="354" data-file-width="716" height="354" src="/mediawiki/images/0/00/cg_integration_oo_24.png" width="716"></p>

<p><br>
Now the flow can be fully joined up. The key here is to understand what you expect to happen as this flow runs through. The flow starts at the SQL command. If the command can be actioned correctly then a success outcome is returned. If the SQL Command fails then an incident needs to be created within SMAX. In order for OO to create an incident in SMAX first it must login and acquire SSO Token as the user is then authorized to login. Then using the account details provided via the SMAX integration user this will then create an incident in SMAX based upon the fact that the SQL Command failed.</p>

<p>So the flow now will look like this:</p>

<p><img alt="cg integration oo 25.png" data-file-height="404" data-file-width="658" height="404" src="/mediawiki/images/d/d5/cg_integration_oo_25.png" width="658"></p>

<p>Now the flow has been designed, the next part required is all the inputs to allow the flow to work.</p>

<p>At the bottom of the screen click on Properties</p>

<p>Here all the required inputs that need to be supplied from SMAX need to be entered.</p>

<p>The Table below shows what must be entered:</p>

<table>
	<tbody>
		<tr>
			<th>Input</th>
			<th>Sensitive Data</th>
			<th>Required</th>
			<th>Assign From</th>
			<th>Otherwise</th>
		</tr>
		<tr>
			<td>DBServerName</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>DBServerName</td>
			<td>Prompt user</td>
		</tr>
		<tr>
			<td>DBType</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>DBType</td>
			<td>Prompt user</td>
		</tr>
		<tr>
			<td>DBPort</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>DBPort</td>
			<td>Prompt user</td>
		</tr>
		<tr>
			<td>Database</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>Database</td>
			<td>Prompt user</td>
		</tr>
		<tr>
			<td>userPassword</td>
			<td>ticked</td>
			<td>Yes</td>
			<td>userPassword</td>
			<td>Prompt user</td>
		</tr>
		<tr>
			<td>SMAXLoginURL</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>SMAXLoginURL</td>
			<td>Use the constant:
			<p>https://&lt;YOURSERVER_FQDN&gt;/auth/authentication-endpoint/authenticate/login</p>
			</td>
		</tr>
		<tr>
			<td>smaxUrl</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use the constant:
			<p>https://&lt;YOURSERVER_FQDN&gt;</p>
			</td>
		</tr>
		<tr>
			<td>smaxIncidentModelID</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>smaxIncidentModelID</td>
			<td>Use constant</td>
		</tr>
		<tr>
			<td>smaxTenantID</td>
			<td>Unticked</td>
			<td>Yes</td>
			<td>smaxTenantID</td>
			<td>Use constant</td>
		</tr>
	</tbody>
</table>

<p>Click back on the Design tab and then double click on the SQL Command. This will open up the Inspector pane so that all the relevant inputs for the SQL command can be set.</p>

<p>The Table below shows what must be set.</p>

<table>
	<tbody>
		<tr>
			<th>Input</th>
			<th>Sensitive</th>
			<th>Required</th>
			<th>Type</th>
			<th>Assign From</th>
			<th>Otherwise</th>
			<th>Assign To</th>
		</tr>
		<tr>
			<td>DBServerName</td>
			<td></td>
			<td>Yes</td>
			<td>Single Value</td>
			<td>DBServerName</td>
			<td>Prompt use</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>DBType</td>
			<td></td>
			<td>Yes</td>
			<td>Single Value</td>
			<td>DBType</td>
			<td>Prompt user</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td><i><b>Username</b></i></td>
			<td></td>
			<td><i><b>Yes</b></i></td>
			<td><i><b>Single Value</b></i></td>
			<td><i><b>&lt;not assigned&gt;</b></i></td>
			<td><i><b>System account</b></i></td>
			<td><i><b>&lt;not assigned&gt;</b></i></td>
		</tr>
		<tr>
			<td><i><b>Password</b></i></td>
			<td><i><b>Yes</b></i></td>
			<td><i><b>Yes</b></i></td>
			<td><i><b>Single Value</b></i></td>
			<td><i><b>&lt;not assigned&gt;</b></i></td>
			<td><i><b>System account</b></i></td>
			<td><i><b>&lt;not assigned&gt;</b></i></td>
		</tr>
		<tr>
			<td>Instance</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>DBPort</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>DBPort</td>
			<td>Prompt user</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>Database</td>
			<td></td>
			<td>Yes</td>
			<td>Single Value</td>
			<td>Database</td>
			<td>Prompt user</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>authenticationType</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>dbClass</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>dbURL</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td><i><b>Command</b></i></td>
			<td></td>
			<td><i><b>Yes</b></i></td>
			<td><i><b>Single Value</b></i></td>
			<td><i><b>&lt;not assigned&gt;</b></i></td>
			<td><i><b>Use constant:</b></i>
			<p><i><b>ALTER USER "eExpenseAdmin" WITH ENCRYPTED PASSWORD '”${userPassword}”';</b></i></p>
			</td>
			<td><i><b>&lt;not assigned&gt;</b></i></td>
		</tr>
		<tr>
			<td>Timeout</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>databasePoolingProperties</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>resultSetType</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:
			<p>TYPE_SCROLL_INSENSITIVE</p>
			</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>resultSetConcurrency</td>
			<td></td>
			<td></td>
			<td>Single Value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:
			<p>CONCUR_UPDATABLE</p>
			</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
	</tbody>
</table>

<p>In order to use a system account this needs to be configured first. In the Projects pane expand Configuration and select System Accounts. Right Click and select New System Account.</p>

<p>Enter the name that best describes this account.</p>

<p><img alt="cg integration oo 26.png" data-file-height="152" data-file-width="972" height="152" src="/mediawiki/images/b/bb/cg_integration_oo_26.png" width="972"></p>

<p><br>
Enter the details of the account and Click Save.</p>

<p>Now for the rows above highlighted in Yellow the newly created Service Account can be used.</p>

<p>The row above highlighted in Green is to show that the variable &lt;userPassword&gt; is passed into the SQL command in order to update the password based upon what the user wants to set the password to.</p>

<p>Back at the Inspector pane for SQL Command click on the Results tab</p>

<p>Then Click on the Plus button and leave the default values as shown below:</p>

<table>
	<tbody>
		<tr>
			<th>Name</th>
			<th>Sensitive Data</th>
			<th>From</th>
			<th>Assign To</th>
			<th>Assignment Action</th>
			<th>Filters</th>
		</tr>
		<tr>
			<td>completionResult</td>
			<td></td>
			<td>ResultField: result</td>
			<td>Flow Variable</td>
			<td>OVERWRITE</td>
			<td>No Filters</td>
		</tr>
	</tbody>
</table>

<p>The SQL Command is now fully configured.</p>

<p>The next step is the Get SSO Token, Double click this object so that its attributes are displayed within the Inspector pane.</p>

<table>
	<tbody>
		<tr>
			<th>Input</th>
			<th>Sensitive</th>
			<th>Required</th>
			<th>Type</th>
			<th>Assign From</th>
			<th>Otherwise</th>
			<th>Assign To</th>
		</tr>
		<tr>
			<td>sawUrl</td>
			<td></td>
			<td>Yes</td>
			<td>Single value</td>
			<td>SMAXLoginUrl</td>
			<td></td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>Username</td>
			<td></td>
			<td>Yes</td>
			<td>Single value</td>
			<td>Username</td>
			<td>System Account</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>Password</td>
			<td>Yes</td>
			<td>Yes</td>
			<td>Single value</td>
			<td>password</td>
			<td>System Account</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyHost</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>Use constant:</td>
			<td></td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyPort</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: 8080</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyUsername</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyPassword</td>
			<td>Yes</td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>trustAllRoots</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: false</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>X509HostnameVerifier</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: allow_all</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>trustKeystore</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>trustPassword</td>
			<td>Yes</td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>connectTimeout</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>socketTimeout</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>useCookies</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: true</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>keepAlive</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: true</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>connectionsMaxPerRoute</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: 2</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>connectionsMaxTotal</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: 20</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>headers</td>
			<td>Yes</td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>contentType</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>requestCharacterSet</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: ISO-8859-1</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>responseCharacterSet</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
	</tbody>
</table>

<p>Just like with the DB System Account, create a System Account for SMAX. This is for the OPB user account to login to SMAX and create an incident.</p>

<p>Click on Result Tab and Click add and enter the data as below:</p>

<table>
	<tbody>
		<tr>
			<th>Name</th>
			<th>Sensitive Data</th>
			<th>From</th>
			<th>Assign To</th>
			<th>Assignment Action</th>
			<th>Filters</th>
		</tr>
		<tr>
			<td>ssoToken</td>
			<td></td>
			<td>ResultField: ssoToken</td>
			<td>Flow Variable</td>
			<td>OVERWRITE</td>
			<td>No Filters</td>
		</tr>
	</tbody>
</table>

<p>Now double click on the Create Incident object</p>

<table>
	<tbody>
		<tr>
			<th>Input</th>
			<th>Sensitive</th>
			<th>Required</th>
			<th>Type</th>
			<th>Assign From</th>
			<th>Otherwise</th>
			<th>Assign To</th>
		</tr>
		<tr>
			<td>sawUrl</td>
			<td></td>
			<td>Yes</td>
			<td>Single value</td>
			<td>SMAXLoginUrl</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>tenantId</td>
			<td></td>
			<td>Yes</td>
			<td>Single value</td>
			<td>smaxTenantID</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>modelID</td>
			<td></td>
			<td>Yes</td>
			<td>Single value</td>
			<td>smaxIncidentID</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>ssoToken</td>
			<td></td>
			<td>Yes</td>
			<td>Single value</td>
			<td>ssoToken</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>Properties</td>
			<td></td>
			<td>Yes</td>
			<td>Single value</td>
			<td>properties</td>
			<td>Use constant:
			<p>{"ImpactScope": "SingleUser", "Active": true, "RequestedByPerson": "10015",</p>

			<p>"PhaseId": "Log",ProcessId": "normal","FirstTouch": true,"Urgency": "SlightDisruption",</p>

			<pre>       "RegisteredForActualService": "11852", "ServiceDeskGroup": "11738", "CompletionCode": null,
       "DisplayLabel": "Failed Password Reset", "Priority": "LowPriority",                               "IncidentAttachments": "{\"complexTypeProperties\":[]}", 
</pre>

			<pre>       "Description": "Failed to reset users DB Password"}
</pre>
			</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyHost</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>Use constant:</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyPort</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: 8080</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyUsername</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>proxyPassword</td>
			<td>Yes</td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>trustAllRoots</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: false</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>X509HostnameVerifier</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: allow_all</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>trustKeystore</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>trustPassword</td>
			<td>Yes</td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>connectTimeout</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>socketTimeout</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>useCookies</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: true</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>keepAlive</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: true</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>connectionsMaxPerRoute</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: 2</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>connectionsMaxTotal</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: 20</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>headers</td>
			<td>Yes</td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>contentType</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>requestCharacterSet</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant: ISO-8859-1</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>responseCharacterSet</td>
			<td></td>
			<td></td>
			<td>Single value</td>
			<td>&lt;not assigned&gt;</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
	</tbody>
</table>

<p><i>The most important row is the properties row in order to create the incident. There are key bits of information required from SMAX in order to do this. Most notably what is the user ID that is creating the incident, what service is affected by this incident and where should this incident be assigned to. All of these values need the IDs providing, so you’ll need to check within your own SMAX environment in order to provide these details.</i></p>

<p>For the Results tab enter the details below:</p>

<table>
	<tbody>
		<tr>
			<th>Name</th>
			<th>Sensitive Data</th>
			<th>From</th>
			<th>Assign To</th>
			<th>Assignment Action</th>
			<th>Filters</th>
		</tr>
		<tr>
			<td>IncidentID</td>
			<td></td>
			<td>ResultField: entityId</td>
			<td>Flow Variable</td>
			<td>OVERWRITE</td>
			<td>No Filters</td>
		</tr>
	</tbody>
</table>

<p>In order for the outputs from OO to be sent to SMAX the Resolved Success object needs updating so that it can handle a couple of the inputs and provide output to SMAX.</p>

<p>For this two input fields need configuring and two output fields like so:</p>

<table>
	<tbody>
		<tr>
			<th>Name</th>
			<th>Sensitive Data</th>
			<th>Required</th>
			<th>From</th>
			<th>Otherwise</th>
			<th>Assigned To</th>
		</tr>
		<tr>
			<td>entityID</td>
			<td></td>
			<td></td>
			<td>IncidentID</td>
			<td>Use constant:</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
		<tr>
			<td>completedOK</td>
			<td></td>
			<td></td>
			<td>completionResult</td>
			<td>Use constant</td>
			<td>&lt;not assigned&gt;</td>
		</tr>
	</tbody>
</table>

<table>
	<tbody>
		<tr>
			<th>Name</th>
			<th>Sensitive Data</th>
			<th>From</th>
			<th>Assign To</th>
			<th>Assignment Action</th>
			<th>Filters</th>
		</tr>
		<tr>
			<td>completedResult</td>
			<td></td>
			<td>Input: completedOK</td>
			<td>Flow Output Field</td>
			<td>OVERWRITE</td>
			<td>No Filters</td>
		</tr>
		<tr>
			<td>Incident</td>
			<td></td>
			<td>Input: entityID</td>
			<td>Flow Output Field</td>
			<td>OVERWRITE</td>
			<td>No Filters</td>
		</tr>
	</tbody>
</table>

<p>Save the flow as it’s now complete.</p>

<h3 id="Create_Content_Pack">Create Content Pack</h3>

<p>From the Projects Pane right click on the DB Flow folder and select Create Content Pack</p>

<p><img alt="cg integration oo 27.png" data-file-height="675" data-file-width="866" height="675" src="/mediawiki/images/d/de/cg_integration_oo_27.png" width="866"></p>

<p>Select the location where you want the content pack to be saved and check the version number is what you want to use and Click Next</p>

<p>Check all the Dependencies are correct as these will need to have been loaded into OO central before this flow can be loaded.</p>

<p><img alt="cg integration oo 28png.png" data-file-height="675" data-file-width="864" height="675" src="/mediawiki/images/d/d3/cg_integration_oo_28png.png" width="864"></p>

<p>Click Create CP</p>

<p><img alt="cg integration oo 29.png" data-file-height="679" data-file-width="868" height="679" src="/mediawiki/images/2/29/cg_integration_oo_29.png" width="868"></p>

<p>Now the Content Pack has been successfully created.</p>

<p>Next is to import the Content Pack into OO central.</p>

<h3 id="Login_to_OO_Central">Login to OO Central</h3>

<p>From the main screen click on Content Management and then Click on Content Packs</p>

<p><img alt="cg integration oo 30.png" data-file-height="527" data-file-width="972" height="527" src="/mediawiki/images/0/07/cg_integration_oo_30.png" width="972"></p>

<p><br>
Click on the plus icon to import your new content pack</p>

<p>The Deploy new Content window will appear. Click on the plus icon to navigate to where you saved your content pack.</p>

<p><img alt="cg integration oo 31.png" data-file-height="662" data-file-width="974" height="662" src="/mediawiki/images/b/b8/cg_integration_oo_31.png" width="974"></p>

<p>Select the appropriate CP and Click Open</p>

<p><img alt="cg integration oo 32.png" data-file-height="554" data-file-width="689" height="554" src="/mediawiki/images/9/98/cg_integration_oo_32.png" width="689"></p>

<p>The CP will be checked to make sure it can be imported. Content and any dependencies will be checked at this stage. If there are any errors they would need correcting before the CP can be deployed. If everything is fine. Click on Deploy.</p>

<p><img alt="cg integration oo 33.png" data-file-height="556" data-file-width="700" height="556" src="/mediawiki/images/1/1d/cg_integration_oo_33.png" width="700"></p>

<p><br>
The CP has now successfully been deployed into OO Central.</p>

<p>If you check the Content Packs page in OO Central you will see the version of the CP and also the time it was uploaded.</p>

<p><img alt="cg integration oo 34.png" data-file-height="437" data-file-width="899" height="437" src="/mediawiki/images/3/36/cg_integration_oo_34.png" width="899"></p>

<p>The final aspect to setup in order for the flow to work is the Configuration Items</p>

<p><img alt="cg integration oo 35.png" data-file-height="477" data-file-width="895" height="477" src="/mediawiki/images/7/7e/cg_integration_oo_35.png" width="895"></p>

<p><br>
The key fields that need updating are below:</p>

<table>
	<tbody>
		<tr>
			<th>Name</th>
			<th>Deployed Value</th>
			<th>Central Value</th>
		</tr>
		<tr>
			<td>DB Account</td>
			<td>postgres</td>
			<td>postgres</td>
		</tr>
		<tr>
			<td>SMAX Account</td>
			<td>cmdbopb</td>
			<td>cmdbopb</td>
		</tr>
	</tbody>
</table>

<p>Now all the OO work is complete.</p>

<h3 id="Create_SMAX_Offering">Create SMAX Offering</h3>

<h4 id="Prerequisite_work">Prerequisite work</h4>

<p>In order for the OO Flow to create an incident the Integration account needs to be given appropriate rights in order to be allowed to create an incident.</p>

<p>From the Agent view click on the Main Menu and go to Administration then People.</p>

<p><img alt="cg integration oo 36.png" data-file-height="456" data-file-width="897" height="456" src="/mediawiki/images/b/bf/cg_integration_oo_36.png" width="897"></p>

<p>Select the Integration user that is required for the OPB to use and then under the System use definitions assign the appropriate rights to allow Incident creation. In this example Tenant Admin role has been assigned but if you need to limit the permissions assigned IT User could be used.</p>

<p><img alt="cg integration oo 37.png" data-file-height="93" data-file-width="870" height="93" src="/mediawiki/images/c/cb/cg_integration_oo_37.png" width="870"></p>

<h4 id="Now_create_the_Offering">Now create the Offering</h4>

<p>From the Agent view within SMAX go to Service Catalogue. In here either use an existing Category or create a new one. For this scenario we’ll use the Business Application category with a Business Application of eExpense which has already be defined. It is here that an Offering of Password Reset will be created.</p>

<p>Within Offerings Click New. Then enter in the relevant details about the Offering like shown below.</p>

<p><img alt="cg integration oo 38.png" data-file-height="506" data-file-width="972" height="506" src="/mediawiki/images/d/d2/cg_integration_oo_38.png" width="972"></p>

<p><br>
Next is to define the User Options. These are really important as this is what will be passed from SMAX to OO for the flow to use in order to reset the password. Information passed back from OO will be stored here also.</p>

<p><img alt="cg integration oo 39.png" data-file-height="287" data-file-width="972" height="287" src="/mediawiki/images/4/4b/cg_integration_oo_39.png" width="972"></p>

<p><br>
The following table breaks down exactly what fields need creating with the appropriate values.</p>

<table>
	<tbody>
		<tr>
			<th>Name</th>
			<th>Display name</th>
			<th>Field type</th>
			<th>Field size</th>
			<th>Required</th>
			<th>Visibility</th>
		</tr>
		<tr>
			<td>DBServerName_c</td>
			<td>DB Server Name</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td>Yes</td>
			<td>User</td>
		</tr>
		<tr>
			<td>DBType_c</td>
			<td>DB Type</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td>Yes</td>
			<td>User</td>
		</tr>
		<tr>
			<td>DBPort_c</td>
			<td>DB Port</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td>Yes</td>
			<td>User</td>
		</tr>
		<tr>
			<td>Database_c</td>
			<td>Database</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td>Yes</td>
			<td>User</td>
		</tr>
		<tr>
			<td>NewPassword_c</td>
			<td>New Password</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td>Yes</td>
			<td>User</td>
		</tr>
		<tr>
			<td>NewPasswordConfirmed_c</td>
			<td>Re-enter New Password</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td>Yes</td>
			<td>User</td>
		</tr>
		<tr>
			<td>SMAXLoginUrl_c</td>
			<td>SMAX Login Url</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td></td>
			<td>Agent</td>
		</tr>
		<tr>
			<td>SmaxUrl_c</td>
			<td>Smax Url</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td></td>
			<td>Agent</td>
		</tr>
		<tr>
			<td>SmaxIncidentModelID_c</td>
			<td>Smax Incident Model ID</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td></td>
			<td>Agent</td>
		</tr>
		<tr>
			<td>SmaxTenantID_c</td>
			<td>Smax Tenant ID</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td></td>
			<td>Agent</td>
		</tr>
		<tr>
			<td>OOcompletionResult_c</td>
			<td>OO completion Result</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td></td>
			<td>Agent</td>
		</tr>
		<tr>
			<td>SmaxIncidentID_c</td>
			<td>Smax Incident ID</td>
			<td>String</td>
			<td>MEDIUM</td>
			<td></td>
			<td>Agent</td>
		</tr>
	</tbody>
</table>

<p>Next is to create the Task Plan. It’s this that allows SMAX to take the values from the above user options and send them across to the OO Workflow in order to Reset the Password.</p>

<p>Within Task Plan go to the First line Support and click on the Pencil icon at the bottom of Start.</p>

<p>Select Automated Task from the menu of options. A new screen will appear. Give the Task a name</p>

<p><img alt="cg integration oo 40.png" data-file-height="874" data-file-width="827" height="874" src="/mediawiki/images/b/b1/cg_integration_oo_40.png" width="827"></p>

<p>Under Business Rule click on + Set rule. A new window will appear for what type of rule you’ll want to set. Scroll down to the Integration Actions and Select Execute Operations Orchestration (OO) flow. Then Click on OK.</p>

<p><img alt="cg integration oo 41.png" data-file-height="891" data-file-width="831" height="891" src="/mediawiki/images/5/59/cg_integration_oo_41.png" width="831"></p>

<p>Now the Task will give you a number of selections to make in order to configure the Business rule.</p>

<p><img alt="cg integration oo 42.png" data-file-height="135" data-file-width="804" height="135" src="/mediawiki/images/b/b6/cg_integration_oo_42.png" width="804"></p>

<p>Enter in the details as requested for your environment. First you’ll be asked for the OO Endpoint. Then the flow name that you want to run. Here a new screen will appear allowing you to search OO for the relevant flow. In the search box type PG and Click on search.</p>

<p><img alt="cg integration oo 43.png" data-file-height="464" data-file-width="972" height="464" src="/mediawiki/images/6/60/cg_integration_oo_43.png" width="972"></p>

<p><br>
The PG Password Reset flow that was created earlier within OO should be returned. On the right hand side the mandatory fields are shown which should match up to the User Options that were created earlier. Click OK to add this flow.</p>

<p>The next part that must be entered are the flow parameters. This is how SMAX knows what fields to map across to OO.</p>

<p><img alt="cg integration oo 44.png" data-file-height="358" data-file-width="541" height="358" src="/mediawiki/images/3/3a/cg_integration_oo_44.png" width="541"></p>

<p>Rather than just type in the relevant values of what should be supplied, functions need to be used as some data needs supplying by the end user. There is other information which will not be supplied by the end user but will be set by the agent as a default value. So make sure you click on the fx button, it is then highlighted blue and then entity the function.</p>

<p>The Table below shows the values entered above for each field</p>

<table>
	<tbody>
		<tr>
			<th>Field Name</th>
			<th>Value</th>
		</tr>
		<tr>
			<td>DBServerName</td>
			<td>${entity.UserOptions.DBServerName_c}</td>
		</tr>
		<tr>
			<td>DBType</td>
			<td>${entity.UserOptions.DBType_c}</td>
		</tr>
		<tr>
			<td>DBPort</td>
			<td>${entity.UserOptions.DBPort_c}</td>
		</tr>
		<tr>
			<td>Database</td>
			<td>${entity.UserOptions.Database_c}</td>
		</tr>
		<tr>
			<td>userPassword</td>
			<td>${entity.UserOptions.NewPassword_c}</td>
		</tr>
		<tr>
			<td>SMAXLoginURL</td>
			<td>${entity.UserOptions.SMAXLoginUrl_c}</td>
		</tr>
		<tr>
			<td>smaxIncidentModelID</td>
			<td>${entity.UserOptions.SmaxIncidentModelID_c}</td>
		</tr>
		<tr>
			<td>smaxTenantID</td>
			<td>${entity.UserOptions.SmaxTenantID_c}</td>
		</tr>
	</tbody>
</table>

<p>Once all values have been entered Click OK.</p>

<p>Next enter the Output fields using Add user Option</p>

<table>
	<tbody>
		<tr>
			<th>Field Name</th>
			<th>Value</th>
		</tr>
		<tr>
			<td>SmaxIncidentID_c</td>
			<td>Incident</td>
		</tr>
		<tr>
			<td>OOcompletionResult_c</td>
			<td>completionResult</td>
		</tr>
	</tbody>
</table>

<p>Then Click OK to finish setting up the Automated Task.</p>

<p>It should look something similar to this:</p>

<p><img alt="cg integration oo 45.png" data-file-height="881" data-file-width="824" height="881" src="/mediawiki/images/6/6d/cg_integration_oo_45.png" width="824"></p>

<p><br>
<i>Now that the Service Request has been created if a user enters values into the request but is unable to get their password reset the OO flow will try to create an Incident. In order to do this an Incident Model needs to be created within SMAX. Once this Model has been created the ModelID will then be set as a Default Value in the newly created Offering that was just created. So before we can continue to enter the Default Values for the Service Request we must first create the Incident Model.</i></p>

<p><i><b>Please note in order for the OO output to be entered into SMAX fields a rule needs to be added to allow both User Options SmaxIncidentID_c and OOcompletionResult_c. This needs to be set within the Rendering Forms for Request in the Rules.</b></i></p>

<p><img alt="cg integration oo 46.png" data-file-height="245" data-file-width="974" height="245" src="/mediawiki/images/5/56/cg_integration_oo_46.png" width="974"></p>

<p>When the user is entering their new password a check needs to be done that the password entered into the two password fields are the same value. This check needs to be done before the values entered can be passed to the OO Flow. This requires creating a Before Change Rule like shown below:</p>

<p><img alt="cg integration oo 47.png" data-file-height="116" data-file-width="974" height="116" src="/mediawiki/images/8/81/cg_integration_oo_47.png" width="974"></p>

<p></p>

<table>
	<tbody>
		<tr>
			<th>Set Rule type</th>
			<th>Validate expression</th>
		</tr>
		<tr>
			<td>If expression</td>
			<td>${entity.UserOptions.NewPassword_c&nbsp;!= entity.UserOptions.NewPasswordConfirmed_c}</td>
		</tr>
		<tr>
			<td>Validate</td>
			<td>${substring(entity.UserOptions.NewPassword_c, 0) == (entity.UserOptions.NewPasswordConfirmed_c)}</td>
		</tr>
		<tr>
			<td>Display</td>
			<td>The password entered does not match. Please re-enter your password!!</td>
		</tr>
	</tbody>
</table>

<h3 id="Incident_Model">Incident Model</h3>

<p>In Agent view click on the Main Menu and go to Incident. Then Click on Models.</p>

<p>Click on New, then enter in the relevant information that will help support deal with the Incident.</p>

<p><img alt="cg integration oo 48.png" data-file-height="195" data-file-width="972" height="195" src="/mediawiki/images/6/6c/cg_integration_oo_48.png" width="972"></p>

<p>Click on Default Values and supply the relevant details for the Incident.</p>

<p><img alt="cg integration oo 49.png" data-file-height="531" data-file-width="974" height="531" src="/mediawiki/images/e/e3/cg_integration_oo_49.png" width="974"></p>

<p>Click Save to create this Incident Model.</p>

<p>Next Click on Active in order to activate the model so OO will now it can use this Incident Model. Then Click Save.</p>

<p>The incident model is now all setup and you can return to the Offering you were configuring earlier. Just before leaving the Incident Model, make a note of the ID number of the model like 11847. This will be required for the default value in the Offering.</p>

<h3 id="Service_Request">Service Request</h3>

<p>Open the Password Reset offering, then Click on Default Values</p>

<p><img alt="cg integration oo 50.png" data-file-height="466" data-file-width="858" height="466" src="/mediawiki/images/7/7e/cg_integration_oo_50.png" width="858"></p>

<table>
	<tbody>
		<tr>
			<th>User Option</th>
			<th>Value</th>
		</tr>
		<tr>
			<td>DB Server Name</td>
			<td>&lt;DB Server Name&gt;</td>
		</tr>
		<tr>
			<td>DB Type</td>
			<td>&lt;DB Type&gt; e.g. PostgreSQL</td>
		</tr>
		<tr>
			<td>DB Port</td>
			<td>&lt;DB Port&gt; e.g. 5432</td>
		</tr>
		<tr>
			<td>Database</td>
			<td>&lt;database&gt; e.g. postgres</td>
		</tr>
		<tr>
			<td>SMAX Login Url</td>
			<td>&lt;SMAX LOGIN URL&gt; e.g <a href="https://FQDN_servername/auth/authentication-endpoint/authenticate/login" rel="nofollow" target="1">https://FQDN_servername/auth/authentication-endpoint/authenticate/login</a></td>
		</tr>
		<tr>
			<td>Smax Url</td>
			<td>&lt;SMAX URL&gt; e.g. <a href="https://FQDN_servername" rel="nofollow" target="1">https://FQDN_servername</a></td>
		</tr>
		<tr>
			<td>Smax Incident Model ID</td>
			<td>&lt;incident_Model_ID&gt; e.g. 11847</td>
		</tr>
		<tr>
			<td>Smax Tenenat ID</td>
			<td>&lt;SMAX Tenant ID&gt; e.g. 829249256</td>
		</tr>
	</tbody>
</table>

<p>Enter the appropriate values for you own environment. Please pay particular attention to SMAX user options as they need to match your own system.</p>

<p>Once all entered Click on Save.</p>

<h3 id="Additional_Tasks_if_Required">Additional Tasks if Required</h3>

<p>Now that the Password reset can be run automatically and either a successful result reported or an incident created it’s possible to use these outcomes to move the request along or link it to the incident that was generated. The following steps will show how this can be done.</p>

<p>Within the Password Reset offering, go to Rules</p>

<p>Then in the After Change rule create a new “If…Then” rules as shown below:</p>

<table>
	<tbody>
		<tr>
			<td>Set Rule type</td>
			<td>Set Multiple fields</td>
		</tr>
		<tr>
			<td>If expression</td>
			<td>${entity.UserOptions.OOcompletionResult_c == 'Command completed successfully'}</td>
		</tr>
		<tr>
			<td>CompletionCode</td>
			<td>Fulfilled offline</td>
		</tr>
		<tr>
			<td>Solution</td>
			<td>Automated password reset completed</td>
		</tr>
	</tbody>
</table>

<table>
	<tbody>
		<tr>
			<td>Set Rule type</td>
			<td>Create relationship</td>
		</tr>
		<tr>
			<td>If expression</td>
			<td>${entity.SmaxIncidentID_c&nbsp;!= null}</td>
		</tr>
		<tr>
			<td>Relationship type</td>
			<td>Incident caused by request</td>
		</tr>
		<tr>
			<td>From record</td>
			<td>${entity.SmaxIncidentID_c}</td>
		</tr>
		<tr>
			<td>To record</td>
			<td>${entity.Id}</td>
		</tr>
	</tbody>
</table>

<p>Another rule that could be added is to inform the Requester by email that their password has now been reset. To do this you could create a new Notification template or use an existing one.</p>

<p>To create one go to Studio and then select Request</p>

<p>Under Notification templates click Add</p>

<p>In the blank form give the Notification a name and display name along with a subject line for the email.</p>

<p><img alt="cg integration oo 51.png" data-file-height="456" data-file-width="979" height="456" src="/mediawiki/images/4/43/cg_integration_oo_51.png" width="979"></p>

<p><br>
Here is a table showing what can be entered as a Notification for the eExpense Application:</p>

<table>
	<tbody>
		<tr>
			<td>Name</td>
			<td>PasswordResetNotification</td>
		</tr>
		<tr>
			<td>Display Name</td>
			<td>Notification of eExpense Temporary Password</td>
		</tr>
		<tr>
			<td>Enabled</td>
			<td>Yes</td>
		</tr>
		<tr>
			<td>Subject</td>
			<td>IMPORTANT - Temporary eExpense information for ${:entity.id}</td>
		</tr>
		<tr>
			<td>Email Body</td>
			<td>Hi ${:current_recipient.FirstName},
			<p>Your eExpense User Password for your Request ${:entity.Id} has now been updated based upon what you entered. You should now be able to access the eExpense Application</p>

			<p>Thanks,</p>

			<p>eExpense Application Management Team</p>
			</td>
		</tr>
	</tbody>
</table>

<p>Click Save to add this new Notification Template.</p>

<p>Go back to the Offering for Password Reset and then go to Rules. Now add a new After Change Rule so you can send a Notification to user that their Password has been reset.</p>

<table>
	<tbody>
		<tr>
			<td>Set Rule type</td>
			<td>Send Notification</td>
		</tr>
		<tr>
			<td>If expression</td>
			<td>${entity.UserOptions.OOcompletionResult_c == 'Command completed successfully'}</td>
		</tr>
		<tr>
			<td>Send notification</td>
			<td>${entity.RequestedByPerson.Email}</td>
		</tr>
		<tr>
			<td>Using</td>
			<td>Notification of eExpense Temporary Password</td>
		</tr>
		<tr>
			<td>Parameters</td>
			<td>None</td>
		</tr>
	</tbody>
</table>

<h3 id="Run_through_the_Password_Reset_Scenario">Run through the Password Reset Scenario</h3>

<p>A user of the eExpenseDB can no longer access the database and needs to get their password reset.</p>

<p>Login to SMAX with the user who would like to reset their password for the eExpenseDB system.</p>

<p><img alt="cg integration oo 52.png" data-file-height="479" data-file-width="972" height="479" src="/mediawiki/images/4/4a/cg_integration_oo_52.png" width="972"></p>

<p>From the main portal page Click on Business Applications</p>

<p><img alt="cg integration oo 53.png" data-file-height="424" data-file-width="974" height="424" src="/mediawiki/images/c/cd/cg_integration_oo_53.png" width="974"></p>

<p>Click on Request Support for the Password reset offering for eExpense.</p>

<p>Fill in the form describing the problem and then Click on Submit. The key values have already been populated based upon what was entered for the Default Values within the Offering.</p>

<p><img alt="cg integration oo 54.png" data-file-height="775" data-file-width="647" height="775" src="/mediawiki/images/c/cc/cg_integration_oo_54.png" width="647"></p>

<p><br>
If the Password fields don’t match you’ll see the below notification until you correct the password fields:</p>

<p><img alt="cg integration oo 55.png" data-file-height="350" data-file-width="802" height="350" src="/mediawiki/images/8/8a/cg_integration_oo_55.png" width="802"></p>

<p><br>
This will also stop the user from being able to submit their new password till the two password boxes match each other.</p>

<p>After submitting the request you should see the following screen to say a request has successfully been created.</p>

<p><img alt="cg integration oo 56.png" data-file-height="212" data-file-width="927" height="212" src="/mediawiki/images/3/3d/cg_integration_oo_56.png" width="927"></p>

<p>Once the request has been completed you should receive a Notification by email that request has been completed. Now the user can access the eExpense Application with their new Password.</p>

<p><img alt="cg integration oo 57.png" data-file-height="547" data-file-width="974" height="547" src="/mediawiki/images/8/88/cg_integration_oo_57.png" width="974"></p>

<p>Now using the Agent view you can check how this request is getting on:</p>

<p><img alt="cg integration oo 58.png" data-file-height="414" data-file-width="972" height="414" src="/mediawiki/images/8/89/cg_integration_oo_58.png" width="972"></p>

<p>Click on Service Request</p>

<p><img alt="cg integration oo 59.png" data-file-height="283" data-file-width="972" height="283" src="/mediawiki/images/d/d1/cg_integration_oo_59.png" width="972"></p>

<p>From here you should see the new request that has just been generated.</p>

<p>Click on the request ID number to see the details of the request</p>

<p>If the additional steps have been carried out when configuring the Password Reset Offering then you will also notice the Request has been resolved and is waiting on the user to accept the solution provided.</p>

<p><img alt="cg integration oo 60.png" data-file-height="145" data-file-width="972" height="145" src="/mediawiki/images/3/36/cg_integration_oo_60.png" width="972"></p>

<p>The User can now Accept or Reject the solution that has been provided within the Service Portal.</p>

<h3 id="Run_through_the_same_scenario_–_This_time_to_show_Incident_Creation">Run through the same scenario – This time to show Incident Creation</h3>

<p>Go to the same Password Reset offering within the Service Portal. This time change the default value for the DBPort from 5432 to say 3452 for example. All other values can be left the same or can be altered but it’s just to prove that the connection can’t be made using the settings provided and hence the Password Reset Task should fail.</p>

<p><img alt="cg integration oo 61.png" data-file-height="758" data-file-width="972" height="758" src="/mediawiki/images/4/4a/cg_integration_oo_61.png" width="972"></p>

<p>Change the DB Port value and click on Submit.</p>

<p>Like before a new Request will be created</p>

<p><img alt="cg integration oo 62.png" data-file-height="216" data-file-width="920" height="216" src="/mediawiki/images/7/7b/cg_integration_oo_62.png" width="920"></p>

<p>Go to the agent view the see the newly created Request.</p>

<p>Here are the details of the new request:</p>

<p><img alt="cg integration oo 64.png" data-file-height="508" data-file-width="972" height="508" src="/mediawiki/images/7/7c/cg_integration_oo_64.png" width="972"></p>

<p><br>
If you Click on Task Plan you’ll see the Automated Task completed successfully</p>

<p><img alt="cg integration oo 65.png" data-file-height="499" data-file-width="691" height="499" src="/mediawiki/images/7/7b/cg_integration_oo_65.png" width="691"></p>

<p><br>
If you go to Incident Management you’ll see a new incident has been created</p>

<p><img alt="cg integration oo 66.png" data-file-height="466" data-file-width="972" height="466" src="/mediawiki/images/8/82/cg_integration_oo_66.png" width="972"></p>

<p>This successfully shows the OO flow created an incident due to fact the details entered into the Service Request weren’t correct so it was unable to connect to the DB. So an incident has been raised by the cmdbopb user.</p>

<p>Again if the additional steps were undertaken what you’ll see is that the Incident is now linked to the request.</p>

<p><img alt="cg integration oo 67.png" data-file-height="239" data-file-width="974" height="239" src="/mediawiki/images/1/16/cg_integration_oo_67.png" width="974"></p>

<p><br>
The SmaxIncidentID contains the created incident number and the OO Completion Result also gives some error information.</p>

<p>If you Click on Related Records you’ll see the Incident that is linked to the Request</p>

<p><img alt="cg integration oo 68.png" data-file-height="133" data-file-width="974" height="133" src="/mediawiki/images/3/32/cg_integration_oo_68.png" width="974"></p>

<h3 id="Troubleshooting">Troubleshooting</h3>

<p>When troubleshooting the Integration between Service Management Automation X and OO there are a number of places to look.</p>

<p>The first place is within Service Management Automation X portal specifically looking at the Integration to check that no errors are being reported either with the Agent or on the actual OO Endpoint. If there are errors being shown here it’s possible there is a problem with the OPB. In which case log on to the OPB Server and check the following log locations:</p>

<p>&lt;OPB Install location&gt;\On-Premise Bridge Agent\product\log\OperationOrchestrationDomain-1.0</p>

<p>In here check the following logs which should help to show if there is a communication problem from the OPB to OO:</p>

<ul>
	<li>OperationOrchestrationDomain-1.0.log.0</li>
	<li>error.log</li>
	<li>output.log</li>
</ul>

<p>If the integration was successful but there are problems when trying to run an OO flow through SMAX the following log files which are stored in /var/vols/itom/itsma/global-volume/logs/xservices/platform/ look for the latest platform pod and then go to the maas folder. Inside you should look for the following logs:</p>

<ul>
	<li>Maas_error.log</li>
	<li>Maas_workflow.log</li>
	<li>Maas_oo_integration.log</li>
	<li>Maas_unhandled_exceptions.log</li>
</ul>

<p>Sometimes when using OO there may be a problem showing output from an OO flow within a User Option created in SMAX. If this problems occurs follow this procedure:</p>

<p>The rule of Property AITOOResultMessage is disabled is created by below request rule</p>

<p>"Disable all fields on the request tracking page in the Self-Service portal"</p>

<p>Follow below steps to add allow rule.</p>

<ol>
	<li>Click Rendering form and click “Add a rule to run before request record rules”</li>
	<li>Choose Restrict/allow editing of fields in pop window and click ok button.</li>
	<li>Choose “Allow” in field “Restrict/allow”</li>
	<li>Click “all fields/ specific fields(optional)” and click Specific fields</li>
	<li>Click Add item and choose &lt;Field Name&gt;</li>
	<li>Select &lt;Field Name&gt; from dropdown and click ok and save button</li>
</ol>

<p>If the integration still doesn’t work contact the Micro Focus Service Management Automation X Support team and create a ticket. Be sure that all of the OPB logs and configuration files are included.</p>
</html>