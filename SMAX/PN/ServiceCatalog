<html><div>
<div>
<div class="Admonition_Tip"><span class="autonumber">The Service Catalog</span>
<div>
<div>
<p><br>
To consume the services IT provides, the end users need to have a way of discovering the services available and what actions or requests they can perform against them. The service catalog provides the means of creating those available choices for both the Service Management Automation Service Portal (accessed by the end users) and request management (accessed by the agents).</p>

<p>Creating a complete service catalog can be one of the more time-consuming parts of creating the complete Service Management Automation X implementation, but also can create the most value. A well-crafted service catalog will reduce the manual effort needed by the Service Desk Agents by allowing the End Users to create a well-formed request that we can automatically route to the correct groups—or even fulfill by an automated process that never needs an agent’s intervention.</p>

<div>
<div><img alt="4-ServiceCatalog.gif" src="/mediawiki/images/e/ec/4-ServiceCatalog.gif" style="height:441px; width:303px"></div>
</div>

<p><br>
By the end of this section Glenn will:</p>

<ul>
	<li>Understand what makes up the service catalog and how they are displayed to the end user in the Service Management Automation Service Portal</li>
	<li>Learn where the system defines the specific offerings that the end users can ask for via a service request</li>
	<li>See how task plans guide a service request through the correct process</li>
	<li>Find out how reusable fulfillment plans can be created to reduce duplicate work in creating similar task plans</li>
	<li>Limit who can see specific parts of the service catalog using entitlement rules</li>
	<li>Tailor the Service Management Automation Service Portal look and feel, as well as available options, to better fit the company’s style</li>
</ul>

<div></div>
</div>
</div>
</div>

<p></p>

<div>
<div></div>
</div>

<h2>The Catalog Structure</h2>

<p>Now we have our services created, and the next step is to set up our service catalog. The service catalog will allow both agents and end users to find and request what they are looking for.</p>

<p>The service catalog itself has three levels we need to consider:</p>

<ul>
	<li>Service category</li>
	<li>Service definition</li>
	<li>Offering</li>
</ul>

<p><img alt="4.1-Categories.png-v2.jpg" src="/mediawiki/images/1/12/4.1-Categories.png-v2.jpg"></p>

<h2>Service Category</h2>

<p>The service category is a high-level definition that groups similar services. For example, since we have services for Lync, online conference rooms, and internal discussion forums, we might create a service category for 'Meeting and Collaboration' and put all of those services inside of it.</p>

<p>The primary use of service categories is to help the end user find what they are looking for, so we should create our definitions with that in mind. As you see here, the first thing the end user experiences in the Service Management Automation Service Portal is a list of categories they can choose from.</p>

<p><img alt="4.2-Portal.png" src="/mediawiki/images/8/87/4.2-Portal.png" style="height:888px; width:1444px"></p>

<p>The other thing you will notice is that we can make some significant changes to the way SMAX presents our catalog to the end user. We can change both the background and icon of each category and determine the order to display the categories.</p>

<p>Another thing we can do that you can’t see is to limit certain categories to specific groups and/or locations using the entitlement rules I mentioned earlier. We can create an entitlement rule for a specific group, role, and/or location, and then set that rule in a category’s 'Audience' section. Only end users that meet the criteria of the entitlement rule (having the right location for example) will see the category in the Service Management Automation Service Portal.</p>

<p></p>

<h2>Service Definition</h2>

<p>The service definition level is made up of the service definitions that we created earlier. In order for a service to show up in our service catalog, we need to fill in the catalog description and category in the service definition.</p>

<p>Just like our service categories, we can specify the ‘Audience’ of the service definition based on entitlement rules. This can control who can request the service or any of its related offerings.</p>

<p></p>

<h2>Offering</h2>

<p>The final level in the service catalog hierarchy contains service offerings. These offerings are where we define the details of specific products and processes we provide related to our services. The offering definition includes information on how it will appear to the end user in the service catalog and the processes that the system needs to complete to fulfill a request for this offering.</p>

<p>Some examples of offerings we need to define for our Email service might include:</p>

<ul>
	<li>Standard email</li>
	<li>Premium email</li>
	<li>Upgrade email</li>
	<li>Increase mailbox size</li>
	<li>Create email aliases</li>
	<li>Enable mobile email</li>
	<li>Resolve an email issue</li>
</ul>

<p>The system defines the processes (the actual work someone needs to do) as tasks within the offering. The completed task plan may contain both manual and automated tasks. Inside the plan, we can also define any order and/or dependencies for those tasks.</p>

<p><img alt="4.3-Offering.png" src="/mediawiki/images/e/e4/4.3-Offering.png" style="height:910px; width:1447px"></p>

<p>There may be several offerings that use the same plan, with some small changes to the values being passed or the default values. Service Management Automation X allows us to create reusable task plans called fulfillment plans. We can then attach these fulfillment plans to any offering, keeping us from having to create the same plan over and over.</p>

<p>Creating each offering is the most challenging item of work in setting up the service catalog. For each offering, we need to find the answers to several questions:</p>

<ul>
	<li>What does the offering provide to the person requesting it? Is it a physical item, a change to something they already have, or the ability to use a service?</li>
	<li>What steps (or tasks) are necessary to provide the item/service/etc? What order do we perform these tasks in?</li>
	<li>For each of the tasks, who makes sure they get completed?</li>
	<li>Who manages the overall process (to help us define it or change it when necessary)?</li>
</ul>

<p>We also need to be mindful of where we create our offerings. Offerings are not packaged as part of the configuration changes in the development to production process (see Appendix B), so we only want to create examples and do testing in our development tenant. We should create our actual offerings in the production system. Don’t worry, we can mark them as “inactive” until we are ready for them to show up in the portal.</p>

<p>Now you can see why getting the service catalog can be quite a lot of work. But if we do it right, we'll have a system that can track, direct, and automate the work necessary for everything IT provides. By putting in this work up front we will save our end users and agents even more time down the road.</p>

<p>And look, I know that we aren’t ever going to be “done” with the service catalog. Our services will change over time. New offerings will be created for our existing services, and some offerings will become obsolete and need to be removed. Maintaining the service catalog is an ongoing process we will need to oversee as time goes on.</p>

<p>And of course, if you would like more detailed information about the service catalog head to the <a href="./itom/SMAX:2020.02/ServiceCatalogMgmt">online help</a>.</p>

<p></p>

<h3>Localization</h3>

<p>We have end users all over the world, and they don’t all speak the same language. Lucky for us, Service Management Automation X has a built-in process that lets us export all the text in our catalog so we can send it off for localization. Once the localization is complete, we simply import the translated text back into our system, and then each end user will see the service catalog in their own language.</p>

<p></p>

<h3>Shopping Cart</h3>

<p>One other thing we should keep in mind when creating our offerings is the shopping cart system that Service Management Automation X provides for end users. The cart collects and submits requests for multiple goods and services in a single transaction.</p>

<p></p>

<h2>Public, Private and Confidential Requests</h2>

<p>By default, requests are viewable by any agent that has the rights to the request application and the end user that the request was for (the 'requested for person'). However, there are certain requests where we want to control who may view and interact with them. For this purpose, Service Management Automation X allows us to create public, private, and confidential requests.</p>

<h3>Public Requests</h3>

<p>Sometimes a certain request or issue will affect multiple users in the same location. Instead of opening multiple Requests for these events, we would be more efficient if we created one and allowed all affected users to use it instead of opening their own. For just this purpose, Service Management Automation X supports public requests.</p>

<p>Public requests can be shared with, and tracked by, users affected by the same issue. If an end user sees a public request in the portal that interests them, they can “follow” the request. This allows the user to track the request and be notified when someone resolves it.</p>

<p>Inside of each offering is a setting that determines whether it may be opened as a public request. Additionally, there is a setting that specifies if the public request should be shared with users with the same location, organization, or both.</p>

<h3>Private Requests</h3>

<p>Private requests are the default type of request, and may only be viewed in the Service Management Automation Service Portal by the requested by and requested for person in the record. They will not appear for any other end user. Again, we may set this on each offering.</p>

<h3>Confidential Requests</h3>

<p>Certain requests need to be created where the requested for person may not see the request. For example, certain Human Resources requests are confidential. Once again, this may be set for a specific offering.</p>

<p></p>

<h2>Subscriptions</h2>

<p>For many of our service offerings, we want to connect the person making the request with the service or piece of equipment they are requesting. In Service Management Automation X this accomplish this by creating a subscription.</p>

<p>Subscriptions link a person with a service, device, infrastructure component, or peripheral.This allows us to track the entire life-cycle in which the “subscriber” consumes the CI. The subscription also tracks cost information, including both one-time and recurring costs.</p>

<p>We can create these subscriptions manually (either through the SMAX UI or via import), or by using business rules. SMAX includes out of the box business rules that allow us to create subscriptions automatically from requests.</p>

<p>Subscriptions also add functionality to request management. It allows our agents to find the CI or service that someone is calling about, shortening the time they need to spend on every customer interaction. The Service Management Automation Service Portal users will now have a new “My Asset” page, which shows their own subscription information. The portal will also display information to the end user about the devices they subscribe to.</p>

<p></p>

<h2>Tailoring the Service Management Automation Service Portal</h2>

<p>One final step we want to take is to tweak the way we present the Service Management Automation Service Portal to our End Users. While it looks nice right out of the gate, Service Management Automation X makes it easy to change colors, fonts, and even images to fit our unique corporate theme. This will make our end users more comfortable as they immediately recognize the portal as part of our corporate toolset.</p>

<p>I made changes to the portal's appearance in just a few minutes using the “Self Service Portal Settings” option. Take a quick gander at my creative masterpiece…</p>

<p><img alt="4.4-TailoredPortal.png" src="/mediawiki/images/b/b1/4.4-TailoredPortal.png" style="height:793px; width:1291px"></p>

<p>Okay, so I probably need to follow our corporate guidelines and enlist the help of someone with a little more artistic talent than I have, but you get the idea.</p>

<p>Since our service desk also supports some of our external customers, I should point out we can also have different “themes” based on the user’s group, location, or role by again using entitlements. So each of our customers can have a different look and feel for their portal, and different offerings in each.</p>

<p>At this point, we have our end-user facing service catalog pretty much ready to go. Next, we’ll take a look at how our Agents can process these requests quickly and easily.</p>

<p>Of course, details for <a href="./itom/SMAX:2020.02/QuickGuide">customizing the Service Management Automation Service Portal</a> can be found in the online help.</p>
</div>
<!-- 
NewPP limit report
Cached time: 20200216124520
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.028 seconds
Real time usage: 0.128 seconds
Preprocessor visited node count: 56/1000000
Preprocessor generated node count: 72/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
--><!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
--><!-- Saved in parser cache with key docops_wiki:pcache:idhash:875790-0!canonical and timestamp 20200216124519 and revision id 1728123
 --></div>
</html>