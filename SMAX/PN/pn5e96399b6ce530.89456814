<html>{{#redirect:Home}}
<h1>Introduction</h1>

<p>Service Management Automation X (SMAX) is the first application suite for IT and Enterprise Service and Asset Management&nbsp;built on native machine learning,&nbsp;analytics, CMDB, and discovery. The out-of-the-box, extensible, best practices and completely codeless configuration means faster time-to-market for implementations. It can be deployed on-premise, in private or public cloud, or moved from one to the other as business conditions change. Its scalable, multi-tenant, architecture makes it easy to install, configure, and run.</p>

<p>Customers (and their administrators) that have worked with other products may find some areas in SMAX different than they are used to -- especially products that are not ITIL&nbsp;compliant. This document attempts to highlight and explain some of the important concepts and functionality within SMAX that may be new or not intuitive to users not familiar with the product.<br>
<br>
This document, as well as the related documents linked here, will continue to evolve over time. Check back often for new areas of interest, and feel free to suggest possible content using the "feedback" option.</p>

<p><br>
&nbsp;</p>

<h2>High Level Guidance</h2>

<p></p>

<h3>Stay close to home</h3>

<h4>…and out of the box</h4>

<p><br>
In order to get the most out of your SMAX implementation, Micro Focus recommends keeping as close to the provided out-of-the-box processes as possible. These have been created based on the industry standard ITIL process definitions as well as years of experience supporting customers with their IT business.</p>

<p>SMAX contains numerous methods of configuring these processes to fix specific needs but be careful not to use these to change a process into something that it wasn’t meant to support. For example, you don’t want to modify the Request process to handle Incidents. There are specific workflows, rules, and supporting process around each of these that are specific to their needs. Trying to fit a square peg into a round hole by drastically changing these processes to fit other needs will not only make the overall system more complex and unmanageable but may also cause issues when trying to upgrade to new versions, take advantage of new functionality, or implement integrations to other products.</p>

<p>This document will highlight some of the methods available to streamline your SMAX processes to fit your needs without changing the methodology behind the overall system.</p>

<p></p>

<h3>Don’t create the next buggy whip</h3>

<h4>…by trying to reimplement an old system inside of SMAX</h4>

<p><br>
One of the most common causes of issues in a SMAX implementation is the attempt to recreate the functionality of an older or different Service Management application. In most cases, SMAX has a different method of implementing behaviors than whichever older product is being replaced. It is important that the implementor understands the SMAX methods and methodology and does not try to recreate exactly what they had in their previous application.</p>

<p>While it would be impossible to cover every application that SMAX could replace, there is a separate document that reviews several use cases for implementors that are coming from Service Manager. That document will be completed soon and will be linked here when it is available.</p>

<p><br>
&nbsp;</p>

<h2>Processes</h2>

<h3><br>
<br>
Service Request vs. Incident</h3>

<p>Using the Service Request and Incident applications correctly allows an IT organization to better serve their customers while gathering important information about how those customers are using the available IT services. This in turn allows IT to improve existing services as well as identifying the need for additional ones.</p>

<p>For customers moving to SMAX from non-ITIL (or older versions of ITIL) based solutions, the difference between Service Request and Incident may not be readily apparent. However, the ITIL v3 framework makes the distinction clear:</p>

<ul>
	<li><em>The goal of Service Request Management is to ensure that the user can consume the service to their satisfaction.</em></li>
	<li><em>The goal of Incident Management is to restore normal operation of a service as quickly as possible.</em></li>
</ul>

<p></p>

<p>To use the example of a restaurant, Service Request handles everything that the guests (the end users) interact with. The guests can order from the menu of what the restaurant provides (the Service Catalog) or talk to the wait staff (the Service Desk operators) if they need something they can’t find on the menu. Their order is represented by a Service Request in our scenario.</p>

<p>However they order it, whatever the guest asks for makes its way to the kitchen where their order is prepared. In our example, this is where the chefs (the IT operators) provide the guests with their orders. They have a variety of equipment to cook with (servers, databases, etc.), but the guests don’t need to know the details about what they are using. In fact, they might change out the equipment at any time, and the guests wouldn’t even know about it.</p>

<p>When something breaks in the kitchen, the Incident Management process comes into play. If one of the ovens is malfunctioning, an Incident would be opened (because the goal is to restore normal operation of the cooking service).</p>

<p>Up front, one or more of the customers may have been affected by the problems in the back. Perhaps one of their steaks was overdone due to the oven cooking at too high of a temperature. When the customer complains, a Support Request would be opened. This Request would eventually be linked to the Incident related above and would be resolved automatically once the Incident was closed but is handled as a separate process. In this way the customer has the ability to verify their issue is actually solved, as well as allowing the process to have its own SLA targets.</p>

<p>While this example might be a bit of a stretch, hopefully it gets the point across. A more detailed explanation of when to use Request or Incident (and how the two work together) can be found here:&nbsp;&nbsp;<a href="https://docs.microfocus.com/itom/SMAX:2020.02/PN/pn5e963af98910e3.86380753">Request vs. Incident</a></p>

<p><br>
&nbsp;</p>

<h3>Request and Incident Together</h3>

<p>Although Request and Incident are separate processes, SMAX ties them together in numerous ways to allow the IT department to handle both processes at the same time. This lowers the overall effort needed for every Incident, yet still allows tracking from both the provider (Incident) and consumer (Request) sides.</p>

<p>With the check of a box, a SMAX agent can automatically create an Incident from a Request. They also have the ability to link multiple Requests to a single Incident. All of the Requests receive updates based on those made on the Incident, and are automatically resolved when a solution is given to the Incident. Every end user that reported a problem consuming the service has the option to accept or reject the solution as well -- all with a single agent working the Incident.</p>

<p>More information on how Request and Incident work well together can be found in <a href="https://docs.microfocus.com/itom/SMAX:2020.02/PN/IncidentFlows#Request%20and%20Incident%E2%80%A6%20Better%20Together">this chapter</a> of the Getting Started guide.</p>

<p><br>
&nbsp;</p>

<h3>Do not reopen records</h3>

<p>The SMAX flows have been designed to guide a process from beginning to end, but you will notice that there are no transitions to "reopen" a process after it has reached the final phase of the workflow. The final phase of any process should not be reached until it is clear that the process is completed. Some processes, like the Request process, even have a "User Acceptance" phase where the end user can confirm whether or not the issue has been taken care of to their satisfaction. Incidents are "Resolved" and then the solution is affirmed before the process is closed. There should not be any reason to reopen a process as they should not be "closed" until it is verified that the work is done completely.</p>

<p>There are many sub-process related to the original process --&nbsp;such as Service Level Agreements, related records, alerts, notifications, and more -- that would be thrown off by starting the same process over again. Furthermore, reopening a process can camouflage the true nature of an issue. If an intermittent network issue causes loss of service for an application, but an Incident is simply reopened every time the issue appears, several problems are caused:</p>

<ul>
	<li>The multiple outage times cannot be tracked</li>
	<li>The SLA is incorrectly tracked, since the application was not actually down the entire time</li>
	<li>The Problem process may not be triggered (where finding multiple Incidents with the same description on the same service would do so)</li>
</ul>

<p>To minimize the chances of these problems occurring, the best practice in SMAX is to not restart or reopen processes after they have been marked as completed. An agent should always start a new process, linking the two processes as related if necessary.</p>

<p></p>

<ul>
</ul>

<h1><br>
<span style="color: rgb(0, 115, 231); font-size: 24px;">Configuration</span></h1>

<p></p>

<h3>Services and Designing the Service Catalog</h3>

<p>One of the primary differences between SMAX and other solutions is that it was designed around services. The most important step of a successful SMAX implementation is defining the business and infrastructure services that make up your company's IT portfolio.</p>

<p>The ITIL process documentation defines an IT Service as "a service provided to one or more customers by an IT service provider." In the real world, it means that any subject of a call, email, or portal request from an end user that IT supports is part of a IT Service. By clearly defining these services, the IT department can accurately and succinctly define the supported processes around these services. This will result in a much higher (and faster) return on the investment made in implementing SMAX.</p>

<p>By creating the list of supported IT Services, the amount of calls or emails pertaining to issues that the Service Desk has no control over is lowered. This still leaves those requests that might be related to a IT Service that are simply not under the control of IT. In order to inform the end users about what is available through the Service Desk, as well as to better control and categorize incoming requests, SMAX allows the definition of specific Offerings under an IT Service. These Offerings make up what is known as the Service Catalog -- literally a listing of everything the IT Service Desk supports.</p>

<p>Micro Focus designed the Service Catalog around the service definitions (as the name would suggest). Think about the catalog as the menu that end users use to "consume" the defined services. And if the users are ordering from a menu, the IT agents are in the kitchen working to fulfill these requests.</p>

<p>Creating a complete service catalog can be one of the more time-consuming parts of a SMAX implementation. And as the IT department changes and takes on more responsibilities, the number of service definitions and associated offerings will continue to grow. The Service Catalog should be thought of as a living thing, and change should be expected (and even embraced).</p>

<p><br>
Specific guidance and tips for building up your Service Portfolio and the corresponding Service Catalog can be found here:&nbsp;<a href="https://docs.microfocus.com/itom/SMAX:latest/PN/pn5eb9ceddb16683.79487210">Services and the Service Catalog</a></p>

<p><br>
&nbsp;</p>

<h3>Workflows</h3>

<p>Processes within SMAX use a pre-defined workflow or set of workflows to create and track records using that specific process. You can configure these workflows to fit specific requirements not included in the out-of-box definitions, but you can not add new workflows within the processes.</p>

<p>The use of only the existing workflows enforces commonality to the records within a process. This results in easier integrations, consistency in reporting, the ability to use a common set of performance indicators, and allows the use of common views.</p>

<p>You can modify existing workflows by adding new phases within the defined set of steps (also called meta-phases). Those phases will be used by every record within the associated process.</p>

<p>If you need unique flow and/or functionality within a specific process, SMAX provides models (called Offerings inside the Service Request process). These models allow you to extend the process in a number of ways, including:</p>

<ul>
	<li style="margin-left: 8px;">
	<p>adding additional information for the user or agent to provide, called “User options” to the process</p>
	</li>
	<li style="margin-left: 8px;">
	<p>adding rules that apply to the process using the model</p>
	</li>
	<li style="margin-left: 8px;">
	<p>adding approvals (to applicable processes)</p>
	</li>
	<li style="margin-left: 8px;">
	<p>setting default values</p>
	</li>
	<li style="margin-left: 8px;">
	<p>adding tasks (in series or parallel) to one or more phases of the process</p>
	</li>
</ul>

<p>Further information around workflows and models may be found in the following document:&nbsp;<a href="https://docs.microfocus.com/itom/SMAX:2020.02/PN/pn5eaa11a4670d23.08425592">Enhancing Workflow with Models</a></p>

<p><br>
&nbsp;</p>

<h3>Using and modifying forms</h3>

<p>Each record type in SMAX has a pre-defined set of forms associated with it. The system uses these forms when displaying records, selecting the correct form based on how the record is being viewed or what action is being taken. While you cannot define new forms, SMAX contains several methods to modify how a specific form is displayed based on the information being viewed.&nbsp;</p>

<p>Workflow rules may be used to modify a form by displaying or hiding entire sections or specific fields on a form. Alternatively these rules can disable certain fields on a form based on other criteria, making it impossible for a user to modify the data it contains. Furthermore, other business rules can change the possible values allowed in specific fields (both for entity links and lists).</p>

<p>If a specific type of process requires unique information, additional fields may be added using the User options definitions in a specific model. These fields are displayed in their own section on the process forms.</p>

<p>Further examples of how forms are used and may be found in <a href="https://docs.microfocus.com/itom/SMAX:latest/PN/pn5ebd7f99ea7b68.92789607">"Working with Forms"</a>.</p>

<p></p>

<h3></h3>
</html>