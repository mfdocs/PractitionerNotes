<h1 style="margin-bottom:0px;">Configure EFS shares</h1><div class="f14 metric" style="color:#656668;display:flex;"><img src="/assets/images/calendar.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="updateDate">&nbsp; Updated on 26/06/2019</span> &nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp; <img src="/assets/images/updated.png" style="height:12px;margin-top:auto;margin-bottom:auto;"><span class="readTime">&nbsp; 2 minutes to read</span>&nbsp;&nbsp;&nbsp;&nbsp;</div><br><div class="mw-parser-output"><p><br>
Before using the Amazon EFS created in the <a href="./itom/Operations_Bridge:2019.05/CoAWSEFSSOpsB" title="Operations Bridge:2019.05/CoAWSEFSSOpsB">EFS</a> section, we need to mount it on the EC2 instance and create necessary directories.
</p>
<ol><li>Connect to the EC2 instance selected as master 1.</li>
<li>Copy&nbsp;and paste the script <b>setup-efs-server.sh</b> provided below in to a sh file.<div class="mw-highlight mw-content-ltr" dir="ltr"><pre>#!/bin/bash 
if [ $# -lt 1 ]; then
	echo "Usage: $0 &lt;efs server fqdn&gt;"
	exit 1
fi
suite_user_uid=1999
suite_user_gid=1999
mount_point=/mnt/efs
efs_server=$1
if [ ! -d $mount_point ]; then 
    sudo mkdir -p $mount_point
fi
export TIMEOUT_FOR_SERVICES=120
#=== FUNCTION ==================================================
# NAME: checkMountEFS
# DESCRIPTION: check aws efs server is ready
#=================================================================
mountEFS() {
	local n=0
	while :; do
		n=$(($n + 1))
		if [[ $n -ge $TIMEOUT_FOR_SERVICES ]]; then
			echo "check timout for mount EFS"
            exit 1
		fi
		sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 $efs_server:/ $mount_point
		if [ $? -eq 0 ] || [ $? -eq 32 ]; then
			echo "Successfully mount EFS"
            sudo sed -i '$a\'"$efs_server:/ $mount_point nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev 0 0" /etc/fstab
			break
		fi
		sleep 15
	done
}
make_volume() {
	local volume=$1
	pushd $(pwd)
	cd $mount_point
	local mounted_pv=${mount_point}${volume}
	if [ ! -d $mounted_pv ]; then 
        sudo mkdir -p $mounted_pv
    fi
	chown -R $suite_user_uid:$suite_user_gid $mounted_pv
	chmod g+w $mounted_pv
	chmod g+s $mounted_pv
	popd

}
mountEFS
make_volume /var/vols/itom/core
make_volume /var/vols/itom/conf
make_volume /var/vols/itom/data
make_volume /var/vols/itom/log
make_volume /var/vols/itom/db-node1-vol
make_volume /var/vols/itom/db-node2-vol
make_volume /var/vols/itom/omi0
make_volume /var/vols/itom/omi1
make_volume /var/vols/itom/db_back
make_volume /var/vols/itom/fluentd_logs</pre></div></li>
<li>Execute the script it as shown below:  <div class="mw-highlight mw-content-ltr" dir="ltr"><pre>sudo ./setup-efs-server.sh fs-e7669xxx.efs.xxx.amazonaws.com</pre></div>You can find your EFS <b>DNS name</b> from the details page:<br> <a onclick="javascript:loadingImage(this);" class="image"><img alt="OpsB201905 EFSDNS.png.jpg" src="/mediawiki/images/7/7c/OpsB201905_EFSDNS.png.jpg" width="764" height="257" data-file-width="764" data-file-height="257"></a></li>
<li>Run the following command on the master node:<div class="mw-highlight mw-content-ltr" dir="ltr"><pre>/tmp/setup-efs-server.sh &lt;fqdn of efs share&gt;</pre></div></li>
<li>Repeat steps 1 to 5 on all other master nodes.</li></ol>

<!-- 
NewPP limit report
Cached time: 20190714193548
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.016 seconds
Real time usage: 0.034 seconds
Preprocessor visited node count: 11/1000000
Preprocessor generated node count: 72/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 2088/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key docops_wiki:pcache:idhash:850385-0!canonical and timestamp 20190714193548 and revision id 1500012
 -->
</div>