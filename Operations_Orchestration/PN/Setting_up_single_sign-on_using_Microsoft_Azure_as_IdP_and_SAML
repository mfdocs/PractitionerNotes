<div><br></div><div>Micro Focus Operations Orchestration supports sign-on (SSO) logins through SAML 2.0.</div><div>One of the used SAML 2.0 Identity Provider (IdP) in production is the Azure Active Directory.</div><div>With SAML single sign-on, Azure AD authenticates to the application by using the user's Azure AD account.</div><div><br></div><div>As Microsoft says:</div><div><br></div><div>"</div><div>To configure SAML single sign-on for a non-gallery application without writing code,&nbsp;</div><div>you need to have a subscription or Azure AD Premium and the application must support SAML 2.0.&nbsp;</div><div>For more information about Azure AD versions, visit&nbsp;<a href="https://azure.microsoft.com/en-us/pricing/details/active-directory/" target="_blank" style="background-color: transparent;">Azure AD pricing.</a></div><div>"</div><div><br></div><div>For more details, see the link from Microsoft regarding&nbsp;<a href="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/configure-single-sign-on-non-gallery-applications" target="_blank" style="background-color: transparent;">configure SAML-basel single sign-on to non-gallery applications</a></div><div><br></div><div><font size="6">Prerequisites</font></div><div><br></div><div>You need to use the following components in order to use Azure AD to login into your OO Central instance:</div><div><br></div><div>The OO Central registerted as an application into to Azure. If the application hasn't been added to your Azure AD tenant, see Add a non-gallery app provided by Azure</div><div>A OO Central Instance</div><div><br></div><div><br></div><div>Step 1 - Trust the Identity Provider</div><div><br></div><div>First step is to import the public keys of the identity provider's certificates into the OO Central internal key.store file located at &lt;path_to_central&gt;/central/var/security.</div><div><br></div><div>1. Access the OO Central registered application from the Azure portal, and from the Single Sign-on page get the SAML Signing Certificate.</div><div><br></div><div>1.jpg</div><div><br></div><div>2. Import them to the OO Central key.store using the following command:</div><div><br></div><div>&lt;path_to_java&gt;/bin/keytool -importcert -keystore key.store -alias &lt;your_custom_alias&gt; -file &lt;path_to_cer_file&gt;/&lt;certificate&gt;.cer</div><div><br></div><div>3. Restart the OO Central instance.</div><div><br></div><div>Step 2 - Configure OO Central instance</div><div><br></div><div>After setting up Azure AD and downloading the certificates, you need to configure your OO Central to authenticate using SAML.</div><div><br></div><div>1. Access the OO Central from your browser, go to System Configuration and select the SAML from the Security page.</div><div><br></div><div>2. Enable the SAML option from the page, then add a new custom Entity ID if you want in the Service Provider area, or keep the predefined "ooentityid"</div><div><br></div><div>3. Add the IDP metadata URL of the Azure AD. The exact URL of the metadata can be taken from the Azure AD portal, from the Single Sign-on page and SAML Signing Certificate section.</div><div>It should look like this:&nbsp;</div><div><br></div><div>https://login.microsoftonline.com/&lt;random_app_id&gt;/federationmetadata/2007-06/federationmetadata.xml?appid=&lt;random_app_id&gt;</div><div><br></div><div>See the above screenshot for more details.</div><div><br></div><div>4. Configure a new custom User name and Group name attribute or keep the predefined "username" and "groups" values.</div><div><br></div><div>Note: Those values will be mapped with the data comming from Azure AD</div><div><br></div><div>5. If the user comming from Azure AD is part of more then one group and those groups are separated within the SAML response, you need to define the Group name delimiter in order to consider each on the groups individual.</div><div><br></div><div>6. In case OO Central cannot directly access the Azure AD, you need to configure a Proxy host and a Port to facilitate the communication between them.</div><div><br></div><div>7. Unfortunately the SAML users cannot be used to execute scheduled OO flows, so you need to configure an Internal user from your OO for scheduling tasks.</div><div><br></div><div>8. Save the configurations using the Save button from the buttom.</div><div><br></div><div>2.jpg</div><div><br></div><div>9. Download the OO Central metadata which needs to be uploaded into the Azure AD, using the Download metadata button.</div><div><br></div><div>Note: Before accessing the OO Central using the Azure AD users, make sure you have an internal admin user, for this.&nbsp;</div><div>If you get locked out, with no access via the identity provider, you can log into OO directly. To log in directly, go to http(s)/&lt;host&gt;:&lt;port&gt;/oo/login/direct.</div><div><br></div><div>Step 3 - Link the OO Central with the Azure AD</div><div><br></div><div>At this point you should be ready to set up the Azure AD connection with your OO Central instance.&nbsp;</div><div>You need to add the basic SAML configuration into the Azure portal, either manual or by uploading the OO Central metadata from above. If you chose option 2,</div><div>Azure will the extract the values of the fields. We suggest to use option 2.</div><div><br></div><div>From Single Sign-On page, click on Upload metadata file button which is located above Basic SAML Configuration section.</div><div>If you already had a OO Central defined, the upload will overwrite the values.</div><div><br></div><div>3.jpg&nbsp;</div><div><br></div><div><br></div><div>Step 4 - Creating user attribute and claim rules</div><div><br></div><div>Once the basic configurations have been created, you can create the claim rules that will facilitate the correct communication between Azure AD and OO Central</div><div><br></div><div><br></div><div>1. Click on Edit button of the Users Attribute &amp; Claims section to create a new claim.&nbsp;</div><div><br></div><div>4.jpg</div><div><br></div><div>2. Then, from the User Attributes &amp; Claims screen, do the following:</div><div><br></div><div>a. Click on the "Add new claim"&nbsp;</div><div>b. On the Name field,&nbsp; type the "username".&nbsp;</div><div><br></div><div>Note: This value should be same with the value of the User name attribute from OO Central configuration page.</div><div><br></div><div>c. Let the Namespace field empty</div><div>d. The Source should be Attribute</div><div>e. Then from the Source Attribute you need to select from the dropdown the user parameter from the Azure AD which will be assigned to the User name attribute defined in OO Central.</div><div>We suggest to select the user.givenname as the Source Attribute</div><div><br></div><div>5.jpg</div><div><br></div><div>e. Click Save to define the new rule.</div><div><br></div><div>3. Add then a group claim , this time selecting Add a group claim option from the same User Attributes &amp; Claims screen</div><div><br></div><div>a. Click on the "Add a group claim"&nbsp;</div><div>b. From the Group Claims screen, select the "All groups" associated with the users to be returned in the claim.</div><div>c. Select the Group ID selected under the Source Attribute dropdown</div><div>d. Check the "Customize the name of the group claim" option</div><div>e. Type the "groups" as the Name (requried) of the claim</div><div><br></div><div>Note: This value should be same with the value of the Group name attribute from OO Central configuration page.</div><div><br></div><div>f. Let the Namespace field empty</div><div><br></div><div>6.jpg</div><div><br></div><div>g. Save the new created claim</div><div><br></div><div>Step 5 - Adjusting the signing algorithm</div><div><br></div><div>The signing algorithm can be adjust for proper communication between the Azure AD and the OO Central.</div><div>To access these settings, click on edit button from the SAML Signing Certificate section.</div><div><br></div><div>1. Inside the config page, make sure SHA-1 is specified as the Signing Algorithm. This is the default value that OO Central is using.</div><div>We suggest also to check the Sign SAML response and assertion as the option from the Signing Option dropdown.</div><div><br></div><div>7.jpg</div><div><br></div><div>Note: Inside the OO Central instance, you can change the Secure Hash Algorithm by adding the following new propertie at the end of the "wrapper.java.additional" list of parameters. Make sure to use numbers that are unique. If the last number is 34 then you can use numbers starting with 35 like below. The value should be sha1, sha256 or sha512. You need to restart the OO Central service after yo do those modifications.</div><div><span style="white-space:pre">		</span></div><div>e.g</div><div>#Extra settings to add Central</div><div>wrapper.java.additional.35=-Dsaml.rsa.algorithm=sha256</div><div><br></div><div>Step 6 - Map the Azure AD Group ID with a OO Central Role</div><div><br></div><div><br></div><div>If you will follow the above steps, then need to map the Group ID of the Azure AD users you want to use into the OO Central, with the OO Cenetral Role yu want them to have it.</div><div><br></div><div>8.jpg</div><div><br></div><div><br></div><div><br></div><div>9.jpg</div><div><br></div><div><br></div><div>Troubleshoting</div><div><br></div><div>If the configurations are not done correctly, the communication between OO Central and Azure AD through SAML can suffer.</div><div>In case of any problem, we suggest to set the SAML logs from OO Central to DEBUG, to be able to see exactly what is the route cause of the issue. You need to restart the OO Central service after yo do those modifications.</div><div>In order to do this, edit the log4j.properties file which is located under the &lt;path_to_central&gt;/central/conf path, and set to DEBUG the SAML paramers, like below:</div><div><br></div><div>#SAML</div><div>log4j.logger.org.springframework.security.saml=DEBUG</div><div>log4j.logger.org.opensaml=DEBUG</div><div><br></div><div>Possible errors that can occur in general.log file:</div><div><br></div><div>1. If Azure AD certificates were not added correctly into the OO Central's key.store, they expired or were changed, the below error can be noticed:</div><div><br></div><div>Caused by: org.opensaml.saml2.metadata.provider.FilterException: Signature trust establishment failed for metadata entry</div><div><span style="white-space:pre">	</span>org.opensaml.saml2.metadata.provider.SignatureValidationFilter.verifySignature(SignatureValidationFilter.java:327)</div><div><span style="white-space:pre">	</span>org.opensaml.saml2.metadata.provider.SignatureValidationFilter.processEntityDescriptor(SignatureValidationFilter.java:178)</div><div><span style="white-space:pre">	</span>org.opensaml.saml2.metadata.provider.SignatureValidationFilter.doFilter(SignatureValidationFilter.java:156)</div><div><span style="white-space:pre">	</span>org.opensaml.saml2.metadata.provider.AbstractMetadataProvider.filterMetadata(AbstractMetadataProvider.java:493)</div><div><span style="white-space:pre">	</span>org.opensaml.saml2.metadata.provider.AbstractReloadingMetadataProvider.processNonExpiredMetadata(AbstractReloadingMetadataProvider.java:395)</div><div><span style="white-space:pre">	</span>... 12 more</div><div><br></div><div>Solution:</div><div><br></div><div>Make sure the Azure AD certificate is valid and correctly added into the OO Central's key.store.</div><div>Don't forget to restart the OO Central service after import.</div><div><br></div><div><br></div><div>2. If the URL of the Azure AD metadata was not set correctly or the communication Azure AD and OO Central is interrupted, you will see the following error:</div><div><br></div><div>https-jsse-nio-8444-exec-2] (SAMLEntryPoint.java:160) DEBUG - Error initializing entry point</div><div>org.opensaml.saml2.metadata.provider.MetadataProviderException: No IDP was configured, please update included metadata with at least one IDP</div><div><span style="white-space:pre">	</span>org.springframework.security.saml.metadata.MetadataManager.getDefaultIDP(MetadataManager.java:795)</div><div><span style="white-space:pre">	</span>org.springframework.security.saml.context.SAMLContextProviderImpl.populatePeerEntityId(SAMLContextProviderImpl.java:157)</div><div><span style="white-space:pre">	</span>org.springframework.security.saml.context.SAMLContextProviderImpl.getLocalAndPeerEntity(SAMLContextProviderImpl.java:127)</div><div><span style="white-space:pre">	</span>org.springframework.security.saml.SAMLEntryPoint.commence(SAMLEntryPoint.java:146)</div><div><span style="white-space:pre">	</span>org.springframework.security.saml.SAMLEntryPoint.doFilter(SAMLEntryPoint.java:107)</div><div><br></div><div>Solution:</div><div><br></div><div>Check once again if the URL of the Azure AD metadata is correct or make sure the communication between the OO Central and Azure AD is not intrerupted.</div><div><br></div><div>3. If attributes are not defined properly or if the Azure AD claims does not correspond with our best practices, you will notice the below error in the server.log file&nbsp;</div><div><br></div><div>https-jsse-nio-8444-exec-10] (IdmConfigurationInfoController.java:42) ERROR - Access is denied</div><div>https-jsse-nio-8444-exec-5] (OOSamlUserDetailsService.java:108) WARN&nbsp; - Attribute "usernamee" does not have any value defined</div><div>https-jsse-nio-8444-exec-5] (AuthenticationListener.java:50) WARN&nbsp; - Username is not defined in the SAML context</div><div>https-jsse-nio-8444-exec-5] (AuthenticationListener.java:52) WARN&nbsp; - Failed to login user "null"</div><div><br></div><div>Solution:</div><div><br></div><div>Double check if the User and Group attribute from OO SAML Configuration page corresponds with the ones from the Azure AD.</div><div><br></div><div>4. If OO Central server has internet access but cannot contact Azure AD, you will see the following error in the logs:</div><div><br></div><div>Caused by: org.opensaml.saml2.metadata.provider.MetadataProviderException: Error retrieving metadata from https://login.microsoftonline.com/&lt;random_app_id&gt;/federationmetadata/2007-06/federationmetadata.xml?appid=&lt;random_app_id&gt;</div><div><span style="white-space:pre">	</span>org.opensaml.saml2.metadata.provider.HTTPMetadataProvider.fetchMetadata(HTTPMetadataProvider.java:274)</div><div><span style="white-space:pre">	</span>org.opensaml.saml2.metadata.provider.AbstractReloadingMetadataProvider.refresh(AbstractReloadingMetadataProvider.java:255)</div><div><span style="white-space:pre">	</span>... 10 more</div><div>Caused by: javax.net.ssl.SSLHandshakeException: Received fatal alert: access_denied</div><div><span style="white-space:pre">	</span>sun.security.ssl.Alerts.getSSLException(Alerts.java:192)</div><div><span style="white-space:pre">	</span>sun.security.ssl.Alerts.getSSLException(Alerts.java:154)</div><div><span style="white-space:pre">	</span>sun.security.ssl.SSLSocketImpl.recvAlert(SSLSocketImpl.java:2020)</div><div><br></div><div><br></div><div>Solution:</div><div><br></div><div>Make sure you have a proxy configured into the OO Central OO SAML Configuration page.</div>