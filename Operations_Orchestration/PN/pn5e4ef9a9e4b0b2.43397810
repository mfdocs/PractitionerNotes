<p>Micro Focus Operations Orchestration (OO) uses business intelligence available in a content pack to automate certain IT processes. Business intelligence inside a content pack is defined in the form of flows. A flow is the composition of steps and transitions forming a set of actions that are linked by decision-making logic in order to automate routine tasks. Some of the example routine tasks are rebooting servers, applying patches on servers, health checks, troubleshooting, etc.&nbsp;</p><p>Enterprises integrate OO with their IT Service Management systems, Event management systems, Network management systems, etc to run routine tasks in OO using REST APIs. Some of the example use cases that enterprises achieve with integration of OO are:</p><p></p><ul><li>Free up disk space on a server based on an event in their Event Management system.</li><li>Restart a failed service on a server based on an event in their Event Management system.</li><li>Provision a virtual machine based on a request in their IT Service Management and/or Hybrid Cloud Management system.</li><li>Reset a user’s password based on a request in their IT Service Management system.</li></ul><div>Applications that need to be integrated with OO can be classified into the following categories:<br></div><div><ul><li>Applications with built-in integrations to OO</li></ul><div>There are built-in integrations with OO for some of the Micro Focus products such as Operations Bridge, Service Management Automation, Hybrid Cloud Management, etc. These built-in integrations with OO have to be configured to make it operational. Refer to the appropriate production documentation to enable and configure integrations.<br></div><ul><li>Applications without built-in integrations to OO</li></ul><div>Applications that do not have built-in integrations with OO have the following options to integrate with OO: OO Shell (OOSH) utility and REST APIs.<br></div></div><p></p><div><ol><li>OO Shell (OOSH) utility</li></ol><div>The OOSH utility is a Micro Focus supplied command line utility which is available for download as a standalone installation package. The OOSH utility allows you to perform various actions on OO such as launching OO flows, deploying content packs, etc from command line. The OOSH utility uses REST API to communicate with OO Central. The OOSH utility can be installed on the same remote server that hosts the application to be integrated with OO. Applications can then be configured to call OOSH command line utility to trigger OO flows based on certain events within the application.&nbsp;<br></div><div><br></div><div>Executing OO flows from OOSH involves the following steps:<br></div><div><div><ul><li>Trigger OO flow execution</li><li>Retrieve status of OO flow execution</li></ul><div><b>Trigger OO flow execution</b><br></div></div></div><div><div><br></div><div>To trigger OO flow execution, invoke OOSH command line utility as follows:&nbsp;</div><div><br></div><pre><div>oosh.bat trigger --uuid &lt;OO flow UUID&gt; --inputs &lt;Comma separated key value map of inputs&gt; </div><div>--user &lt;user with privileges to run the flow&gt; --password &lt;User password&gt; --url &lt;OO Central URL&gt;</div><div><br style="font-family: MetricHPE; white-space: normal; background-color: rgb(255, 255, 255);"></div></pre><div><br></div><div>The following sample screenshot shows oosh command triggering an OO flow. In this sample screenshot, the OO flow was successfully triggered and its execution ID was returned by OO Central.</div></div><div><br></div><div><img src="./mediawiki/images/PN/OO-TriggerFlow-OOSHTrigg.png"><br></div><div><br></div><div><b>Retrieve status of OO flow execution</b><br></div><div><br></div><div><div>To retrieve status of triggered flow, invoke OOSH command line utility from the application as follows:</div><div><br></div><pre>oosh.bat track –id &lt;Execution ID retrieved from last step&gt;  --user &lt;user with privileges to run the flow&gt; </pre><pre>--password &lt;User password&gt; --url &lt;OO Central URL&gt;<br></pre><div><br></div><div>The following sample screenshot shows oosh command tracking status of the previously launched OO flow.&nbsp; In this sample screenshot, the OO flow was successfully executed and its result was returned by OO Central.</div></div><div><br></div><div><img src="./mediawiki/images/PN/OO-IntegrateApps-OOSHRetrieveFlow.png"><br></div><div><br></div><ol><li>REST APIs</li></ol><div>This article shows a Microsoft PowerShell script that uses REST APIs to:<br></div></div><div><div><ul><li>Trigger OO flow execution for the supplied OO flow.</li><li>Check flow execution completion status every 10 seconds. The interval to check flow execution status is configurable.</li><li>Once flow execution status changes to any status other than “RUNNING”, script prints the flow execution results returned by OO and exits.</li></ul><div>The following screenshot shows a sample output generated by the script:<br></div></div></div><div><br></div><div><img src="./mediawiki/images/PN/OO-IntegrateApps-ScriptOutput.png"><br></div><div><br></div><div>Concepts presented in this script can be leveraged and used in an application that needs to be integrated with OO using REST API. This script can be further enhanced to meet your coding style, implement organization specific requirements, perform additional checks required for your environment, to improve performance, to use as a reference to develop it in your preferred programming language, to use as a reference to make other OO REST API calls, etc.<br></div><div><br></div><div><span style="font-size:11.0pt;line-height:107%;
font-family:&quot;Calibri&quot;,sans-serif;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-bidi-theme-font:minor-bidi;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">To
run this script, follow the steps below:</span><br></div><div><span style="line-height: 107%; font-size: 14.6667px;"><font face="Calibri, sans-serif"><div style="">Log on to a system running a MS Windows operating system featuring MS PowerShell</div><div style="">Open a text editor.&nbsp;</div><div style="">Copy contents of this script to the text editor. Save the file as "OOTriggerFlowExec.ps1".</div><div style="">Open MS Windows PowerShell. Navigate to the directory containing this PowerShell script.</div><div style="">Run the " OOTriggerFlowExec.ps1" PowerShell script as follows:&nbsp;</div><div style="">.\OOTriggerFlowExec.ps1 -OOCentralURL https://&lt;OOCentralHostName&gt;:&lt;Port&gt;/oo -UserName admin -Passwd &lt;AdminPassword&gt; -FlowUUID &lt;OOFlowUUID&gt; -FlowRunName &lt;Flow run name&gt; -FlowLogLevel &lt;Standard or Extended&gt; -FlowInputs "input1=value1,input2=value2,inputN=valueN" –FlowSensInputs "input1,input2,inputN"&nbsp;&nbsp;</div><div style="">Use "OOCentralURL", "UserName" and "Passwd" parameters to connect to the OO Central Application. The "OOCentralURL", "UserName" and "Passwd" parameters are mandatory.</div><div style="">Use "FlowUUID" parameter to trigger a specific routine task (OO flow). The "FlowUUID" parameter is mandatory.</div><div style="">Use "FlowRunName" parameter to define a name for the flow execution. This name can then be used to identify the flow execution in OO Central run explorer UI. The "FlowRunName" parameter is optional. If no value is specified, script uses the flow name as defined in the deployed content pack on OO Central.&nbsp;</div><div style="">Use "FlowLogLevel" parameter to define logging level for the flow execution. Valid values for "FlowLogLevel" parameter are as follows: STANDARD and EXTENDED. Use caution while running flows with "EXTENDED" logging level. Flows run with "EXTENDED" log levels store detailed data about flow executions in the database and causes database size to grow quickly. The "FlowLogLevel" parameter is optional. If no value is specified, script uses default value of "STANDARD" for "FlowLogLevel" parameter.</div><div style="">Use "FlowInputs" parameter to define inputs and their corresponding values for flow execution. Specify flow execution inputs in the following "input=value" format: "input1=value1,input2=value2,inputN=valueN". The "FlowInputs" parameter is optional. A flow may or may not have inputs. If a flow requires inputs and no value is specified for the "FlowInputs" parameter, then the script fails.</div><div style="">Use "FlowSensInputs" parameter to define comma separated sensitive input names for flow execution. Specify flow execution sensitive input names in the following format: "input1,input2,inputN". When an input is marked sensitive, its value would be masked in OO Central Run Explorer UI. The "FlowSensInputs" parameter is optional. A flow may or may not have sensitive inputs. Sensitive input names must have been specified as one of the "FlowInputs" input value pair.</div></font></span></div>