Micro Focus Operations Orchestration (OO) uses business intelligence available in a content pack to automate certain IT processes. Following are the various categories of content packs that can be deployed onto an OO Central Application Server:<div><div><ol><li>Content packs supported by Micro Focus.&nbsp; Base content pack, database content pack, virtualization content pack are some of the examples of Micro Focus supported content packs.</li><li>Content packs contributed by Micro Focus community.</li><li>Custom content packs developed by enterprises. These custom content packs are typically built using content in Micro Focus supplied content packs.&nbsp;</li></ol><div>A content pack is uniquely identified by its name and its deployed version. Enterprises running OO often have separate environments for development, staging and production. Enterprises would like to keep deployed content packs identical across staging and production environments for the following reasons:<br></div></div></div><div><ul><li>Ensure that unauthorized content packs are not in production OO environment.</li><li>Ensure that only the tested content packs from staging environment are in production OO environment.</li><li>Confidently reproduce a production environment issue in staging environment. Eliminate issues due to content pack and version differences between environments.&nbsp;</li></ul><div><div>This article shows a power shell script that can be used to compare deployed content packs and their versions across two separate OO Central Application Server environments. This script can be further enhanced to meet your coding style, perform additional checks required for your environment, to improve performance, to use as a reference to develop it in your preferred programming language, to use as a reference to make other OO REST API calls, etc. At a high level, this script performs the following:</div><div><br></div><div><ul><li>Validates input values.&nbsp;</li><li>Compares content packs and their versions deployed on two separate OO Central Application server environments.</li><li>Writes a report that displays content packs that are identical in both environments and content packs that are in one environment but not in the other environment.</li></ul><div><div>Following is the sample report generated by the script:</div><div><br></div><div>********** Sample report *********</div><div>Content packs deployed on OO Central AppServer1 but not on AppServer2</div><div>"Base","1.12.0"</div><div>"F5 BIG-IP","2.3.2"</div><div>"F5 BIG-IP LTM Load Balancer","17.9.0"</div><div><br></div><div>Content packs deployed on OO Central AppServer2 but not on AppServer1</div><div>"Base","1.15.0"</div><div>"Virtualization","1.16.3"</div><div>"VMware vCenter (CloudSlang)","1.2.5"</div><div>"VMWare vCenter Compute","16.07"</div><div>"VMWare vCenter Compute Seq","16.12"</div><div><br></div><div>Content packs deployed on both OO Central AppServer1 and AppServer2</div><div>"Amazon AWS (CloudSlang)","1.2.1"</div><div>"ARA OO [1.0.1]","1.0.4"</div><div>"AutoGenerate","1.0.0-SNAPSHOT"</div><div>"Base (CloudSlang)","1.2.3"</div><div>"Base Utility","17.9.9"</div><div><br></div><div>********** Sample report *********</div></div></div></div></div><div><br></div><div><div>The generated report contains the following sections:&nbsp;</div><div><ol><li>Content packs deployed on OO Central AppServer1 but not on AppServer2</li><li>Content packs deployed on OO Central AppServer2 but not on AppServer1</li><li>Content packs deployed on both OO Central AppServer1 and AppServer2</li></ol><div>Within each section, content pack name and its version number delimited by a comma character is listed on a separate line. By using this report, OO administrators can take appropriate actions to ensure that their staging and production environments have identical content packs.<br></div></div></div><div><br></div><div><div>To run this script, follow the steps below:</div><div><ol><li>Log on to a system running windows operating system.</li><li>Open a text editor.&nbsp;</li><li>Copy contents of this script to the text editor. Save the file as “OOEnvCompareCP.ps1”.</li><li>Open windows power shell. Navigate to the directory containing this power shell script.</li><li>Run the “OOEnvCompareCP.ps1” powershell script as follows:&nbsp; .\OOEnvCompareCP.ps1 –OOCentralURL1 https://&lt;OOCentralHostName&gt;:&lt;Port&gt;/oo -UserName1 admin -Passwd1 &lt;AdminUserPassword&gt; OOCentralURL2 https://&lt;OOCentralHostName&gt;:&lt;Port&gt;/oo –UserName2 admin –Passwd2 &lt;AdminUserPassword&gt; -OutDir C:\temp</li><li><span style="background-color: transparent;">Use “OOCentralURL1”, “UserName1” and “Passwd1” parameters to connect to the 1st OO Central Application. The “OOCentralURL1”, “UserName1” and “Passwd1” parameters are mandatory.</span></li><li><span style="background-color: transparent;">Use “OOCentralURL2”, “UserName2” and “Passwd2” parameters to connect to the 2nd OO Central Application. The “OOCentralURL2”, “UserName2” and “Passwd2” parameters are mandatory.</span></li><li><span style="background-color: transparent;">Use “OutDir” parameter to supply absolute path to the output directory. The “OutDir” parameter is mandatory. The script writes content pack comparison results to the “OOCPCompareResults.txt” file in the supplied output directory. The script also writes a list of content packs deployed in each OO environments to separate files in the supplied output directory.</span></li></ol></div></div>