CDF-based suites can sometimes experience performance and stability degradation caused by kernel Out of Memory (OOM) conditions.&nbsp; The kernel will kill the runaway process, and then the kubernetes scheduler will start it up again.&nbsp; This cycle can silently repeat itself over periods of hours or days.&nbsp; &nbsp; You can find evidence of this condition with the <i>dmesg</i>&nbsp; command on your system.<div><br></div><div>The most common runaway service is the kubernetes error-logging service <i>fluentd</i>.&nbsp; &nbsp;Because fluentd is written in ruby, the operator may see a very ruby process with the <i>top</i>&nbsp;commmand.&nbsp; &nbsp;One might choose to kill this large process manually, but (as mentioned), the scheduler will re-start it.</div><div><br></div><div>Fluentd itself can be a reliable and scalable service....it has been used to reliably log millions of lines from multiple collectors.&nbsp; At the current time, the root cause of the cascading CDF fluentd behavior is unknown....so we will show how to throttle the growth of Ruby and reduce the number of OOM errors.</div><div><br></div><div>This approach was posted by an admin from <i><b>Blue Matador:</b></i></div><div><a href="https://www.bluematador.com/blog/post-mortem-kubernetes-node-oom" target="_blank" rel="noopener noreferrer" data-auth="NotApplicable" id="LPlnk475951" style="margin: 0px; padding: 0px; border: 0px; font-variant-numeric: inherit; font-variant-east-asian: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: Calibri, Arial, Helvetica, sans-serif; vertical-align: baseline; outline: 0px;">https://www.bluematador.com/blog/post-mortem-kubernetes-node-oom</a><br></div><div><br></div><div>The author of this article was not able to track down the root cause in his environment....so he implemented environment changes to control Ruby.</div><div><br></div><div>On our CDF systems, we would make these changes in the file /var/vols/itom/core/yamlContent/itom-fluentd.yaml</div><div><br></div><div>Before we make any changes, let's make a copy of the original file</div><div><br></div><div># cd /var/vols/itom/core/yamlContent</div><div># cp itom-fluentd.yaml /tmp</div><div><br></div><div>Now edit the file&nbsp; <i>itom-fluentd.yaml&nbsp;</i>and add the environment variables from Blue Matador.&nbsp; We'll make the changes in the <i>containers</i>&nbsp;area, in the <i>fluentd</i>&nbsp;section,&nbsp; in the <i>env</i>&nbsp;lines.</div><div><br></div><div><pre class=" language-yaml" style="box-sizing: border-box; overflow: auto; color: rgb(255, 255, 255); background: rgb(34, 54, 83); text-shadow: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin-top: 0.5em; margin-bottom: 0.5em; font-size: 16px;"><code class=" language-yaml" style="box-sizing: border-box; color: rgb(255, 255, 255); background-image: initial; background-position: 0px center; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-shadow: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;">env:
        - name: RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR
          value: "0.9"</code></pre></div><div>He then sets some different resource limits:&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;cpu requests: "100m" (same as the original)</div><div>&nbsp; &nbsp; &nbsp; &nbsp;memory requests: "128Mi" (vs the original of 200Mi)</div><div>&nbsp; &nbsp; &nbsp; &nbsp;cpu limits: "250m" (vs the original&nbsp; of 1000m)</div><div>&nbsp; &nbsp; &nbsp; &nbsp;memory limits "1024Mi" (vs the original of 400Mi)</div><div><br></div><div><pre class=" language-yaml" style="box-sizing: border-box; overflow: auto; color: rgb(255, 255, 255); background: rgb(34, 54, 83); text-shadow: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin-top: 0.5em; margin-bottom: 0.5em; font-size: 16px;"><code class=" language-yaml" style="box-sizing: border-box; color: rgb(255, 255, 255); background-image: initial; background-position: 0px center; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-shadow: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;">resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "250m"</code></pre></div><div><br></div><div><br></div><div>The next step is to delete the original fluentd pod:</div><div>&nbsp;# kubectl delete -f /tmp/itom-fluentd.yaml</div><div><br></div><div>And then create its replacement using the modified file:</div><div># kubectl create -f /var/vols/itom/core/yamlContent/itom-fluentd.yaml</div><div><br></div><div>This should greatly reduce the number of kubernetes services killed by the kernel for OOM errors.</div><div><br></div>