<p>Business Value Dashboards present your data&nbsp;in real time in a very flexible layout for visualizing on any browser capable device.&nbsp; Within Micro Focus Network Operations Management (NOM) suite, there are several out-of-the-box data sources, such as incidents from Network Node Manager (NNMi) and device configuration and vulnerability from Network Automation (NA).&nbsp; These data sources can be streamed to BVD when integration is enabled.&nbsp;&nbsp; However, the current NOM Suite&nbsp;by default does not&nbsp;include an out-of-the-box performance metrics data source for BVD.&nbsp; This article will demonstrate how to build a new data channel solution to achieve this with a concrete use case.</p>

<p><strong>Use Case Description</strong>:&nbsp; Due to the COVID-19 outbreak, Company A is requesting all its employees to work from home.&nbsp; The company is responding to an urgent request from top management and needs to conduct a network stress test.&nbsp; This is done to make sure its network infrastructure is capable of providing sufficient bandwidth and to identify bottlenecks rapidly. Also top managers request insight into network status and performance.&nbsp; They want to use NOM to capture the required metrics to validate the test and stream the results to business executuve dashboard (BVD), such as the one shown below:</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; <img style="border:0px solid black; height:220px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:450px" alt="" src="/mediawiki/images/pn_images/pn_image_5e71211e576c49.21261410.png" border="0" vspace="0" hspace="0"></p>

<p><strong>Use Case Implementation:</strong> The use story was implemented in the following three steps</p>

<ol>
	<li>Determine the metrics to be collected for the test,</li>
	<li>Configure NNMi to collect these metrics,</li>
	<li>Create a script to retrieve the collected metrics from NNMi NPS and stream them to a BVD dashboard.</li>
</ol>

<p>Note: The NNM iSPI Performance for Metrics (NPS) is required for this solution, as the metrics to be collected in this use case are all performance metrics.&nbsp;</p>

<p>Details for each steps are described below:<br>
<br>
<strong>Step 1 - Determine the metrics to be collected&nbsp; </strong><br>
After some investigation of the devices, it was determined that the following metrics need to be collected to understand the devices’ current “stress level”:</p>

<ol>
	<li>The number of concurrent session on a company’s firewall server. This number indicates how many users are concurrently connected to the company’s VPN.&nbsp;</li>
	<li>CPU utilization of the router behind the firewall server</li>
	<li>Interface utilization of the router behind the firewall server.</li>
</ol>

<p>The number of concurrent session is not part of NNMi standard polling metrics.&nbsp; After reviewing the SNMP MIB on the firewall server (Cisco Adaptive Security Appliance Version 9.12(2)5), the MIB variable cfwConnectionStatValue.40.6 (OID:1.3.6.1.4.1.9.9.147.1.2.2.2.1.3.40.6) was found to contain the number of concurrent session.<br>
For devices other than this particular Cisco Security Appliance, proceed in an similar way: examine the device’s MIB, identify the MIB variable(s) that describe current device load or capacity, and take note of the corresponding OID.<br>
CPU and Interface utilizations are part of NNMi standard performance polling and don’t need to be configured through custom polling.&nbsp;<br>
<br>
<strong>Step 2 - Configure NNMi to collect the metrics</strong><br>
The MIB variable identified in Step 1, cfwConnectionStatValue, is not part of NNMi’s standard (out-of-the-box) SNMP polling.&nbsp; NNMi provides a feature called “Custom Poller” which allows users to collect non-standard MIB variables.&nbsp;<br>
Create a custom poller “ConcurrentSessionPoller” as shown below:<br>
<br>
<img style="height:286px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:400px" alt="" src="/mediawiki/images/pn_images/pn_image_5e7041259a60c0.12181320.png"></p>

<p>(The details of creating a custom poller is not covered in this article.&nbsp; Instructions can be found <a href="https://docs.microfocus.com/NNMi/10.30/Content/Administer/nmAdminHelp/nmAdmConfCP0200CreateCPCol.htm">here</a>)<br>
This custom poller will be polling the number of concurrent session from the firewall server every 5 minutes and store data in the NPS server.<br>
To limit the impact of polling for CPU and Interface utilizations on all devices, create a node group “COVID-19” containing only those devices of interest for this use case: the firewall server and the router:<br>
<br>
<img style="height:332px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:400px" alt="" src="/mediawiki/images/pn_images/pn_image_5e704e696e2a71.50936361.png"><br>
Then enable the performance polling on the node group:<br>
<br>
<img style="height:304px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:400px" alt="" src="/mediawiki/images/pn_images/pn_image_5e704e69bf2631.41329245.png"></p>

<p><strong>Step 3 - Create a script to retrieve the collected metrics from NNMi NPS and stream them to BVD</strong><br>
As the title indicated, this article is mainly about streaming performance metrics from NNMi to BVD.&nbsp; Therefore this is the most important step.&nbsp; In this step, we wrote a script which essentially performs three tasks:</p>

<ol>
	<li>Execute SQL queries to retrieve CPU utilization, interface utilization and number of concurrent user&nbsp;sessions from NPS Sybase DB (using dbisql CLI)</li>
	<li>Format the query results in JSON format</li>
	<li>Post the JSON-formatted messages to the BVD server (using curl CLI)</li>
</ol>

<p>These tasks are repeated every 5 minutes.<br>
Once the script established a stream data channel with the BVD server for each metric, these performance metrics will be available to choose in BVD Dashboard Configuration page:<br>
&nbsp;</p>

<p><img style="height:372px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:400px" alt="" src="/mediawiki/images/pn_images/pn_image_5e704e6a1638a1.14192800.png"></p>

<p>Now, each metric (data channel) can easily be associated with a particular widget in your dashboard. Streamed metrics will immediately be visible in BVD as shown in the following example.</p>

<p><strong>Example – </strong>This example consisted of two BVD dashboards, a top-level executive dashboard and a drill-down dashboard showing more network performance data. &nbsp;The content of each dashboard is described as the following:</p>

<ol>
	<li>The top-level executive dashboard displays the company’s VPN architecture on the right panel.&nbsp;&nbsp; The VPN is protected by firewall servers and a number of routers were deployed behind the firewall servers.&nbsp; The left panel displays the time-series of the number of concurrent session on 2 firewall servers.<br>
	The firewall widgets or router widgets on the right panel can be configured to link to a drill-down dashboard.<br>
	<br>
	<img style="height:221px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:450px" alt="" src="/mediawiki/images/pn_images/pn_image_5e705bcc878200.04049236.png"><br>
	&nbsp;</li>
	<li>&nbsp;The drill-down dashboard displays network metric data, such as interface and CPU utilization on firewall servers and routers.&nbsp; This dashboard is of more interest to network engineers.&nbsp;<br>
	<br>
	<img style="height:353px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:450px" alt="" src="/mediawiki/images/pn_images/pn_image_5e705bcd1f35b8.99414058.png"></li>
</ol>

<p><strong>Summary - </strong>this article described the implementation of a solution to a use case which allows NOM customers to collect special MIB variables and stream the collected metrics to a BVD dashboard. &nbsp;</p>

<p><strong>Appendix </strong><br>
The main script for this solution is included in this section in its entirety, along with the auxiliary SQL scripts.&nbsp;<br>
Note: &nbsp;the BVD host, BVD API Key, the node group “COVID-19”, and the custom poller data tables in the scripts are user and environment specific. Replace these variables with your own values.&nbsp;</p>

<p><strong>main script</strong>:</p>

<p>BVDURL="https://<span class="marker">&lt;My BVD FQDN&gt;</span>/bvd-receiver/api/submit/"<br>
BVDAPIKEY="<span class="marker">&lt;My BVD API KEY&gt;</span>"<br>
BVDCURLURL="$BVDURL$BVDAPIKEY/dims/NodeName,InterfaceName"<br>
while [ 1 ]<br>
Do<br>
&nbsp;&nbsp;&nbsp; # Retrieve Interface Utilization % from NPS and send to BVD<br>
&nbsp;&nbsp;&nbsp; dbisql -nogui -c "DSN=PerfSPIDSN" ifutil.sql | sed -e '/^\s*$/d' -e '/^-/d' -e '/^Node Name/d' -e '/^(/d' -e '/^Execution/d' | while read line<br>
&nbsp;&nbsp;&nbsp; do<br>
&nbsp;&nbsp;&nbsp; NODENAME=`echo $line | cut -d ' ' -f 1 | cut -d '.' -f 1`<br>
&nbsp;&nbsp;&nbsp; IFNAME=`echo $line | cut -d ' ' -f 2`<br>
&nbsp;&nbsp;&nbsp; IFUTIL=`echo $line | cut -d ' ' -f 3`<br>
&nbsp;&nbsp;&nbsp; IFUTILINT=${IFUTIL%.*}<br>
&nbsp;&nbsp; &nbsp;if [ $IFUTILINT -gt 10 ]; then JSONMSG='{"NodeName":"'$NODENAME'","InterfaceName":"'$IFNAME'","InterfaceUtil%":'$IFUTIL'}'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; curl -k -X POST -H "Content-Type: application/json" -d $JSONMSG $BVDCURLURL<br>
&nbsp;&nbsp;&nbsp; fi<br>
&nbsp;&nbsp;&nbsp; done<br>
<br>
&nbsp;&nbsp;&nbsp; # Retrieve CPU Utilization % from NPS and send to BVD</p>

<p>BVDCURLURL="$BVDURL$BVDAPIKEY/dims/NodeName,MetricGroup"<br>
dbisql -nogui -c "DSN=PerfSPIDSN" cpuutil.sql | sed -e '/^\s*$/d' -e '/^-/d' -e '/^Node Name/d' -e '/^(/d' -e '/^Execution/d' | while read line</p>

<p>do<br>
&nbsp; &nbsp;NODENAME=`echo $line | cut -d ' ' -f 1 | cut -d '.' -f 1`<br>
&nbsp; &nbsp;CPUUTIL=`echo $line | cut -d ' ' -f 2`<br>
&nbsp; &nbsp;CPUUTILINT=${CPUUTIL%.*}&nbsp; &nbsp; &nbsp;JSONMSG='{"NodeName":"'$NODENAME'","MetricGroup":"CPUUtilization","CPUUtil%":'$CPUUTIL'}'<br>
&nbsp; &nbsp;curl -k -X POST -H '"Content-Type:application/json"' -d "'"$JSONMSG"'" '"'$BVDCURLURL'"'<br>
done</p>

<p># Retrieve ConcurrentSession from NPS and send to BVD<br>
BVDCURLURL="$BVDURL$BVDAPIKEY/dims/NodeName,ConcurrentSession"<br>
dbisql -nogui -c "DSN=PerfSPIDSN" cpuutil.sql | sed -e '/^\s*$/d' -e '/^-/d' -e '/^Node Name/d' -e '/^(/d' -e '/^Execution/d' | while read line<br>
&nbsp; &nbsp;&nbsp;do<br>
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;NODENAME=`echo $line | cut -d ' ' -f 1 | cut -d '.' -f 1`<br>
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;CONCURRENTSESSION=`echo $line | cut -d ' ' -f 2`</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; JSONMSG='{"NodeName":"'$NODENAME'","ConcurrentSession” :”’$CONCURRENTSESSION'”}'<br>
&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; curl -k -X POST -H '"Content-Type:application/json"' -d "'"$JSONMSG"'" '"'$BVDCURLURL'"'<br>
&nbsp; &nbsp; done</p>

<p>&nbsp;&nbsp;&nbsp; #sleep 5 minutes and repeat&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp; sleep 300<br>
done</p>

<p><strong>cpuutil.sql: </strong><br>
select rawTable."Node Name",&nbsp; rawTable."CPU 5min Utilization" * 100 as "5 Minute CPU Utilization" from f_Raw_ComponentMetrics rawTable, [g_NodeGroup Type1_ComponentTopology] groupTable where "CPU 5min Utilization" is not NULL and "5 Minute"&nbsp; &gt; (select dateadd(SECOND, -300, max("5 Minute")) from f_Raw_ComponentMetrics) and groupTable.[NodeGroup Type1 Name] in ('<span class="marker">COVID-19</span>') and groupTable."mbrRef" = rawTable."Node UUID"<br>
ORDER by "Node Name", "5 Minute"</p>

<p><strong>ifutil.sql:</strong><br>
select rawTable."Node Name", rawTable."Interface Name", rawTable."Utilization" * 100&nbsp; as "Utilization" from f_Raw_InterfaceMetrics rawTable, [g_NodeGroup Type1_ComponentTopology] groupTable WHERE rawTable."5 Minute"&nbsp; &gt; (select dateadd(SECOND, -300, max("5 Minute")) from f_Raw_InterfaceMetrics) and rawTable.Utilization is NOT NULLand groupTable.[NodeGroup Type1 Name] in ('<span class="marker">COVID-19</span>') and groupTable."mbrRef" = rawTable."Node UUID" ORDER by rawTable."Node Name", rawTable."Interface Name"</p>

<p><strong>concurrentsession.sql:</strong><br>
select rawTable."Node Short Name",&nbsp; rawTable."<span class="marker">CurrentConnect_FW_connects</span>", rawTable."<span class="marker">CurrentConnect_FW_connects</span>" * 0.0252 as "UserSessions", rawTable."5 Minute from [<span class="marker">f_Raw_Concurrent_FW_nps-CustomPollMetrics</span>] rawTable where "5 Minute"&nbsp; &gt; (select dateadd(SECOND, -300, max("5 Minute")) from [<span class="marker">f_Raw_Concurrent_FW_nps-CustomPollMetrics</span>]) and rawTable."Node Short Name" LIKE '&lt;fw1&gt;' ORDER BY "Node Short Name", "5 Minute"</p>

<p>&nbsp;</p>
