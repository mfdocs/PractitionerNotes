<html><p><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:20.0pt" lang="EN-US">MF Network Automation Ansible Integration</span></b></span></span></p>

<p style="text-align:justify"></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">Ansible is a popular IT automation engine that automates configuration management.&nbsp; MF Network Automation (NA) is a market leading solution for enterprise network configuration, change, and compliance management that enables plug and play configuration management solutions … including Ansible.&nbsp; Together MF NA and Ansible provide a combined/complementary solution for implementing powerful automation use cases.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">In this whitepaper, we examine the details of implementing Ansible playbooks as an advanced scripting language in NA.&nbsp; (Note:&nbsp; This document includes information about Ansible Engine only and does not discuss Ansible Tower.)</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b>Example MF NA/Ansible setup:</b></span></span></p>

<p style="margin-left:96px; text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img alt="A picture containing diagram

Description automatically generated" src="/mediawiki/images/pn_images/pn_image_6102afb87b36c6.76355469.png" style="width:395px; height:245px"></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:18.0pt" lang="EN-US">Prerequisites:</span></b></span></span></p>

<ul>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Install Python (2.7&nbsp;or 3.4+&nbsp;version) on the NA server</span></span></span></li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Install the latest version of Ansible on the NA server</span></span></span></li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Install the Cisco IOS collection from galaxy.ansible.com/cisco/ios</span></span></span></li>
</ul>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:18.0pt" lang="EN-US">Configure ansible-playbook interpreter in NA:</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">NA needs to know the location of the ansible-playbook interpreter before executing playbooks. The location of the ansible-playbook interpreter binary, which is installed on the NA server, needs to be provided in the NA UI. The following steps illustrate how this is done.</span></span></p>

<ol>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Login to NA UI</span></span></span></li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Navigate to the Server settings page (Admin -&gt; Administrative Settings -&gt; Server)</span></span></span></li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Locate the <b>Advanced Scripting</b> section in the page.</span></span></span></li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Pick any of the empty scripting language and provide the details </span></span></span>
	<ul style="list-style-type:circle">
		<li><span style="font-size:11pt"><span style="tab-stops:list 1.0in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Scripting Language - name of the language as it needs to appear in the UI</span></span></span></li>
		<li><span style="font-size:11pt"><span style="tab-stops:list 1.0in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Path to Interpreter <i>-</i>&nbsp;location of the python binary. (For example, on Linux -&nbsp;/usr/bin/ansible-playbook)</span></span></span></li>
	</ul>
	</li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Save the changes</span></span></span></li>
</ol>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afb8e82ec2.16588486.png" style="width:623px; height:446px"></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:18.0pt" lang="EN-US">Verify the configuration:</span></b></span></span></p>

<p><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">The changes made in the Server settings will result in a new option while creating a new advanced Diagnostic/Change Plan. </span></span></p>

<ol>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Navigate to New Change Plan page (Devices -&gt; Device Tools -&gt; Change Plans -&gt; New Diagnostic)</span></span></span></li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Select the <b>Advanced Scripting</b> checkbox</span></span></span></li>
	<li><span style="font-size:11pt"><span style="tab-stops:list .5in"><span style="font-family:&quot;Calibri&quot;,sans-serif">Verify that the <b>Language&nbsp;</b>drop down has the newly added scripting language.</span></span></span></li>
</ol>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afb93ff0e9.32792258.png" style="width:608px; height:479px"></span></span></p>

<p style="text-align:justify"></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:14.0pt" lang="EN-US">Maintaining Dynamic NA/Ansible Inventory Sync</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">Ansible playbooks include a <i>hosts</i> parameter that tell the playbooks which inventory elements it is executing against.&nbsp; Calling playbooks from NA requires that Ansible understands the NA inventory.&nbsp; So the next step is to tell Ansible the location where it can find its inventory information.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">(Note: The method shown below is an updated method to the previously documented dynamic script method that used excessive compute resources for continual inventory synchronization.&nbsp; If Ansible access to the NA inventory outside of NA is desired, the dynamic script can still be run to update a hosts file in the Ansible inventory using the NA event system as device/group add/delete events are generated.&nbsp; This avoids excessive use of compute resources.)</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">Using this method, we add individual hosts to the Ansible inventory as NA executes against the devices at runtime.&nbsp; This method is much more efficient.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">In the example below, notice that we add a play at the front of the playbooks to run a task to add the NA device to the inventory using the ansible-playbook add_host command.&nbsp; All subsequent plays in the playbook are handled normally.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img alt="Graphical user interface, text, application

Description automatically generated" src="/mediawiki/images/pn_images/pn_image_6102afb9810069.15488925.png" width="512" height="530"></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:16.0pt" lang="EN-US">NA Advanced Change Plan (ex. ansible-playbook, python script, etc.)</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:14.0pt" lang="EN-US">Create an NA Advanced Change Plan</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">Once the steps above have been completed, the user is ready to create NA Change Plans that run Ansible playbooks.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">First, create a new change plan and select Advanced, and ansible-playbook from the “Language” drop-down.&nbsp; For example, …</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b>Configure the ansible-playbook interpreter:</b></span></span></p>

<p style="margin-left:144px; text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afb9e252e0.69591164.png" width="265" height="368"></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:14.0pt" lang="EN-US">Define Change Plan</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:12.0pt" lang="EN-US">Hosts</span></b></span></span></p>

<p style="text-align:justify"></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">For the “hosts” definition in the ansible-playbook, we need to use the built-in NA runtime variables (ex. “$tc_device_hostname$).&nbsp; This field will be filled in at runtime with the hostname of the device the NA task is executing against.&nbsp; So, when executing playbooks from NA, the “hosts” value in the playbook will always be “$tc_device_hostname$”.</span></span></p>

<p style="text-align:justify"></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:12.0pt" lang="EN-US">Device credentials</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">NA handles all device credential management.&nbsp; There is no need to use Ansible Vault.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">Device credentials used to access managed devices are centrally configured as NA Device Password Rules that include username/password/SNMP credentials for devices and device groups. NA references these password rules when it is attempting to access devices and remembers the correct rule for future reference. &nbsp;</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">NA securely stores these credentials, and these credentials can be accesses by NA runtime variables just like the device hostname information described above.&nbsp; (ex. $tc_device_username$ and $tc_device_password$).&nbsp; There is no need to store NA credentials in Ansible Vault, although externally defined vault variables could still be referenced inside of the playbook definitions. </span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b>Example NA Change Plan using Ansible Playbook:</b></span></span></p>

<p style="margin-left:48px; text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afba4f0326.29620346.png" width="591" height="519"></span></span></p>

<p style="margin-left:48px; text-align:justify"></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:14.0pt" lang="EN-US">Setup Test/Modify Device</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="tab-stops:191.15pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">In the putty session below, we first remove the ios banner login so we can show the device config after the playbook has run and added the banner back to the device configuration.</span></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b>Break the device configuration:</b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afbaafbb55.15777727.png" style="width:420px; height:431px"></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:14.0pt" lang="EN-US">Prepare Change Plan Task</span></b></span></span></p>

<p style="margin-bottom:11px"><span style="font-size:11pt"><span style="line-height:107%"><span style="font-family:&quot;Calibri&quot;,sans-serif">Now that we’ve setup our test device by modifying the SNMP configuration on the device, lets setup our change plan task to run our change plan containing the playbook to set the SNMP configuration.</span></span></span></p>

<p style="margin-bottom:11px"><span style="font-size:11pt"><span style="line-height:107%"><span style="font-family:&quot;Calibri&quot;,sans-serif">Select the change plan to run, and enter the hostname/IP address, and select the “Change Plan to Deploy” as shown below.&nbsp; Then select “Save” to execute the change plan.</span></span></span></p>
<span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b>Example NA Change Plan Task:</b></span></span>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afbaf21792.67823758.png" width="655" height="621"></span></span></p>

<p style="text-align:justify"></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:14.0pt" lang="EN-US">Deploy Change Plan</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">When the change plan completes, review the “Result Details” as shown below.&nbsp; Confirm that the each of the tasks for the play are completed successfully, and that the expected configuration commands are added/removed.</span></span></p>
<span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b>Sample NA Change Plan Task Result showing playbook output:</b></span></span>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afbb338162.95992354.png" width="695" height="453"></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">As you can see above, our change plan has executed each of the tasks defined for the single play defined in our playbook.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">Additionally, with this integration, NA benefits from the Ansible concept of “idempotency”, which is to say that no unnecessary commands are sent to the device.&nbsp; In fact, if we re-run the playbook, we should expect to see that no commands are sent to the device, as the configuration has already been updated.</span></span></p>
<span style="font-size:11pt"><span style="line-height:107%"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:14.0pt" lang="EN-US"><span style="line-height:107%">Re-Deploy Change Plan</span></span></b></span></span></span>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b>Re-running the NA Change Plan highlights the concept of idempotence:</b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><img src="/mediawiki/images/pn_images/pn_image_6102afbb65e435.33305249.png" style="width:614px; height:231px"></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">Sure enough.&nbsp; No new commands were sent because we have already configured the device to its declared state.&nbsp; This shows the concept of idempotency … only update the device when required.&nbsp; Otherwise, do not change anything, and re-running the playbook did not.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif"><b><span style="font-size:18.0pt" lang="EN-US">Conclusion:</span></b></span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">We have shown how to configure and run ansible-playbooks inside of NA Change Plans.&nbsp; In this case, we were defining the YAML code within the Change Plan itself.&nbsp; Look for another whitepaper on calling YAML playbooks checked out from Git in place from NA, instead of defining the YAML inside of NA.</span></span></p>

<p style="text-align:justify"><span style="font-size:11pt"><span style="font-family:&quot;Calibri&quot;,sans-serif">If you have any thoughts/questions/comments/feedback, please feel free to reach out directly at <a href="mailto:matt.miller@microfocus.com" style="color:#0563c1; text-decoration:underline">matt.miller@microfocus.com</a>.&nbsp; I would like to hear from you!</span></span></p>
</html>