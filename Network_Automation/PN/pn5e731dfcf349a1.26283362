<p>Network Automation(NA) offers software upgrade of standalone network devices out of the box. But some of the newer devices like Cisco ASA firewalls can be deployed in a cluster. To upgrade the software on these, NA needs to be cluster aware.&nbsp;</p>

<p>NA offers tools to upgrade device software of clusters. This article shows how the Multi-Task Project, Change Plans and Update Device Software Task capabilities of NA can be used to upgrade Cisco ASA firewalls in a cluster. Also this approach allows you to upgrade multiple ASA clusters in parallel.</p>

<p>&nbsp;</p>

<h2>Preparing the template</h2>

<p>This procedure is done only once and the template is saved. Later on, the saved template can be repeatedly executed as a task.&nbsp; Below are the three steps involved to create the task template</p>

<ol>
	<li>Import the change plans into NA</li>
	<li>Create device groups&nbsp;</li>
	<li>Create a <strong>Multi-Task Project</strong> template</li>
</ol>

<p>&nbsp;</p>

<h3>Import Change Plans into NA</h3>

<p>&nbsp; &nbsp;There are three Change Plans created to solve the use case. They can be found as a single file in the appendix below. Save the contents in a file and import them from the Change Plans page in UI. Refer <a href="https://docs.microfocus.com/itom/Network_Automation:2019.05/ManageChangePlans#Import/export_change_plans">documentation</a> on how to import change plans.</p>

<h3>Create device groups</h3>

<p>&nbsp; &nbsp;A couple of pre-defined empty device groups are needed for this approach. The change plans use these device groups to perform the tasks. Device groups that need to be created -&nbsp;</p>

<ul>
	<li>ASAUpgradeGrp</li>
	<li>UpgradeStdByGrp</li>
</ul>

<p>&nbsp;</p>

<h3>Create Multi-Task Project template</h3>

<p>&nbsp; &nbsp;Create a Multi-Task Project from NA UI (Tasks -&gt; New Multi-Task Project).</p>

<ul>
	<li>Provide a name for the task template.</li>
	<li>Select "Save as task template" under "Save Options".</li>
	<li>Need to create nine sub-tasks in same sequence as mentioned below</li>
</ul>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp; &nbsp;</h3>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 1</h3>

<ol>
	<li>Create a sub-task - Deploy Change Plan.&nbsp;</li>
	<li>Select "ASAUpgradeGrp" for the target "device/group"</li>
	<li>Select the change plan - "Upgrade ASA - Check image exists&nbsp;"</li>
	<li>Provide a text for "ASDM image name" and "Image name". The names here need not be the exact names.</li>
	<li>Save the task.</li>
</ol>

<p>&nbsp; &nbsp; &nbsp;</p>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 2</h3>

<ol>
	<li>Create a sub-task - Deploy Change Plan.&nbsp;</li>
	<li>Select "ASAUpgradeGrp" for the target "device/group"</li>
	<li>Select the change plan - "Upgrade ASA firewall cluster"</li>
	<li>For "Upgrade stage" variable, select "PRE Standby Upgrade"</li>
	<li>Save the task.</li>
</ol>

<p>&nbsp; &nbsp;</p>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 3</h3>

<ol>
	<li>Create a sub-task - Update Device Software.</li>
	<li>Select "UpgradeStdByGrp" and any one ASA firewall device for the target "device/group"</li>
	<li>Select the ASDM image and the OS image that needs to be transferred to the device and upgraded to.</li>
	<li>Check the "Reboot device after deploying software" checkbox.</li>
	<li>Remove only the ASA firewall device selected in step 2 of this task.</li>
	<li>Save the task.</li>
</ol>

<p>Refer <a href="https://docs.microfocus.com/itom/Network_Automation:2019.05/UpdateDeviceSoftware">documentation </a>for more information on "Update Device Software" task.</p>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 4</h3>

<ol>
	<li>Create a sub-task - Deploy Change Plan.&nbsp;</li>
	<li>Select "UpgradeStdByGrp" for the target "device/group"</li>
	<li>Select the change plan - "Upgrade ASA firewall cluster"</li>
	<li>For "Upgrade stage" variable, select "POST Standby Upgrade"</li>
	<li>Save the task.</li>
</ol>

<p>&nbsp;</p>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 5</h3>

<ol>
	<li>Create a sub-task - Deploy Change Plan.&nbsp;</li>
	<li>Select "UpgradeStdByGrp" for the target "device/group"</li>
	<li>Select the change plan - "Upgrade ASA firewall cluster"</li>
	<li>For "Upgrade stage" variable, select "POST Failover"</li>
	<li>Save the task.</li>
</ol>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp;</h3>

<h3 style="color:#aaaaaa; font-style:italic">Task 6</h3>

<ol>
	<li>Create a sub-task - Update Device Software.&nbsp;</li>
	<li>Select "UpgradeStdByGrp" and any one ASA firewall device for the target "device/group"</li>
	<li>Select the ASDM image and the OS image that needs to be transferred to the device and upgraded to.</li>
	<li>Check the "Reboot device after deploying software" checkbox.</li>
	<li>Remove only the ASA firewall device selected in step 2 of this task.</li>
	<li>Save the task.</li>
</ol>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;</h3>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 7</h3>

<ol>
	<li>Create a sub-task - Deploy Change Plan.&nbsp;</li>
	<li>Select "UpgradeStdByGrp" for the target "device/group"</li>
	<li>Select the change plan - "Upgrade ASA firewall cluster"</li>
	<li>For "Upgrade stage" variable, select "POST Failover"</li>
	<li>Save the task.</li>
</ol>

<p>&nbsp; &nbsp;</p>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 8</h3>

<ol>
	<li>Create a sub-task - Discover Driver.&nbsp;</li>
	<li>Select "ASAUpgradeGrp" for the target "device/group"</li>
	<li>In the task options, uncheck "Only if No Driver is set"</li>
	<li>Save the task.</li>
</ol>

<p>&nbsp;</p>

<h3 style="color:#aaaaaa; font-style:italic">&nbsp; &nbsp;Task 9</h3>

<ol>
	<li>Create a sub-task - Deploy Change Plan.&nbsp;</li>
	<li>Select "ASAUpgradeGrp" for the target "device/group"</li>
	<li>Select the change plan - "Upgrade ASA - Group Cleanup"</li>
	<li>Save the task.</li>
</ol>

<p>&nbsp;</p>

<p>Once all the sub-tasks have been created, save the task template.</p>

<p>A sample of how the Multi-Task Project looks like is pasted below -&nbsp;</p>

<p><img alt="" src="/mediawiki/images/pn_images/pn_image_5e735e676b2b65.63429261.png" style="height:741px; margin-bottom:0px; margin-left:0px; margin-right:0px; margin-top:0px; width:1148px"></p>

<p>&nbsp;</p>

<h2>Running the Multi-Task Project template</h2>

<p>Once the task template is saved, it can be scheduled as a task repeatedly by only changing the required parameters at task creation time. Task template can be deployed from the task template page.</p>

<p>Running the task template requires editing values in three sub-tasks of the template</p>

<p><strong>Edit Task 1</strong> -</p>

<ul>
	<li>Add all the primary and secondary devices of all the ASA clusters that need to be upgraded to a specific software version.</li>
	<li>Provide the names of the ASDM image and OS image that the devices will be upgraded to.</li>
	<li>Save the task</li>
</ul>

<p>&nbsp;</p>

<p><strong>Edit Task 3 -&nbsp;</strong></p>

<ul>
	<li>Add any one ASA device in the device selector along with the already existing device group.</li>
	<li>Select the OS image and the ASDM image in the Image set.</li>
	<li>Remove the only the device that was added in the above step</li>
	<li>Save the task</li>
</ul>

<p>Repeat the same steps as "Edit Task 3" to edit Task 6 as well.</p>

<p>Save and execute&nbsp;the task. Once the entire multi-task project task completes, all the ASA firewall clusters should have been upgraded to the new software version.</p>

<h2>Appendix</h2>

<h3>Change Plans:</h3>

<pre><code class="language-vim">&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;&lt;rn-export&gt;
&lt;PowerScriptVO&gt;
&lt;PowerScriptID&gt;1081&lt;/PowerScriptID&gt;
&lt;ScriptName&gt;Upgrade ASA - Check image exists&lt;/ScriptName&gt;
&lt;Description/&gt;
&lt;CreateUserID&gt;481&lt;/CreateUserID&gt;
&lt;CreateDate&gt;2019-06-12 20:07:52:643&lt;/CreateDate&gt;
&lt;LastModifiedDate&gt;2019-10-01 11:10:01:459&lt;/LastModifiedDate&gt;
&lt;ScriptMode&gt;Any Device Family&lt;/ScriptMode&gt;
&lt;RunRollBack&gt;0&lt;/RunRollBack&gt;
&lt;UseRegex&gt;0&lt;/UseRegex&gt;
&lt;PowerScritCustFld1&gt;1&lt;/PowerScritCustFld1&gt;
&lt;PowerScritCustFld2&gt;1&lt;/PowerScritCustFld2&gt;
&lt;LastModifiedUserID&gt;481&lt;/LastModifiedUserID&gt;
&lt;Tag&gt;ASA firewall cluster&lt;/Tag&gt;
&lt;/PowerScriptVO&gt;
&lt;PowerChangeScriptVO&gt;
&lt;ChangeScriptID&gt;901&lt;/ChangeScriptID&gt;
&lt;PowerScriptID&gt;1081&lt;/PowerScriptID&gt;
&lt;CustomScriptID&gt;1811&lt;/CustomScriptID&gt;
&lt;ScriptType&gt;0&lt;/ScriptType&gt;
&lt;CreateDate&gt;2019-06-12 20:07:52:679&lt;/CreateDate&gt;
&lt;LastModifiedDate&gt;2019-06-12 20:07:52:679&lt;/LastModifiedDate&gt;
&lt;ChangeScriptCustFld1&gt;0&lt;/ChangeScriptCustFld1&gt;
&lt;ChangeScriptCustFld2&gt;Any Device Family&lt;/ChangeScriptCustFld2&gt;
&lt;/PowerChangeScriptVO&gt;
&lt;CustomScriptVO&gt;
&lt;CustomScriptID&gt;1811&lt;/CustomScriptID&gt;
&lt;Name&gt;Upgrade ASA - Check image exists&lt;/Name&gt;
&lt;Description/&gt;
&lt;Parameters&gt;Perl|&lt;/Parameters&gt;
&lt;ScriptType&gt;8&lt;/ScriptType&gt;
&lt;ScriptMode&gt;Any Device Family&lt;/ScriptMode&gt;
&lt;Script&gt;#!/usr/bin/perl&amp;#13;
use strict;&amp;#13;
use warnings;&amp;#13;
use Getopt::Long;&amp;#13;
use Opsware::NAS::Connect;&amp;#13;
&amp;#13;
my($host, $port, $user, $pass) = ('localhost','$tc_proxy_telnet_port$','$tc_user_username$','$tc_user_password$');&amp;#13;
my $device = '#$tc_device_id$';&amp;#13;
my $image_name = '$Image_Name$';&amp;#13;
my $asdm_name = '$ASDM_image_Name$';&amp;#13;
my @output;&amp;#13;
&amp;#13;
my $con = Opsware::NAS::Connect-&amp;gt;new(-user =&amp;gt; $user, -pass =&amp;gt; $pass, -host =&amp;gt; $host, -port =&amp;gt; $port);&amp;#13;
&amp;#13;
$con-&amp;gt;login();&amp;#13;
$con-&amp;gt;connect( $device ) or die "Failed to connect.";&amp;#13;
&amp;#13;
$con-&amp;gt;cmd("terminal length 0");&amp;#13;
&amp;#13;
	&amp;#13;
print "dir\n";&amp;#13;
@output = $con-&amp;gt;cmd("dir");&amp;#13;
my $file_content = join("\n",@output);&amp;#13;
print("\t$file_content\n");&amp;#13;
&amp;#13;
my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime();&amp;#13;
my $bkpName = "$year\_$mon\_$mday\_$hour\_$min.bkp";&amp;#13;
&amp;#13;
if (index($file_content, $image_name) != -1) {&amp;#13;
      print "Found existing image with same name: $image_name. Renaming with $bkpName.\n";&amp;#13;
     print "\nrename /noconfirm disk0:/$image_name disk0:/$image_name\_$bkpName\n";&amp;#13;
     @output = $con-&amp;gt;cmd("rename /noconfirm disk0:/$image_name disk0:/$image_name\_$bkpName");&amp;#13;
   }&amp;#13;
&amp;#13;
if (index($file_content, $asdm_name) != -1) {&amp;#13;
      print "Found existing image with same name: $asdm_name. Renaming with $bkpName.\n";&amp;#13;
     print "\nrename /noconfirm disk0:/$asdm_name disk0:/$asdm_name\_$bkpName\n";&amp;#13;
     @output = $con-&amp;gt;cmd("rename /noconfirm disk0:/$asdm_name disk0:/$asdm_name\_$bkpName");&amp;#13;
   }&amp;#13;
	&amp;#13;
@output = $con-&amp;gt;disconnect();&amp;#13;
&amp;#13;
@output = $con-&amp;gt;cmd("add device to group -deviceid $tc_device_id$ -group ASAUpgradeGrp");&amp;#13;
&amp;#13;
$con-&amp;gt;logout();&amp;#13;
undef $con;&amp;#13;
exit(0);&lt;/Script&gt;
&lt;CreateUserID&gt;481&lt;/CreateUserID&gt;
&lt;LastModifyUserID&gt;481&lt;/LastModifyUserID&gt;
&lt;CreateDate&gt;2019-06-12 20:07:52:663&lt;/CreateDate&gt;
&lt;LastModifyDate&gt;2019-10-01 11:05:37:089&lt;/LastModifyDate&gt;
&lt;VariableData&gt;&amp;lt;variables&amp;gt;&amp;lt;variable name="tc_proxy_telnet_port" reserved="proxy" enabled="true"/&amp;gt;&amp;lt;variable name="tc_user_username" reserved="user" enabled="true"/&amp;gt;&amp;lt;variable name="tc_user_password" reserved="user" enabled="true"/&amp;gt;&amp;lt;variable name="tc_device_id" reserved="device" enabled="true"/&amp;gt;&amp;lt;variable name="Image_Name" enabled="true"/&amp;gt;&amp;lt;variable name="ASDM_image_Name" enabled="true"/&amp;gt;&amp;lt;/variables&amp;gt;&lt;/VariableData&gt;
&lt;TaskType/&gt;
&lt;/CustomScriptVO&gt;
&lt;PowerScriptVO&gt;
&lt;PowerScriptID&gt;1201&lt;/PowerScriptID&gt;
&lt;ScriptName&gt;Upgrade ASA - Group Cleanup&lt;/ScriptName&gt;
&lt;Description/&gt;
&lt;CreateUserID&gt;481&lt;/CreateUserID&gt;
&lt;CreateDate&gt;2019-10-01 21:01:19:673&lt;/CreateDate&gt;
&lt;LastModifiedDate&gt;2019-10-01 21:10:48:067&lt;/LastModifiedDate&gt;
&lt;ScriptMode&gt;Any Device Family&lt;/ScriptMode&gt;
&lt;RunRollBack&gt;0&lt;/RunRollBack&gt;
&lt;UseRegex&gt;0&lt;/UseRegex&gt;
&lt;PowerScritCustFld1&gt;1&lt;/PowerScritCustFld1&gt;
&lt;PowerScritCustFld2&gt;1&lt;/PowerScritCustFld2&gt;
&lt;LastModifiedUserID&gt;481&lt;/LastModifiedUserID&gt;
&lt;Tag&gt;ASA firewall cluster&lt;/Tag&gt;
&lt;/PowerScriptVO&gt;
&lt;PowerChangeScriptVO&gt;
&lt;ChangeScriptID&gt;1101&lt;/ChangeScriptID&gt;
&lt;PowerScriptID&gt;1201&lt;/PowerScriptID&gt;
&lt;CustomScriptID&gt;2001&lt;/CustomScriptID&gt;
&lt;ScriptType&gt;0&lt;/ScriptType&gt;
&lt;CreateDate&gt;2019-10-01 21:04:57:133&lt;/CreateDate&gt;
&lt;LastModifiedDate&gt;2019-10-01 21:04:57:133&lt;/LastModifiedDate&gt;
&lt;ChangeScriptCustFld1&gt;0&lt;/ChangeScriptCustFld1&gt;
&lt;ChangeScriptCustFld2&gt;Any Device Family&lt;/ChangeScriptCustFld2&gt;
&lt;/PowerChangeScriptVO&gt;
&lt;CustomScriptVO&gt;
&lt;CustomScriptID&gt;2001&lt;/CustomScriptID&gt;
&lt;Name&gt;Upgrade ASA - group cleanup&lt;/Name&gt;
&lt;Description/&gt;
&lt;Parameters&gt;Perl|&lt;/Parameters&gt;
&lt;ScriptType&gt;8&lt;/ScriptType&gt;
&lt;ScriptMode&gt;Any Device Family&lt;/ScriptMode&gt;
&lt;Script&gt;#!/usr/bin/perl&amp;#13;
use strict;&amp;#13;
use warnings;&amp;#13;
use Getopt::Long;&amp;#13;
use Opsware::NAS::Connect;&amp;#13;
&amp;#13;
my($host, $port, $user, $pass) = ('localhost','$tc_proxy_telnet_port$','$tc_user_username$','$tc_user_password$');&amp;#13;
my $device = '#$tc_device_id$';&amp;#13;
my @output;&amp;#13;
&amp;#13;
my $con = Opsware::NAS::Connect-&amp;gt;new(-user =&amp;gt; $user, -pass =&amp;gt; $pass, -host =&amp;gt; $host, -port =&amp;gt; $port);&amp;#13;
&amp;#13;
$con-&amp;gt;login();&amp;#13;
&amp;#13;
print "\nDelete device ($tc_device_id$) from UpgradeStdByGrp group\n\n";&amp;#13;
	   @output = $con-&amp;gt;cmd("del device from group -deviceid $tc_device_id$ -group UpgradeStdByGrp");&amp;#13;
&amp;#13;
print "\nDelete device ($tc_device_id$) from ASAUpgradeGrp group\n\n";&amp;#13;
	   @output = $con-&amp;gt;cmd("del device from group -deviceid $tc_device_id$ -group ASAUpgradeGrp");&amp;#13;
&amp;#13;
print join("\n",@output);&amp;#13;
&amp;#13;
&amp;#13;
$con-&amp;gt;logout();&amp;#13;
undef $con;&amp;#13;
exit(0);&lt;/Script&gt;
&lt;CreateUserID&gt;481&lt;/CreateUserID&gt;
&lt;LastModifyUserID&gt;481&lt;/LastModifyUserID&gt;
&lt;CreateDate&gt;2019-10-01 21:04:57:116&lt;/CreateDate&gt;
&lt;LastModifyDate&gt;2019-10-01 21:10:32:078&lt;/LastModifyDate&gt;
&lt;VariableData&gt;&amp;lt;variables&amp;gt;&amp;lt;variable name="tc_proxy_telnet_port" reserved="proxy" enabled="true"/&amp;gt;&amp;lt;variable name="tc_user_username" reserved="user" enabled="true"/&amp;gt;&amp;lt;variable name="tc_user_password" reserved="user" enabled="true"/&amp;gt;&amp;lt;variable name="tc_device_id" reserved="device" enabled="true"/&amp;gt;&amp;lt;/variables&amp;gt;&lt;/VariableData&gt;
&lt;TaskType/&gt;
&lt;/CustomScriptVO&gt;
&lt;PowerScriptVO&gt;
&lt;PowerScriptID&gt;1031&lt;/PowerScriptID&gt;
&lt;ScriptName&gt;Upgrade ASA firewall cluster&lt;/ScriptName&gt;
&lt;Description/&gt;
&lt;CreateUserID&gt;1&lt;/CreateUserID&gt;
&lt;CreateDate&gt;2019-06-03 10:10:42:598&lt;/CreateDate&gt;
&lt;LastModifiedDate&gt;2019-10-01 20:47:23:115&lt;/LastModifiedDate&gt;
&lt;ScriptMode&gt;Any Device Family&lt;/ScriptMode&gt;
&lt;RunRollBack&gt;0&lt;/RunRollBack&gt;
&lt;UseRegex&gt;0&lt;/UseRegex&gt;
&lt;PowerScritCustFld1&gt;1&lt;/PowerScritCustFld1&gt;
&lt;PowerScritCustFld2&gt;1&lt;/PowerScritCustFld2&gt;
&lt;LastModifiedUserID&gt;481&lt;/LastModifiedUserID&gt;
&lt;Tag&gt;ASA firewall cluster&lt;/Tag&gt;
&lt;/PowerScriptVO&gt;
&lt;PowerChangeScriptVO&gt;
&lt;ChangeScriptID&gt;851&lt;/ChangeScriptID&gt;
&lt;PowerScriptID&gt;1031&lt;/PowerScriptID&gt;
&lt;CustomScriptID&gt;1761&lt;/CustomScriptID&gt;
&lt;ScriptType&gt;0&lt;/ScriptType&gt;
&lt;CreateDate&gt;2019-06-03 10:10:42:646&lt;/CreateDate&gt;
&lt;LastModifiedDate&gt;2019-06-03 10:10:42:646&lt;/LastModifiedDate&gt;
&lt;ChangeScriptCustFld1&gt;0&lt;/ChangeScriptCustFld1&gt;
&lt;ChangeScriptCustFld2&gt;Any Device Family&lt;/ChangeScriptCustFld2&gt;
&lt;/PowerChangeScriptVO&gt;
&lt;CustomScriptVO&gt;
&lt;CustomScriptID&gt;1761&lt;/CustomScriptID&gt;
&lt;Name&gt;Upgrade ASA firewall cluster&lt;/Name&gt;
&lt;Description/&gt;
&lt;Parameters&gt;Perl|&lt;/Parameters&gt;
&lt;ScriptType&gt;8&lt;/ScriptType&gt;
&lt;ScriptMode&gt;Any Device Family&lt;/ScriptMode&gt;
&lt;Script&gt;#!/usr/bin/perl&amp;#13;
use strict;&amp;#13;
use warnings;&amp;#13;
use Getopt::Long;&amp;#13;
use Opsware::NAS::Connect;&amp;#13;
&amp;#13;
my($host, $port, $user, $pass) = ('localhost','$tc_proxy_telnet_port$','$tc_user_username$','$tc_user_password$');&amp;#13;
my $device = '#$tc_device_id$';&amp;#13;
my $upgrade_stage = '$Upgrade_Stage$';&amp;#13;
my @output;&amp;#13;
&amp;#13;
my $con = Opsware::NAS::Connect-&amp;gt;new(-user =&amp;gt; $user, -pass =&amp;gt; $pass, -host =&amp;gt; $host, -port =&amp;gt; $port);&amp;#13;
&amp;#13;
$con-&amp;gt;login();&amp;#13;
&amp;#13;
if($upgrade_stage eq "POST Failover"){&amp;#13;
   print "\nDelete device ($tc_device_id$) from UpgradeStdByGrp group\n\n";&amp;#13;
   @output = $con-&amp;gt;cmd("del device from group -deviceid $tc_device_id$ -group UpgradeStdByGrp");&amp;#13;
}&amp;#13;
&amp;#13;
$con-&amp;gt;connect( $device ) or die "Failed to connect.";&amp;#13;
&amp;#13;
$con-&amp;gt;cmd("terminal length 0");&amp;#13;
&amp;#13;
##################&amp;#13;
print "\n--- show failover ---\n";&amp;#13;
@output = $con-&amp;gt;cmd("show failover");&amp;#13;
my $file_content = join("\n",@output);&amp;#13;
print("\t$file_content\n");&amp;#13;
&amp;#13;
if($file_content =~ /This host:.*?-\s+Standby Ready/){&amp;#13;
&amp;#13;
   print "\n--- show bootvar ---\n";&amp;#13;
   @output = $con-&amp;gt;cmd("show bootvar");&amp;#13;
   $file_content = join("\n",@output);&amp;#13;
   print("\t$file_content\n");&amp;#13;
&amp;#13;
   my $boot_img = "";&amp;#13;
   if($file_content =~ /BOOT variable\s+=\s+\S+:\/(.*)/){&amp;#13;
      print "\n$1";&amp;#13;
      $boot_img = $1;&amp;#13;
   }else{&amp;#13;
      print "\n\n ** Unable to extract boot image ** \n\n";&amp;#13;
      exit(1);&amp;#13;
   }&amp;#13;
&amp;#13;
   print "\n--- show asdm image ---\n";&amp;#13;
   @output = $con-&amp;gt;cmd("show asdm image");&amp;#13;
   $file_content = join("\n",@output);&amp;#13;
   print("\t$file_content\n");&amp;#13;
&amp;#13;
   my $asdm_img = "";&amp;#13;
   if($file_content =~ /.*:\/(.*)/){&amp;#13;
      print "\n$1";&amp;#13;
      $asdm_img = $1;&amp;#13;
   }else{&amp;#13;
      print "\n\n ** Unable to extract asdm image ** \n\n";&amp;#13;
      exit(1);&amp;#13;
   }&amp;#13;
&amp;#13;
   print "\n--- dir ---\n";&amp;#13;
   @output = $con-&amp;gt;cmd("dir");&amp;#13;
   $file_content = join("\n",@output);&amp;#13;
   print("\t$file_content\n");&amp;#13;
&amp;#13;
   if (index($file_content, $boot_img) != -1) {&amp;#13;
      print "Filesystem contains $boot_img\n";&amp;#13;
   }else{&amp;#13;
      print "\n\n ** Unable to find boot image ** \n\n";&amp;#13;
      exit(1);&amp;#13;
   }&amp;#13;
   if (index($file_content, $asdm_img) != -1) {&amp;#13;
      print "Filesystem contains $asdm_img\n";&amp;#13;
   }else{&amp;#13;
      print "\n\n ** Unable to find asdm image ** \n\n";&amp;#13;
      exit(1);&amp;#13;
   }&amp;#13;
&amp;#13;
    if($upgrade_stage eq "POST Standby Upgrade"){&amp;#13;
       print "\n--- failover active ---\n";&amp;#13;
       @output = $con-&amp;gt;cmd("failover active");&amp;#13;
       $file_content = join("\n",@output);&amp;#13;
       print("\t$file_content\n");&amp;#13;
   &amp;#13;
    }elsif($upgrade_stage eq "PRE Standby Upgrade"){&amp;#13;
       @output = $con-&amp;gt;disconnect();&amp;#13;
       @output = $con-&amp;gt;cmd("add device to group -deviceid $tc_device_id$ -group UpgradeStdByGrp");&amp;#13;
	&amp;#13;
	}elsif($upgrade_stage eq "POST Failover"){&amp;#13;
	   @output = $con-&amp;gt;disconnect();&amp;#13;
       @output = $con-&amp;gt;cmd("add device to group -deviceid $tc_device_id$ -group UpgradeStdByGrp");&amp;#13;
	&amp;#13;
	}elsif($upgrade_stage eq "POST Active Upgrade"){&amp;#13;
       print "\n--- failover active ---\n";&amp;#13;
       @output = $con-&amp;gt;cmd("failover active");&amp;#13;
       $file_content = join("\n",@output);&amp;#13;
       print("\t$file_content\n");&amp;#13;
   &amp;#13;
	   print "\nDelete device ($tc_device_id$) from UpgradeStdByGrp group\n\n";&amp;#13;
	   @output = $con-&amp;gt;cmd("del device from group -deviceid $tc_device_id$ -group UpgradeStdByGrp");&amp;#13;
    }&amp;#13;
&amp;#13;
   print join("\n",@output);&amp;#13;
}else{&amp;#13;
 @output = $con-&amp;gt;disconnect();&amp;#13;
}&amp;#13;
&amp;#13;
##################&amp;#13;
&amp;#13;
$con-&amp;gt;logout();&amp;#13;
undef $con;&amp;#13;
exit(0);&lt;/Script&gt;
&lt;CreateUserID&gt;1&lt;/CreateUserID&gt;
&lt;LastModifyUserID&gt;481&lt;/LastModifyUserID&gt;
&lt;CreateDate&gt;2019-06-03 10:10:42:630&lt;/CreateDate&gt;
&lt;LastModifyDate&gt;2019-10-01 20:45:13:263&lt;/LastModifyDate&gt;
&lt;VariableData&gt;&amp;lt;variables&amp;gt;&amp;lt;variable name="tc_proxy_telnet_port" reserved="proxy" enabled="true"/&amp;gt;&amp;lt;variable name="tc_user_username" reserved="user" enabled="true"/&amp;gt;&amp;lt;variable name="tc_user_password" reserved="user" enabled="true"/&amp;gt;&amp;lt;variable name="tc_device_id" reserved="device" enabled="true"/&amp;gt;&amp;lt;variable name="Upgrade_Stage" enabled="true"&amp;gt;&amp;lt;limits type="valueSet"&amp;gt;&amp;lt;value&amp;gt;&amp;lt;![CDATA[POST Failover]]&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;value&amp;gt;&amp;lt;![CDATA[POST Standby Upgrade]]&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;value&amp;gt;&amp;lt;![CDATA[PRE Standby Upgrade]]&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;value&amp;gt;&amp;lt;![CDATA[POST Active Upgrade]]&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/limits&amp;gt;&amp;lt;/variable&amp;gt;&amp;lt;/variables&amp;gt;&lt;/VariableData&gt;
&lt;TaskType/&gt;
&lt;/CustomScriptVO&gt;
&lt;/rn-export&gt;</code></pre>

<p>&nbsp;</p>
